{"version":3,"file":"static/js/60.402ed1d4.chunk.js","mappings":"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","sources":["components/Investor/Feed/Components/LookingForFund/LookingForFund.jsx","components/Investor/Feed/Components/NewsCard/NewsCard.jsx","components/PopUp/ArticlePopup/ArticlePopup.jsx","components/Investor/Feed/Feed.js","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./LookingForFund.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LookingForFund() {\r\n  return (\r\n    <div className=\"looking_for_fund_wrapper bg-black text-white py-3\">\r\n      <div className=\"d-flex align-items-center justify-content-around justify-content-md-between px-md-4 flex-wrap gap-3\">\r\n        <p className=\"m-0 fs-5\">Apply for funding.</p>\r\n\r\n        <Link\r\n          to={\"/funding\"}\r\n          className=\"btn orange_button d-flex align-items-center justify-content-center\"\r\n        >\r\n          <span>Click Here</span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './NewsCard.scss'; \r\n\r\nconst NewsCard = ({ title, description, url, urlToImage, publishedAt }) => {\r\n    return (\r\n        <div className=\"news-card\">\r\n            <img src={urlToImage} alt={title} className=\"news-card__image\" />\r\n            <h3 className=\"news-card__title\">{title}</h3>\r\n            <p className=\"news-card__description\">{description}</p>\r\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"news-card__link\">\r\n                Read more\r\n            </a>\r\n            {/* <span className=\"news-card__date\">{new Date(publishedAt).toLocaleDateString()}</span> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewsCard;\r\n","import React, { useMemo, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./articlePopup.scss\";\r\nimport axios from \"axios\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { addArticle } from \"../../../Service/user\";\r\n\r\nconst ArticlePopup = ({ setArticlePopup, articlePopup }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [content, setValue] = useState(\"\");\r\n  const quillRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const modules = {\r\n    toolbar: {\r\n      container: [\r\n        [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n        [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n        ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n        [{ 'align': [] }],\r\n        [{ 'color': [] }, { 'background': [] }],\r\n        ['link', 'image'],\r\n        ['clean']\r\n      ],\r\n      handlers: {\r\n        image: () => fileInputRef.current.click()\r\n      }\r\n    }\r\n  };\r\n  const handleMemo = useMemo(\r\n    (content, delta, source, editor) => setValue(content),\r\n    [content]\r\n);\r\n  const handleImageUpload = async () => {\r\n    const fileInput = fileInputRef.current;\r\n    if (fileInput && fileInput.files[0]) {\r\n      const file = fileInput.files[0];\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"upload_preset\", \"fiverr\");\r\n\r\n      try {\r\n        const res = await axios.post(\r\n          \"https://api.cloudinary.com/v1_1/dndcersc4/upload\",\r\n          data,\r\n          { withCredentials: false }\r\n        );\r\n\r\n        const quill = quillRef.current.getEditor();\r\n        const range = quill.getSelection();\r\n        if (range) {\r\n          quill.insertEmbed(range.index, 'image', res.data.url);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const quill = quillRef.current.getEditor();\r\n    const content = quill.root.innerHTML;\r\n\r\n    const tempDiv = document.createElement('div');\r\n    tempDiv.innerHTML = content;\r\n    const images = tempDiv.querySelectorAll('img');\r\n\r\n    const imageUploadPromises = Array.from(images).map(async (img) => {\r\n      if (img.src.startsWith('data:')) {\r\n        const file = dataURLToFile(img.src, 'image.png');\r\n        const data = new FormData();\r\n        data.append('file', file);\r\n        data.append('upload_preset', 'fiverr');\r\n\r\n        const res = await axios.post(\r\n          'https://api.cloudinary.com/v1_1/dndcersc4/upload',\r\n          data,\r\n          { withCredentials: false }\r\n        );\r\n\r\n        img.src = res.data.url;\r\n      }\r\n    });\r\n\r\n    try {\r\n      await Promise.all(imageUploadPromises);\r\n      const updatedContent = tempDiv.innerHTML;\r\n      const response = await addArticle(updatedContent);\r\n      \r\n      console.log(\"Updated Content:\", response);\r\n    } catch (error) {\r\n      console.error(\"Error during submission:\", error);\r\n    }\r\n  };\r\n\r\n  const dataURLToFile = (dataurl, filename) => {\r\n    const arr = dataurl.split(',');\r\n    const mime = arr[0].match(/:(.*?);/)[1];\r\n    const bstr = atob(arr[1]);\r\n    let n = bstr.length;\r\n    const u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {articlePopup && <div className=\"createpost-background-overlay\"></div>}\r\n      <div\r\n        className={`create_post_modal rounded-4 p-md-2 ${articlePopup ? \"d-block\" : \"\"}`}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        style={{ maxWidth: \"1000px\", width: \"100%\" }}\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\" style={{ flexDirection: \"column\" }}>\r\n          <div className=\"modal-content\">\r\n            <div className=\"createpost_modal-header\">\r\n              <div className=\"createpostpopup\">\r\n                <div className=\"ceatepost_img_name\">\r\n                  <img\r\n                    src={loggedInUser.profilePicture}\r\n                    width={50}\r\n                    height={50}\r\n                    style={{ objectFit: \"cover\" }}\r\n                    className=\"rounded-circle\"\r\n                    alt=\"profile pic\"\r\n                  />\r\n                  <span>\r\n                    <h2>{loggedInUser?.firstName} {loggedInUser.lastName}</h2>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close d-flex justify-content-end\"\r\n                  onClick={() => setArticlePopup(false)}\r\n                  style={{ background: \"transparent\", border: \"none\" }}\r\n                >\r\n                  <h3 aria-hidden=\"true\" className=\"m-3\">&times;</h3>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <ReactQuill\r\n                value={content}\r\n                onChange={handleMemo}\r\n                modules={modules}\r\n                ref={quillRef}\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                onChange={handleImageUpload}\r\n              />\r\n              <div onClick={handleSubmit} style={{ cursor: \"pointer\" }}>\r\n                Post\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticlePopup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./feed.scss\";\r\n// import profilePic from \"../../../Images/investorIcon/profilePic.webp\";\r\nimport SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RightProfileCard from \"../InvestorGlobalCards/RightProfileCard/RightProfileCard\";\r\nimport FeedPostCard from \"../Cards/FeedPost/FeedPostCard\";\r\nimport CreatePostPopUp from \"../../PopUp/CreatePostPopUp/CreatePostPopUp\";\r\nimport {\r\n  getAllPostsAPI,\r\n  getSavedPostCollections,\r\n  postUserPost,\r\n} from \"../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NewsCorner from \"../InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport RecommendationCard from \"../InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport {\r\n  setPageTitle,\r\n  selectCreatePostModal,\r\n  toggleCreatePostModal,\r\n  setShowOnboarding,\r\n} from \"../../../Store/features/design/designSlice\";\r\nimport { startupOnboardingSteps } from \"../../OnBoardUser/steps/startup\";\r\nimport TutorialTrigger from \"../../Shared/TutorialTrigger/TutorialTrigger\";\r\nimport LookingForFund from \"./Components/LookingForFund/LookingForFund\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PostDetail from \"../Cards/FeedPost/PostDetail\";\r\nimport ArticlePopup from \"../../PopUp/ArticlePopup/ArticlePopup\";\r\nimport NewsCard from \"./Components/NewsCard/NewsCard\";\r\n\r\nconst baseUrl = environment.baseUrl;\r\n\r\nconst Feed = () => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const isCreatePostModalOpen = useSelector(selectCreatePostModal);\r\n  const { postId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [postData, setPostData] = useState({\r\n    userId: \"\",\r\n    postId: \"\",\r\n    designation: \"\",\r\n    startUpCompanyName: \"\",\r\n    investorCompanyName: \"\",\r\n    profilePicture: \"\",\r\n    description: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    oneLinkId: \"\",\r\n    video: \"\",\r\n    image: \"\",\r\n    documentName: \"\",\r\n    documentUrl: \"\",\r\n    createdAt: \"\",\r\n    likes: \"\",\r\n    response: \"\",\r\n    repostLoading: \"\",\r\n    resharedPostId: \"\",\r\n    isSubscribed:false,\r\n    location: \"\"\r\n  });\r\n  const [newsData, setNewsData] = useState([]);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const [newPost, setNewPost] = useState(false);\r\n  const userVisitCount = localStorage.getItem(\"userVisit\")\r\n  //const [loadingFeed, setLoadingFeed] = useState(false);\r\n  const [articlePopup, setArticlePopup] = useState(false);\r\n  const [getSavedPostData, setgetSavedPostData] = useState(\"\");\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(()=>{\r\n    if(Number(userVisitCount)<=1){\r\n      dispatch(setShowOnboarding(true))\r\n    }\r\n  },[])\r\n  useEffect(() => {\r\n    setPopupOpen(isCreatePostModalOpen);\r\n  }, [isCreatePostModalOpen]);\r\n\r\n  //Fetching NEWS\r\n  useEffect(() => {\r\n    const fetchNews = async () => {\r\n        try {\r\n          const response = await fetch(`${baseUrl}/news/getTodaysNews`);\r\n          const data = await response.json();\r\n          const filteredArticles = data?.articles?.filter(article => \r\n            article?.title && \r\n            article?.description && \r\n            article?.url && \r\n            article?.urlToImage && \r\n            article?.publishedAt\r\n          ) || [];\r\n          setNewsData(filteredArticles);\r\n        } catch (error) {\r\n            console.error(\"Error fetching news:\", error);\r\n        }\r\n    };\r\n\r\n    fetchNews();\r\n}, []);\r\n\r\n  // Methods\r\n  const openPopup = () => {\r\n    setPopupOpen(!popupOpen);\r\n    dispatch(toggleCreatePostModal());\r\n  };\r\n\r\n  const appendDataToAllPosts = (data) => {\r\n    setAllPosts(prevPosts => [data, ...prevPosts]);\r\n  };\r\n\r\n  const deletePostFilterData = (postId) => {\r\n    const filteredPosts = allPosts.filter((post) => post._id !== postId);\r\n    setAllPosts(filteredPosts);\r\n  };\r\n\r\n  const fetchMorePosts = () => {\r\n    getAllPostsAPI(page)\r\n      .then(({ data }) => {\r\n        if (data?.length === 0) {\r\n          setHasMore(false);\r\n        } else {\r\n          const totalPost = data.filter((item) => item.postType !== \"company\");\r\n          setAllPosts([...allPosts, ...totalPost]);\r\n          setPage(page + 1);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setHasMore(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const showPopup = queryParams.get(\"showPopup\") === \"true\";\r\n\r\n  useEffect(() => {\r\n    if (showPopup) {\r\n      setPopupOpen(true);\r\n      const urlWithoutQuery = location.pathname;\r\n      window.history.replaceState({}, \"\", urlWithoutQuery);\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    getSavedPostCollections(loggedInUser._id).then((data) => {\r\n      setgetSavedPostData(data);\r\n    });\r\n    fetchMorePosts();\r\n  }, []);\r\n  // newPost\r\n\r\n  useEffect(() => {\r\n    document.title = \"Home | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Home\"));\r\n  }, [dispatch]);\r\n\r\n  // Repost\r\n  const [repostLoading, setRepostLoading] = useState({\r\n    instant: false,\r\n    withThoughts: false,\r\n  });\r\n  const [respostingPostId, setRepostingPostId] = useState(\"\");\r\n\r\n  const repostInstantly = (resharedPostId) => {\r\n    setRepostLoading({ ...repostLoading, instant: true });\r\n    postUserPost({ resharedPostId })\r\n      .then(() => fetchMorePosts())\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setRepostLoading({ ...repostLoading, instant: false }));\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"mx-0 feed_container\">\r\n        {postId ? (\r\n          <PostDetail\r\n            userId={postData.userId}\r\n            postId={postId}\r\n            designation={postData.designation}\r\n            startUpCompanyName={postData.startUp}\r\n            investorCompanyName={postData.investor}\r\n            profilePicture={postData.profilePicture}\r\n            description={postData.description}\r\n            firstName={postData.firstName}\r\n            lastName={postData.lastName}\r\n            oneLinkId={postData.oneLinkId}\r\n            video={postData.video}\r\n            image={postData.image}\r\n            documentName={postData.documentName}\r\n            documentUrl={postData.documentUrl}\r\n            createdAt={postData.createdAt}\r\n            likes={postData.likes}\r\n            location={postData.location}\r\n            resharedPostId={postData.resharedPostId}\r\n            fetchAllPosts={fetchMorePosts}\r\n            response={getSavedPostData}\r\n            repostWithToughts={(resharedPostId) => {\r\n              setRepostingPostId(resharedPostId);\r\n              openPopup();\r\n            }}\r\n            repostInstantly={repostInstantly}\r\n            repostLoading={repostLoading}\r\n            deletePostFilterData={deletePostFilterData}\r\n            setPostData={setPostData}\r\n            isSubscribed = {postData.isSubscribed}\r\n          />\r\n        ) : (\r\n          <div className=\"main_content\">\r\n            {console.log(\"post ka hai ye data\", postData)}\r\n            <div className=\"Posts__column d-flex flex-column gap-2\">\r\n              {/* Small Profile Card */}\r\n              <SmallProfileCard className=\"d-none d-md-block\" text={\"Home\"} />\r\n\r\n              {/* Onboarding popup */}\r\n              <TutorialTrigger steps={startupOnboardingSteps.homePage} />\r\n\r\n              {/* Looking for funding */}\r\n              <LookingForFund />\r\n\r\n              {/* Write a Post */}\r\n              <div\r\n                className=\"rounded-2 start_post_container\"\r\n                style={{ flexDirection: \"column\" }}\r\n              >\r\n                <div className=\"start_post_container\" style={{ width: \"100%\" }}>\r\n                  <img\r\n                    src={loggedInUser.profilePicture}\r\n                    alt=\"Profile\"\r\n                    className=\"rounded-circle object-fit-cover\"\r\n                    style={{ width: \"50px\", height: \"50px\" }}\r\n                  />\r\n                  <div\r\n                    className=\"w-auto flex-grow-1 me-4\"\r\n                    onClick={openPopup}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  >\r\n                    <input\r\n                      className=\"px-3 flex-grow-1\"\r\n                      type=\"text\"\r\n                      placeholder=\"Write a post...\"\r\n                      style={{ pointerEvents: \"none\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n              </div>\r\n              {/* Posts container - column of <FeedPostCard /> */}\r\n              <div className=\"posts__container d-flex flex-column gap-3\">\r\n                <InfiniteScroll\r\n                  className=\"m-0 p-0\"\r\n                  dataLength={allPosts.length + newsData.length}\r\n                  next={fetchMorePosts}\r\n                  hasMore={hasMore}\r\n                  loader={\r\n                    <div className=\"loader_spinner container p-5 text-center my-5  rounded-5 shadow-sm \">\r\n                      <SpinnerBS colorClass={\"d-l-grey\"} />\r\n                    </div>\r\n                  }\r\n                >\r\n                  {allPosts?.map(\r\n                    ({\r\n                      description,\r\n                      user,\r\n                      video,\r\n                      image,\r\n                      documentUrl,\r\n                      documentName,\r\n                      createdAt,\r\n                      likes,\r\n                      _id,\r\n                      resharedPostId,\r\n                    },index) => {\r\n                      if (!user) return null;\r\n\r\n                      const {\r\n                        firstName,\r\n                        lastName,\r\n                        location,\r\n                        designation,\r\n                        profilePicture,\r\n                        _id: userId,\r\n                        startUp,\r\n                        investor,\r\n                        oneLinkId,\r\n                        isSubscribed\r\n                      } = user;\r\n\r\n                      return (\r\n                        <>\r\n                            <React.Fragment key={_id}>\r\n                            <FeedPostCard\r\n                              key={_id}\r\n                              userId={userId}\r\n                              postId={_id}\r\n                              designation={designation}\r\n                              startUpCompanyName={startUp}\r\n                              investorCompanyName={investor}\r\n                              profilePicture={profilePicture}\r\n                              description={description}\r\n                              firstName={firstName}\r\n                              lastName={lastName}\r\n                              oneLinkId={oneLinkId}\r\n                              video={video}\r\n                              image={image}\r\n                              location={location}\r\n                              documentName={documentName}\r\n                              documentUrl={documentUrl}\r\n                              createdAt={createdAt}\r\n                              likes={likes}\r\n                              resharedPostId={resharedPostId}\r\n                              fetchAllPosts={fetchMorePosts}\r\n                              response={getSavedPostData}\r\n                              repostWithToughts={(resharedPostId) => {\r\n                                setRepostingPostId(resharedPostId);\r\n                                openPopup();\r\n                              }}\r\n                              repostInstantly={repostInstantly}\r\n                              repostLoading={repostLoading}\r\n                              deletePostFilterData={deletePostFilterData}\r\n                              setPostData={setPostData}\r\n                              isSubscribed={isSubscribed}\r\n                            />\r\n                               {(index + 1) % 3 === 0 && (\r\n              <NewsCard \r\n              title={newsData[Math.floor(index)]?.title} \r\n              description={newsData[Math.floor(index)]?.description} \r\n              url={newsData[Math.floor(index)]?.url} \r\n              urlToImage={newsData[Math.floor(index)]?.urlToImage} \r\n              publishedAt={newsData[Math.floor(index)]?.publishedAt} \r\n            />\r\n            )}\r\n                            </React.Fragment>\r\n                        </>\r\n                      );\r\n                    }\r\n                  )}\r\n                  \r\n                </InfiniteScroll>\r\n\r\n                \r\n              </div>\r\n            </div>\r\n            {popupOpen && (\r\n              <CreatePostPopUp\r\n                setPopupOpen={setPopupOpen}\r\n                popupOpen\r\n                setNewPost={setNewPost}\r\n                respostingPostId={respostingPostId}\r\n                appendDataToAllPosts={appendDataToAllPosts}\r\n              />\r\n            )}\r\n            {articlePopup && (\r\n              <ArticlePopup\r\n                setArticlePopup={setArticlePopup}\r\n                articlePopup={articlePopup}\r\n                setNewPost={setNewPost}\r\n                respostingPostId={respostingPostId}\r\n                appendDataToAllPosts={appendDataToAllPosts}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className=\"right_content\">\r\n          <RightProfileCard />\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n      </div>\r\n      \r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","var _path, _rect;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n"],"names":["LookingForFund","_jsx","className","children","_jsxs","Link","to","_ref","title","description","url","urlToImage","publishedAt","src","alt","href","target","rel","setArticlePopup","articlePopup","loggedInUser","useSelector","state","user","content","setValue","useState","quillRef","useRef","fileInputRef","modules","toolbar","container","handlers","image","current","click","handleMemo","useMemo","delta","source","editor","dataURLToFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","_Fragment","concat","tabIndex","role","style","maxWidth","width","flexDirection","profilePicture","height","objectFit","firstName","lastName","onClick","background","border","ReactQuill","value","onChange","ref","accept","display","async","fileInput","files","file","data","FormData","append","res","axios","post","withCredentials","quill","getEditor","range","getSelection","insertEmbed","index","error","console","root","innerHTML","tempDiv","document","createElement","images","querySelectorAll","imageUploadPromises","Array","from","map","img","startsWith","Promise","all","updatedContent","response","addArticle","log","cursor","baseUrl","environment","Feed","isCreatePostModalOpen","selectCreatePostModal","postId","useParams","dispatch","useDispatch","postData","setPostData","userId","designation","startUpCompanyName","investorCompanyName","oneLinkId","video","documentName","documentUrl","createdAt","likes","repostLoading","resharedPostId","isSubscribed","location","newsData","setNewsData","popupOpen","setPopupOpen","allPosts","setAllPosts","newPost","setNewPost","userVisitCount","localStorage","getItem","getSavedPostData","setgetSavedPostData","hasMore","setHasMore","page","setPage","useEffect","Number","setShowOnboarding","_data$articles","fetch","json","filteredArticles","articles","filter","article","fetchNews","openPopup","toggleCreatePostModal","appendDataToAllPosts","prevPosts","deletePostFilterData","filteredPosts","_id","fetchMorePosts","getAllPostsAPI","then","totalPost","item","postType","catch","err","useLocation","showPopup","URLSearchParams","search","get","urlWithoutQuery","pathname","window","history","replaceState","getSavedPostCollections","setPageTitle","setRepostLoading","instant","withThoughts","respostingPostId","setRepostingPostId","repostInstantly","postUserPost","finally","MaxWidthWrapper","PostDetail","startUp","investor","fetchAllPosts","repostWithToughts","SmallProfileCard","text","TutorialTrigger","steps","startupOnboardingSteps","homePage","placeholder","pointerEvents","InfiniteScroll","dataLength","next","loader","SpinnerBS","colorClass","_ref2","_newsData$Math$floor","_newsData$Math$floor2","_newsData$Math$floor3","_newsData$Math$floor4","_newsData$Math$floor5","React","FeedPostCard","NewsCard","Math","floor","CreatePostPopUp","ArticlePopup","RightProfileCard","RecommendationCard","NewsCorner","dateString","Date","toDateString","toLocaleDateString","weekday","month","day"],"sourceRoot":""}