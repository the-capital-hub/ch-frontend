{"version":3,"file":"static/js/4948.96d75804.chunk.js","mappings":"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","sources":["components/Investor/CompanyProfilePageComponents/PublicLinks/PublicLinks.jsx","components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner.js","components/Investor/SvgIcons/IconChevronBack.jsx","pages/StartUp/CompanyProfile/AddCompanyProfilePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { postStartUpData , postInvestorData } from \"../../../../Service/user\";\r\nimport { selectUserCompanyData } from \"../../../../Store/features/user/userSlice\";\r\n\r\nconst PublicLinks = ({\r\n  publicLinks,\r\n  loading,\r\n  setPublicLinks,\r\n  investor = false,\r\n}) => {\r\n  const { isInvestor } = useSelector((state) => state.user.loggedInUser);\r\n  const loggedInUser = useSelector((state)=> state.user.loggedInUser);\r\n  const userCompanyData = useSelector(selectUserCompanyData);\r\n\r\n  // Initialize state with the initial links provided as props\r\n  const [links, setLinks] = useState({publicLinks});\r\n\r\n  useEffect(()=>{\r\n    console.log(\"userCompany\",userCompanyData);\r\n    console.log(\"Links\",links);\r\n    console.log(\"publicLinks\", publicLinks);\r\n  })\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLinks((prevLinks) => ({\r\n      ...prevLinks,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Build the data object to send\r\n    const companySocialLinks = {\r\n      socialLinks: {\r\n        website: links.website || publicLinks.website,\r\n        linkedin: links.linkedin || publicLinks.linkedin, \r\n        twitter: links.twitter || publicLinks.twitter,\r\n        instagram: links.instagram || publicLinks.instagram,\r\n      },\r\n    };\r\n\r\n    try {\r\n      // Make the API call to save the public links\r\n      let response;\r\n      if(investor){\r\n         response = await postStartUpData({\r\n          ...companySocialLinks,\r\n          founderId : loggedInUser._id\r\n        });\r\n        console.log(\"Response\", response);\r\n      }\r\n\r\n   else{\r\n       response = await postInvestorData({\r\n        ...companySocialLinks,\r\n        founderId : loggedInUser._id\r\n      });\r\n      console.log(\"Response\", response);\r\n   }\r\n      \r\n      // Optionally update state or props\r\n      if (setPublicLinks) {\r\n        setPublicLinks(links);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving public links:\", error);\r\n    }\r\n  };\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div\r\n      className={`paragraph__component py-5 px-3 px-md-5 d-flex flex-column gap-4 ${\r\n        isInvestor === \"true\" ? \"rounded-4 border\" : \"rounded-4\"\r\n      }`}\r\n      style={{ color: \"var(--d-l-grey)\" }}\r\n    >\r\n      <div className=\"d-flex flex-column-reverse flex-sm-row align-items-sm-center justify-content-between gap-3 gap-md-0\">\r\n        <h3>Public Links</h3>\r\n      </div>\r\n      <div className=\"profile__form\">\r\n        <form onSubmit={handleSave}>\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend>Website Link</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"website\"\r\n              id=\"website\"\r\n              className=\"profile_form_input\"\r\n              placeholder={userCompanyData.socialLinks.website}\r\n              value={links.website || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n          </fieldset>\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend>Linkedin</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"linkedin\"\r\n              id=\"linkedin\"\r\n              className=\"profile_form_input\"\r\n              placeholder={userCompanyData.socialLinks.linkedin}\r\n              value={links.linkedin || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n          </fieldset>\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend>Twitter</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"twitter\"\r\n              id=\"twitter\"\r\n              className=\"profile_form_input\"\r\n              placeholder={userCompanyData.socialLinks.twitter}\r\n              value={links.twitter || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n          </fieldset>\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend>Instagram</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"instagram\"\r\n              id=\"instagram\"\r\n              className=\"profile_form_input\"\r\n              placeholder={userCompanyData.socialLinks.instagram}\r\n              value={links.instagram || \"\"}\r\n              onChange={handleInputChange}\r\n            />\r\n          </fieldset>\r\n          <button\r\n            type=\"submit\"\r\n            className={`align-self-end btn-base ${\r\n              isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n            }`}\r\n          >\r\n            {loading ? (\r\n              <SpinnerBS\r\n                colorClass={`${\r\n                  isInvestor === \"true\" ? \"text-dark\" : \"text-white\"\r\n                }`}\r\n                spinnerSizeClass=\"spinner-border-sm\"\r\n              />\r\n            ) : (\r\n              \"Save\"\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PublicLinks;\r\n","import React from \"react\";\r\nimport \"./newscorner.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport startupOneImage from \"../../../../Images/blog/1 AsPGU1Q42C9lsVRoMg91Nw.webp\";\r\nimport startupTwoImage from \"../../../../Images/blog/eighttips.webp\";\r\nimport startupThreeImage from \"../../../../Images/blog/threefive.webp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTheme } from \"../../../../Store/features/design/designSlice\";\r\n\r\nconst NewsCorner = ({ title, btnlink }) => {\r\n  const theme = useSelector(selectTheme)\r\n  // Fetch news items\r\n  const newsItems = [\r\n    {\r\n      title:\r\n        \"Why Mentoring Matters: Why Angel Investors Should Prioritize Mentorship Before Investing in a Startup\",\r\n      btnlink: \"/blog/startupOne\",\r\n      image: startupOneImage,\r\n      id: 1,\r\n    },\r\n    {\r\n      title: \"8 Tips to start raising Angel investments for startups\",\r\n      btnlink: \"/blog/startupTwo\",\r\n      image: startupTwoImage,\r\n      id: 2,\r\n    },\r\n    {\r\n      title: \"HOW TO BUILD A GREAT STARTUP by Pramod Badiger\",\r\n      btnlink: \"/blog/startupThree\",\r\n      image: startupThreeImage,\r\n      id: 3,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"newscorner_container\">\r\n        <div className=\"col-12 newscorner_card\">\r\n          <div className=\"card mt-2 right_view_profile_card right_view_profile\">\r\n            <div className=\"card-header\">\r\n              <div className=\"title\">\r\n                <span>News Corner</span>\r\n              </div>\r\n            </div>\r\n            {newsItems.map((item, index) => (\r\n              <Link\r\n                to={item.btnlink ? item.btnlink : \"\"}\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n                className=\"card-body newscorner_card_body \"\r\n                key={item.id}\r\n              >\r\n                <div className=\"newscorner_card_text d-flex align-items-center gap-1\">\r\n                  <h4 className=\"smallest_typo\" style={{color:theme===\"dark\"?\"#fff\":\"#000\"}}>\r\n                    {item.title\r\n                      ? item.title\r\n                      : \" Cellbell startup has raised to $10 million dollor funding\"}\r\n                  </h4>\r\n                  <div className=\"newsImage__container\">\r\n                    <img\r\n                      src={item.image}\r\n                      alt=\"News\"\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"auto\",\r\n                        objectFit: \"contain\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {/* <Link\r\n                      to={item.btnlink ? item.btnlink : \"\"}\r\n                      style={{ textDecoration: \"none\" }}\r\n                      target=\"_blank\"\r\n                      className=\"d-flex justify-content-center align-items-center mt-1 show__more__link mx-auto\"\r\n                    >\r\n                      <button className=\"d-flex align-items-center justify-content-center show__more\">\r\n                        <span className=\"text-center\">Show more</span>\r\n                      </button>\r\n                    </Link> */}\r\n                </div>\r\n              </Link>\r\n            ))}\r\n            {/* <hr className=\"hr\" /> */}\r\n            {/* <div className=\"card-body newscorner_card_body \">\r\n              <div className=\"newscorner_card_text\">\r\n                <h4 className=\"smallest_typo\">\r\n                  {title\r\n                    ? title\r\n                    : \" Cellbell startup has raised to $10 million dollor funding\"}\r\n                </h4>\r\n                <Link to={btnlink ? btnlink : \"\"} style={{textDecoration:\"none\"}}>\r\n                  <button>\r\n                    <span>Show more</span>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsCorner;\r\n","import React from \"react\";\r\n\r\nexport default function IconChevronBack(props) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 512 512\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={48}\r\n        d=\"M328 112L184 256l144 144\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./EditCompanyProfilePage.scss\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport CompanyProfileForm from \"../../../components/Investor/CompanyProfilePageComponents/CompanyProfileForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { About2, About3, Revenue1, Revenue2 } from \"../../../Images/Investor/CompanyProfile\";\r\nimport revenue from \"../../../Images/Investor/CompanyProfile/image 83-1.png\";\r\nimport revenue2 from \"../../../Images/Investor/CompanyProfile/image 83-6.png\";\r\nimport revenue3 from \"../../../Images/Investor/CompanyProfile/image 83-5.png\";\r\nimport CoinIcon from \"../../../Images/investorView/Rectangle.png\";\r\nimport ColorCard from \"../../../components/Investor/InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport { postStartUpData } from \"../../../Service/user\";\r\nimport CoreTeam from \"../../../components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeam\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { selectTheme, setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SpinnerBS from \"../../../components/Shared/Spinner/SpinnerBS\";\r\nimport CompanyDescription from \"../../../components/Investor/CompanyProfilePageComponents/CompanyDescription/CompanyDescription\";\r\nimport AfterSuccessPopUp from \"../../../components/PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport ErrorPopUp from \"../../../components/PopUp/ErrorPopUp/ErrorPopUp\";\r\nimport { selectLoggedInUserId, setUserCompany } from \"../../../Store/features/user/userSlice\";\r\nimport IconChevronBack from \"../../../components/Investor/SvgIcons/IconChevronBack\";\r\nimport PublicLinks from \"../../../components/Investor/CompanyProfilePageComponents/PublicLinks/PublicLinks\";\r\n\r\nexport default function AddCompanyProfilePage() {\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const theme = useSelector(selectTheme);\r\n  const [publicLinks, setPublicLinks] = useState([]);\r\n  const [colorCardData, setColorCardData] = useState({\r\n    total_investment: \"\",\r\n    no_of_investers: \"\",\r\n    last_round_investment: \"\",\r\n    fund_ask: \"\",\r\n    valuation: \"\",\r\n    raised_funds: \"\",\r\n    last_year_revenue: \"\",\r\n    target: \"\",\r\n  });\r\n  const [companyData, setCompanyData] = useState({});\r\n  const [isBioEditable, setIsBioEditable] = useState(false);\r\n  const [companyDescription, setCompanyDescription] = useState(\"\");\r\n  // States for popup\r\n  const [showPopup, setShowPopup] = useState({ success: false, error: false });\r\n  const [isSaveAll, setIsSaveAll] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Add Company Profile | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Add Company\"));\r\n  }, [dispatch]);\r\n\r\n  // handleAmountChange\r\n  const handleAmountChange = (currentfield, updatedAmount) => {\r\n    setColorCardData((prevData) => ({\r\n      ...prevData,\r\n      [currentfield]: updatedAmount,\r\n    }));\r\n  };\r\n\r\n  // Handle Description Change\r\n  const handleDescriptionChange = (e) => {\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + 2 + \"px\";\r\n    setCompanyDescription(e.target.value);\r\n  };\r\n\r\n  // Handle Description submit\r\n  const submitBioHandler = async (e) => {\r\n    e.preventDefault();\r\n    // Set Loading\r\n    setLoading(true);\r\n\r\n    const newCompanyData = {\r\n      description: companyDescription,\r\n      founderId: loggedInUserId,\r\n      colorCard: colorCardData,\r\n      socialLinks: publicLinks,\r\n      // Add other necessary fields here\r\n    };\r\n    try {\r\n      const response = await postStartUpData(newCompanyData);\r\n      if (response.status === 200) {\r\n        setIsBioEditable(false);\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n        setCompanyData(response.data);\r\n        dispatch(setUserCompany(response.data));\r\n        navigate(\"/company-profile\"); // Navigate to the company profile page after creation\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n      handleShowPopup({ error: true });\r\n    }\r\n  };\r\n\r\n  const handleSaveAll = (e) => {\r\n    setLoading(true);\r\n    submitBioHandler(e);\r\n    setIsSaveAll(true);\r\n    setTimeout(() => {\r\n      setIsSaveAll(false);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  // handle show popup\r\n  const handleShowPopup = (popupType) => {\r\n    setShowPopup((prev) => ({ ...prev, ...popupType }));\r\n    setTimeout(() => {\r\n      handlePopupClose();\r\n    }, 2000);\r\n  };\r\n\r\n  // handle popup close\r\n  const handlePopupClose = () => {\r\n    setShowPopup({ success: false, error: false });\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"editcompanyProfilePage__wrapper\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <span\r\n            className=\"back_img rounded-circle shadow-sm\"\r\n            title=\"Go Back\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            <IconChevronBack width={25} height={25} color=\"var(--d-l-grey)\" />\r\n          </span>\r\n          <div className=\"company_profile_form rounded-4 py-3 px-3 px-md-5\">\r\n            <CompanyProfileForm\r\n              companyData={companyData}\r\n              isSaveAll={isSaveAll}\r\n              handleShowPopup={handleShowPopup}\r\n            />\r\n          </div>\r\n          <PublicLinks publicLinks={publicLinks} loading={loading} />\r\n          <CompanyDescription\r\n            companyData={companyData}\r\n            companyDescription={companyDescription}\r\n            setCompanyDescription={setCompanyDescription}\r\n            isBioEditable={isBioEditable}\r\n            setIsBioEditable={setIsBioEditable}\r\n            submitBioHandler={submitBioHandler}\r\n            handleDescriptionChange={handleDescriptionChange}\r\n            loading={loading}\r\n          />\r\n          <div className=\"core__team  rounded-4 py-3 px-3 px-md-5\">\r\n            <CoreTeam\r\n              companyData={companyData}\r\n              setCompanyData={setCompanyData}\r\n              theme=\"startup\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12 mt-2\">\r\n            <h6\r\n              className=\"typography div__heading\"\r\n              style={{\r\n                marginLeft: \"1rem\",\r\n                textDecoration: \"underline\",\r\n                textDecorationColor: \"rgba(253,89,1,1)\",\r\n                textDecorationThickness: \"2px\",\r\n                textUnderlineOffset: \"0.25em\",\r\n                fontSize: \"13px\",\r\n                color: theme === \"dark\" ? \"#fff\" : \"black\",\r\n              }}\r\n            >{`Previous Funding Round`}</h6>\r\n            <div className=\"card_holder d-flex flex-wrap\">\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#DAC191\"\r\n                text=\"Total Investment\"\r\n                image={About2}\r\n                amount={colorCardData?.total_investment || \"\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"total_investment\", amount)\r\n                }\r\n                field={\"total_investment\"}\r\n                colorCardData={colorCardData}\r\n              />\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#DCDCDC\"\r\n                text=\"No.of Investers\"\r\n                image={About3}\r\n                amount={colorCardData?.no_of_investers || \"\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"no_of_investers\", amount)\r\n                }\r\n                field={\"no_of_investers\"}\r\n                colorCardData={colorCardData}\r\n                noRupee={true}\r\n              />\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#BB98FF\"\r\n                text=\"Valuation\"\r\n                image={CoinIcon}\r\n                amount={colorCardData?.last_round_investment || \"\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"last_round_investment\", amount)\r\n                }\r\n                field={\"last_round_investment\"}\r\n                colorCardData={colorCardData}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h6\r\n              className=\"typography div__heading\"\r\n              style={{\r\n                marginLeft: \"1rem\",\r\n                textDecoration: \"underline\",\r\n                textDecorationColor: \"rgba(253,89,1,1)\",\r\n                textDecorationThickness: \"2px\",\r\n                textUnderlineOffset: \"0.25em\",\r\n                fontSize: \"13px\",\r\n                color: theme === \"dark\" ? \"#fff\" : \"black\",\r\n              }}\r\n            >{`Current Funding Round`}</h6>\r\n            <div className=\"card_holder d-flex flex-wrap\">\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#2B2B2B\"\r\n                text=\"Fund ask\"\r\n                image={revenue2}\r\n                amount={colorCardData?.fund_ask || \"\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"fund_ask\", amount)\r\n                }\r\n                field={\"fund_ask\"}\r\n                colorCardData={colorCardData}\r\n              />\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#FF7373\"\r\n                text=\"Valuation\"\r\n                image={revenue}\r\n                amount={colorCardData?.valuation || \"\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"valuation\", amount)\r\n                }\r\n                field={\"valuation\"}\r\n                colorCardData={colorCardData}\r\n              />\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#9198DA\"\r\n                text=\"Funds raised\"\r\n                image={revenue3}\r\n                amount={colorCardData?.raised_funds || \"\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"raised_funds\", amount)\r\n                }\r\n                field={\"raised_funds\"}\r\n                colorCardData={colorCardData}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 mt-2\">\r\n            <h6\r\n              className=\"typography div__heading\"\r\n              style={{\r\n                marginLeft: \"1rem\",\r\n                textDecoration: \"underline\",\r\n                textDecorationColor: \"rgba(253,89,1,1)\",\r\n                textDecorationThickness: \"2px\",\r\n                textUnderlineOffset: \"0.25em\",\r\n                fontSize: \"13px\",\r\n                color: theme === \"dark\" ? \"#fff\" : \"black\",\r\n              }}\r\n            >{`Revenue Statistics`}</h6>\r\n            <div className=\"card_holder d-flex flex-wrap\">\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#DAC191\"\r\n                text=\"Last year revenue(FY 23)\"\r\n                image={Revenue1}\r\n                amount={colorCardData?.last_year_revenue || \"NA\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"last_year_revenue\", amount)\r\n                }\r\n                field={\"last_year_revenue\"}\r\n                colorCardData={colorCardData}\r\n              />\r\n              <ColorCard\r\n                color=\"white\"\r\n                background=\"#DCDCDC\"\r\n                text=\"Target (FY 24)\"\r\n                image={Revenue2}\r\n                amount={colorCardData?.target || \"NA\"}\r\n                onAmountChange={(amount) =>\r\n                  handleAmountChange(\"target\", amount)\r\n                }\r\n                field={\"target\"}\r\n                colorCardData={colorCardData}\r\n                noRupee={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className={`align-self-end btn-base startup`}\r\n            onClick={handleSaveAll}\r\n          >\r\n            {loading ? (\r\n              <SpinnerBS\r\n                colorClass={\"text-light\"}\r\n                spinnerSizeClass=\"spinner-border-sm\"\r\n              />\r\n            ) : (\r\n              \"Save all\"\r\n            )}\r\n          </button>\r\n        </div>\r\n        {/* Right side content */}\r\n        <div className=\"right__content\">\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n\r\n        {/* Popups */}\r\n        {showPopup.success && (\r\n          <AfterSuccessPopUp\r\n            successText={\"Changes Saved\"}\r\n            onClose={handlePopupClose}\r\n          />\r\n        )}\r\n        {showPopup.error && (\r\n          <ErrorPopUp\r\n            message={\"Error While Saving! Please try again\"}\r\n            onClose={handlePopupClose}\r\n          />\r\n        )}\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","publicLinks","loading","setPublicLinks","investor","isInvestor","useSelector","state","user","loggedInUser","userCompanyData","selectUserCompanyData","links","setLinks","useState","useEffect","console","log","handleInputChange","e","name","value","target","prevLinks","_jsxs","className","concat","style","color","children","_jsx","onSubmit","async","preventDefault","companySocialLinks","socialLinks","website","linkedin","twitter","instagram","response","postStartUpData","founderId","_id","postInvestorData","error","type","id","placeholder","onChange","SpinnerBS","colorClass","spinnerSizeClass","title","btnlink","theme","selectTheme","newsItems","image","startupOneImage","startupTwoImage","startupThreeImage","_Fragment","map","item","index","Link","to","textDecoration","src","alt","width","height","objectFit","IconChevronBack","props","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","AddCompanyProfilePage","loggedInUserId","selectLoggedInUserId","dispatch","useDispatch","navigate","useNavigate","colorCardData","setColorCardData","total_investment","no_of_investers","last_round_investment","fund_ask","valuation","raised_funds","last_year_revenue","companyData","setCompanyData","isBioEditable","setIsBioEditable","companyDescription","setCompanyDescription","showPopup","setShowPopup","success","isSaveAll","setIsSaveAll","setLoading","document","setPageTitle","handleAmountChange","currentfield","updatedAmount","prevData","submitBioHandler","newCompanyData","description","colorCard","status","handleShowPopup","data","setUserCompany","popupType","prev","setTimeout","handlePopupClose","MaxWidthWrapper","onClick","CompanyProfileForm","PublicLinks","CompanyDescription","handleDescriptionChange","scrollHeight","CoreTeam","marginLeft","textDecorationColor","textDecorationThickness","textUnderlineOffset","fontSize","ColorCard","background","text","About2","amount","onAmountChange","field","About3","noRupee","CoinIcon","revenue2","revenue","revenue3","Revenue1","Revenue2","RecommendationCard","NewsCorner","AfterSuccessPopUp","successText","onClose","ErrorPopUp","message"],"sourceRoot":""}