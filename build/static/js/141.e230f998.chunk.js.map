{"version":3,"file":"static/js/141.e230f998.chunk.js","mappings":"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","sources":["components/Investor/Connection/Connection.js","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Connection.scss\";\r\nimport SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport {\r\n  acceptConnectionAPI,\r\n  cancelConnectionRequestAPI,\r\n  getSentConnectionsAPI,\r\n  getUserConnections,\r\n  pendingConnectionRequestsAPI,\r\n  rejectConnectionAPI,\r\n  removeConnection,\r\n} from \"../../../Service/user\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport deleteIcon from \"../../../Images/post/delete.png\";\r\nimport achievement from \"../../../Images/Investor/Achievements/img_1.png\";\r\n// import AchievementToast from \"../../Toasts/AchievementToast/AchievementToast\";\r\n// import { achievementTypes } from \"../../Toasts/AchievementToast/types\";\r\n\r\nconst Connection = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"received\"); // Default to \"received\"\r\n  const [receivedConnections, setReceivedConnections] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [getAllConnection, setGetAllConnection] = useState([]); // State for accepted connections\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  // Function to handle tab change\r\n  useEffect(() => {\r\n    getUserConnections(loggedInUser._id).then((res) => {\r\n      //(\"res2-->\", res);\r\n      setGetAllConnection(res.data); // Set accepted connections data\r\n    });\r\n  }, []);\r\n  const handleTabChange = (tab) => {\r\n    if (tab === \"received\") {\r\n      getReceivedConnections();\r\n    } else if (tab === \"accepted\") {\r\n      getUserConnections(loggedInUser._id).then((res) => {\r\n        //console.log(\"res-->\", res);\r\n        setGetAllConnection(res.data); // Set accepted connections data\r\n      });\r\n    } else {\r\n      getSentConnection();\r\n    }\r\n    setSelectedTab(tab);\r\n  };\r\n\r\n  // Function to get received connections\r\n  const getReceivedConnections = () => {\r\n    setLoading(true);\r\n    pendingConnectionRequestsAPI()\r\n      .then(({ data }) => setReceivedConnections(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  // Function to get sent connections\r\n  const getSentConnection = () => {\r\n    setLoading(true);\r\n    getSentConnectionsAPI()\r\n      .then(({ data }) => setReceivedConnections(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Connections | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Connections\"));\r\n    getReceivedConnections();\r\n  }, [dispatch]);\r\n\r\n  // const notify = () =>\r\n  //   toast.custom((t) => (\r\n  //     <AchievementToast type={achievementTypes.pleasureDoingBusiness} />\r\n  //   ));\r\n\r\n  // Function to accept a connection\r\n  const acceptConnectionHandler = async (connectionId) => {\r\n    try {\r\n      const response = await acceptConnectionAPI(connectionId);\r\n      if (response.isFirst) {\r\n        // notify();\r\n      }\r\n      getReceivedConnections();\r\n    } catch (error) {\r\n      console.log(\"Error accepting connection: \", error);\r\n    }\r\n  };\r\n\r\n  // Function to reject a connection\r\n  const rejectConnectionHandler = async (connectionId) => {\r\n    try {\r\n      await rejectConnectionAPI(connectionId);\r\n      getReceivedConnections();\r\n    } catch (error) {\r\n      console.log(\"Error rejecting connection: \", error);\r\n    }\r\n  };\r\n\r\n  // Function to cancel a sent connection request\r\n  const cancelConnectionRequest = async (connectionId) => {\r\n    try {\r\n      await cancelConnectionRequestAPI(connectionId);\r\n      getSentConnection();\r\n    } catch (error) {\r\n      console.log(\"Error cancelling connection: \", error);\r\n    }\r\n  };\r\n\r\n  const showRemoveConfirmation = () => {\r\n    return window.confirm(\"Are you sure you want to remove this connection?\");\r\n  };\r\n\r\n  // removeConnectionHandler\r\n  const handleRemoveConnection = async (userId) => {\r\n    if (showRemoveConfirmation()) {\r\n      try {\r\n        await removeConnection(userId);\r\n        getUserConnections(loggedInUser._id).then((res) => {\r\n          setGetAllConnection(res.data);\r\n        });\r\n      } catch (error) {\r\n        console.log(\"Error removing connection: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"connection_main_container mb-4\">\r\n        <SmallProfileCard text={\"Connections\"} />\r\n        <section className=\"content_section\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 box p-3 p-md-4 \">\r\n              <h4>Manage Connections</h4>\r\n              <nav className=\"connection_nav\">\r\n                <button\r\n                  className={`connection_nav_link fs-6 ${\r\n                    selectedTab === \"received\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleTabChange(\"received\")}\r\n                >\r\n                  Received\r\n                </button>\r\n                <button\r\n                  className={`connection_nav_link fs-6  ${\r\n                    selectedTab === \"sent\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleTabChange(\"sent\")}\r\n                >\r\n                  Sent\r\n                </button>\r\n                <button\r\n                  className={`connection_nav_link fs-6  ${\r\n                    selectedTab === \"accepted\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleTabChange(\"accepted\")}\r\n                >\r\n                  Accepted\r\n                </button>\r\n              </nav>\r\n              <hr />\r\n              <div className=\"connection_list\">\r\n                {loading ? (\r\n                  <h5 className=\"text-center my-5\">\r\n                    <div class=\"d-flex justify-content-center\">\r\n                      <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  </h5>\r\n                ) : selectedTab === \"received\" ? (\r\n                  receivedConnections.length ? (\r\n                    receivedConnections.map(\r\n                      ({ sender, updatedAt, _id }, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"connection_item d-flex flex-column flex-md-row justify-content-between \"\r\n                        >\r\n                          {/* Render content for received connections here */}\r\n                          <div className=\"connection_left\">\r\n                            <Link to={`/user/${sender?._id}`}>\r\n                              <img\r\n                                src={sender.profilePicture}\r\n                                alt={`${sender.firstName} ${sender.lastName}`}\r\n                                style={{ objectFit: \"cover\" }}\r\n                              />\r\n                            </Link>\r\n                            <div className=\"body_container\">\r\n                              <p className=\"connection_name h5\">\r\n                                <Link\r\n                                  to={`/user/${sender?._id}`}\r\n                                  className=\"  text-decoration-none\"\r\n                                >\r\n                                  {`${sender.firstName} ${sender.lastName}`}\r\n                                </Link>\r\n                              </p>\r\n                              <p className=\"connection_designation\">\r\n                                {sender.designation}\r\n                              </p>\r\n                              <p>\r\n                                {\" \"}\r\n                                {sender.startUp?.company\r\n                                  ? sender.startUp?.company\r\n                                  : sender.investor?.company}\r\n                              </p>\r\n                              <p>\r\n                                <TimeAgo\r\n                                  className=\"connection_time\"\r\n                                  datetime={updatedAt}\r\n                                  locale=\"\"\r\n                                />\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"connection_btn mt-3 mt-md-0  d-flex  d-md-none gap-2\">\r\n                              <button\r\n                                onClick={() => rejectConnectionHandler(_id)}\r\n                                className=\"ignore_button\"\r\n                              >\r\n                                Ignore\r\n                              </button>\r\n                              <button\r\n                                onClick={() => acceptConnectionHandler(_id)}\r\n                                className=\"accept_button\"\r\n                              >\r\n                                Accept\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-cente d-none d-md-block\">\r\n                            <button\r\n                              onClick={() => rejectConnectionHandler(_id)}\r\n                              className=\"ignore_button\"\r\n                            >\r\n                              Ignore\r\n                            </button>\r\n                            <button\r\n                              onClick={() => acceptConnectionHandler(_id)}\r\n                              className=\"accept_button\"\r\n                            >\r\n                              Accept\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )\r\n                  ) : (\r\n                    <h5 className=\"text-center my-5 text-secondary\">\r\n                      No received connections.\r\n                    </h5>\r\n                  )\r\n                ) : selectedTab === \"sent\" ? (\r\n                  <div className=\"sent_placeholder\">\r\n                    {receivedConnections.length ? (\r\n                      receivedConnections.map(\r\n                        ({ receiver, updatedAt, _id }, index) => (\r\n                          <div\r\n                            key={index}\r\n                            className=\"connection_item py-2 d-flex flex-column flex-md-row justify-content-between \"\r\n                          >\r\n                            {/* Render content for sent connections here */}\r\n                            <div className=\"connection_left\">\r\n                              <Link to={`/user/${receiver?._id}`}>\r\n                                <img\r\n                                  src={receiver?.profilePicture}\r\n                                  alt={`${receiver?.firstName} ${receiver?.lastName}`}\r\n                                  style={{ objectFit: \"cover\" }}\r\n                                />\r\n                              </Link>\r\n                              <div className=\"body_container\">\r\n                                <p className=\"connection_name h5\">\r\n                                  <Link\r\n                                    to={`/user/${receiver?._id}`}\r\n                                    className=\"  text-decoration-none\"\r\n                                  >\r\n                                    {`${receiver?.firstName} ${receiver?.lastName}`}\r\n                                  </Link>\r\n                                </p>\r\n                                <p className=\"connection_designation\">\r\n                                  {receiver?.designation}\r\n                                </p>\r\n                                <p>\r\n                                  {\" \"}\r\n                                  {receiver.startUp?.company\r\n                                    ? receiver.startUp?.company\r\n                                    : receiver.investor?.company}\r\n                                </p>\r\n                                <p>\r\n                                  <TimeAgo\r\n                                    className=\"connection_time\"\r\n                                    datetime={updatedAt}\r\n                                    locale=\"\"\r\n                                  />\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"connection_right mt-3 mt-md-0  ms-auto my-auto  d-md-none d-block \">\r\n                                <img\r\n                                  src={deleteIcon}\r\n                                  alt={`delete`}\r\n                                  onClick={() => cancelConnectionRequest(_id)}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center d-none d-md-block\">\r\n                              <button\r\n                                onClick={() => cancelConnectionRequest(_id)}\r\n                                className=\"py-2 px-3 rounded-5\"\r\n                              >\r\n                                Cancel Request\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <h5 className=\"text-center my-5 text-secondary\">\r\n                        No sent connections.\r\n                      </h5>\r\n                    )}\r\n                  </div>\r\n                ) : selectedTab === \"accepted\" ? (\r\n                  // Render content for the \"Accepted\" tab here using getAllConnection\r\n                  getAllConnection.length ? (\r\n                    getAllConnection.map((data, index) => (\r\n                      // console.log(\"data-->\", data)\r\n                      <div\r\n                        key={index}\r\n                        className=\"connection_item d-flex flex-column flex-md-row justify-content-between\"\r\n                      >\r\n                        {/* Render the accepted connection content here */}\r\n                        <div className=\"connection_left\">\r\n                          <Link to={`/user/${data._id}`}>\r\n                            <img\r\n                              src={data.profilePicture}\r\n                              alt={`${data.firstName} ${data.lastname}`}\r\n                              style={{ objectFit: \"cover\" }}\r\n                            />\r\n                          </Link>\r\n                          <div className=\"body_container\">\r\n                            <p className=\"connection_name h5\">\r\n                              <Link\r\n                                to={`/user/${data._id}`}\r\n                                className=\"  text-decoration-none\"\r\n                              >\r\n                                {`${data.firstName ? data.firstName : \"name\"} ${\r\n                                  data.lastName ? data.lastName : \"\"\r\n                                }`}\r\n                              </Link>\r\n                            </p>\r\n                            <p className=\"connection_designation\">\r\n                              {data.designation ? data.designation : \"\"}\r\n                            </p>\r\n                            <p>\r\n                              {\" \"}\r\n                              {data.startUp?.company\r\n                                ? data.startUp?.company\r\n                                : data.investor?.company}\r\n                            </p>\r\n\r\n                            <p>\r\n                              {/* <TimeAgo\r\n                                className=\"connection_time\"\r\n                                datetime={data.updatedAt ? data.updatedAt : \"\"}\r\n                                locale=\"\"\r\n                              /> */}\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"connection_right mt-3 mt-md-0  ms-auto my-auto  d-md-none d-block \">\r\n                            <img\r\n                              src={deleteIcon}\r\n                              alt={`delete`}\r\n                              onClick={() => handleRemoveConnection(data._id)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center d-none d-md-block\">\r\n                          <button\r\n                            onClick={() => handleRemoveConnection(data._id)}\r\n                            className=\"py-2 px-3 rounded-5\"\r\n                          >\r\n                            Remove Connection\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <h5 className=\"text-center my-5 text-secondary\">\r\n                      No accepted connections.\r\n                    </h5>\r\n                  )\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","var _path, _rect;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n"],"names":["Connection","selectedTab","setSelectedTab","useState","receivedConnections","setReceivedConnections","loading","setLoading","getAllConnection","setGetAllConnection","loggedInUser","useSelector","state","user","dispatch","useDispatch","useEffect","getUserConnections","_id","then","res","data","handleTabChange","tab","getReceivedConnections","getSentConnection","pendingConnectionRequestsAPI","_ref","catch","err","console","log","finally","getSentConnectionsAPI","_ref2","document","title","setPageTitle","acceptConnectionHandler","async","acceptConnectionAPI","connectionId","isFirst","error","rejectConnectionHandler","rejectConnectionAPI","cancelConnectionRequest","cancelConnectionRequestAPI","handleRemoveConnection","window","confirm","removeConnection","userId","_jsx","MaxWidthWrapper","children","_jsxs","className","SmallProfileCard","text","concat","onClick","class","role","length","map","_ref3","index","_sender$startUp","_sender$startUp2","_sender$investor","sender","updatedAt","Link","to","src","profilePicture","alt","firstName","lastName","style","objectFit","designation","startUp","company","investor","TimeAgo","datetime","locale","_ref4","_receiver$startUp","_receiver$startUp2","_receiver$investor","receiver","deleteIcon","_data$startUp","_data$startUp2","_data$investor","lastname","width","dateString","Date","toDateString","toLocaleDateString","weekday","month","day","_Fragment"],"sourceRoot":""}