{"version":3,"file":"static/js/8137.523f3557.chunk.js","mappings":"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","sources":["components/OnBoardUser/steps/investor.js","components/NewInvestor/InvestorCreatePostPopUp/InvestorCreatePostPopUp.jsx","pages/Investor/Home/Home.jsx"],"sourcesContent":["/*\r\n--- Sample step ---\r\n\r\nconst steps = [\r\n  {\r\n    target: \"# or .\",\r\n    content: \"\",\r\n    action: () => {} // action will be called on next button\r\n  },\r\n]; \r\n\r\n*/\r\n\r\nconst explorePage = [\r\n  {\r\n    target: \".filter_container\",\r\n    content:\r\n      \"Greetings! You've arrived at the exploration area of The Capital Hub.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".filter_by\",\r\n    content: \"Select the category you're interested in.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".investor_explore_filters_container\",\r\n    content: \"Customize your search by applying filters.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".filtered-results\",\r\n    content: \"Browse through all the search results.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst profilePage = [\r\n  {\r\n    target: \".professional_info_section\",\r\n    title: \"Profile Page\",\r\n    content: \"Add or Edit your professional information here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#missingDetails\",\r\n    title: \"Fill-in Information\",\r\n    content: \"Complete your profile setup with the Capital HUB chat assistant.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#userBio\",\r\n    title: \"Bio\",\r\n    content: \"Add or Edit information about yourself.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".AchievementsComponent\",\r\n    title: \"Acheivements\",\r\n    content: \"Showcase your accomplishments with Capital HUB to everyone!\",\r\n    placement: \"right-center\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".startups_invested\",\r\n    title: \"Startups Invested\",\r\n    content: \"Add information about the Startups you have Invested in.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".sector_interested\",\r\n    title: \"Sectors Interested\",\r\n    content: \"Add or edit Sectors that intrigue you here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".investment_philosophy\",\r\n    title: \"Investment Philosophy\",\r\n    content: \"Fill information about your Investment Philosophy here.\",\r\n    placement: \"right-start\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst homePage = [\r\n  {\r\n    target: \".pro-sidebar-header\",\r\n    title: \"Profile\",\r\n    content:\r\n      \"Your profile page describes everything relevant about you as a Professional.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_createAPost\",\r\n    title: \"Create A Post\",\r\n    content: \"Share your thoughts with other Founders and Investors.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_companyProfile\",\r\n    title: \"Company\",\r\n    content: \"Show the world what you’re building!\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_oneLink\",\r\n    title: \"OneLink\",\r\n    content:\r\n      \"Your resume for everything related to fundraising, regardless of which side of a pitch day you’re on.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_community\",\r\n    title: \"Community\",\r\n    content:\r\n      \"Network with like-minded Founders and Investors in a private encrypted Community.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_explore\",\r\n    title: \"Explore\",\r\n    content:\r\n      \"Filter the Startups, Founders and Investors on the platform to find who you are truly looking for.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_myStartups\",\r\n    title: \"My Startups\",\r\n    content: \"Add or Edit your Investments and Interests from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_mySchedule\",\r\n    title: \"My Schedule\",\r\n    content:\r\n      \"Manage meetings with Fund Seekers or Interested individuals from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_savedPosts\",\r\n    title: \"Saved Posts\",\r\n    content: \"Revisit gems shared by experienced veterans on this platform.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#sidebar_connections\",\r\n    title: \"Connections\",\r\n    content:\r\n      \"Remember, you are as worthy as your connections are. So get connecting on Capital HUB\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  \r\n];\r\n\r\nconst myStartupsPage = [\r\n  {\r\n    target: \"#myInvestmentsCards\",\r\n    title: \"My Investments\",\r\n    content: \"Information about your Investments can be seen here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#editInvestments\",\r\n    title: \"Add New / Edit Investment\",\r\n    content:\r\n      \"Add a new Investment or Edit information of an existing Investment from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#myInterestsCards\",\r\n    title: \"My Interests\",\r\n    content: \"Information about your Interests can be seen here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#editInterests\",\r\n    title: \"Add New / Edit Interest\",\r\n    content:\r\n      \"Add a new Interest or Edit information of an existing Interest from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst mySchedulePage = [\r\n  {\r\n    target: \".view__selector\",\r\n    title: \"My Schedule\",\r\n    content: \"Switch Calendar views between 'Day', 'Week' and 'Month'.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".calendar__container\",\r\n    title: \"Calendar\",\r\n    content:\r\n      \"Create meetings by dragging over a time slot on the calendar. Click on a created meeting to know more information.\",\r\n    placement: \"right-start\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".rbc-toolbar\",\r\n    title: \"Calendar\",\r\n    content: \"Got to previous or next Day, Week or Month from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#viewRequests\",\r\n    title: \"View Requests\",\r\n    content:\r\n      \"View details about a meeting request by clicking here. You can Accept or Decline the request from here as well.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".meetings__div\",\r\n    title: \"Meetings\",\r\n    content:\r\n      \"Find your regularly scheduled meetings organized by their frequency here.\",\r\n    placement: \"left-start\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst savedPostsPage = [\r\n  {\r\n    target: \".navigation-header\",\r\n    title: \"Collections\",\r\n    content: \"Navigate through your collections\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".card-viewer\",\r\n    title: \"Saved Posts\",\r\n    content:\r\n      \"List of Saved Posts from your collection. Each post can be removed from the collection here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst connectionsPage = [\r\n  {\r\n    target: \".content_section\",\r\n    title: \"Connections\",\r\n    content: \"Manage your Connections on Capital HUB from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".connection_nav\",\r\n    title: \"Connections\",\r\n    content: \"Switch between Received, Sent and Accepted connection requests.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".connection_list\",\r\n    title: \"Connection Requests\",\r\n    content: \"Manage your Received, Sent and Accepted connection requests.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst companyProfilePage = [\r\n  {\r\n    target: \"#editCompanyDetails\",\r\n    title: \"Company Profile\",\r\n    content: \"Click here to information in your Company Profile.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#chooseCompany\",\r\n    title: \"Select Company Profile\",\r\n    content: \"Select an existing profile of your Company.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".company__profile\",\r\n    title: \"Company Profile\",\r\n    content: \"Your Company Profile with all the relevant information.\",\r\n    placement: \"right-start\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \"#createCompanyProfile\",\r\n    title: \"Create your Company Profile\",\r\n    content: \"Click here to create a new Company Profile.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst oneLinkPage = [\r\n  {\r\n    target: \".ShareLink_container\",\r\n    title: \"Share OneLink\",\r\n    content: \"Share your oneLink from here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".introductory_message_container\",\r\n    title: \"Introductory Message\",\r\n    content: \"Add or Edit your Introductory message from here.\",\r\n    placement: \"right-start\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".onePager_wrapper\",\r\n    title: \"One-Pager Preview\",\r\n    content: \"This is the OnePager Preview. Check your One-Link details here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\nconst companyProfileEditPage = [\r\n  {\r\n    target: \"#profileFormContainer\",\r\n    title: \"Company Information\",\r\n    content: \"Add or Edit primary details about your Company in this form.\",\r\n    placement: \"right-start\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".paragraph__component\",\r\n    title: \"Company Description\",\r\n    content: \"Add or Edit a short description of what your Company is about.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".core__team\",\r\n    title: \"Core Team\",\r\n    content: \"Add or Edit members of your Core Team.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".milestones__component\",\r\n    title: \"Milestones\",\r\n    content: \"Add or Edit Milestones you have accomplished with Capital HUB.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n  {\r\n    target: \".card_holder\",\r\n    title: \"Investment Overview\",\r\n    content: \"Edit details about Investement details here.\",\r\n    placement: \"auto\",\r\n    disableBeacon: true,\r\n  },\r\n];\r\n\r\n// Keep this in the bottom\r\nexport const investorOnboardingSteps = {\r\n  explorePage,\r\n  homePage,\r\n  myStartupsPage,\r\n  profilePage,\r\n  mySchedulePage,\r\n  savedPostsPage,\r\n  connectionsPage,\r\n  companyProfilePage,\r\n  oneLinkPage,\r\n  companyProfileEditPage,\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./investorCreatePostPopUp.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getSinglePostAPI,\r\n  postUserPost,\r\n  getInvestorById,\r\n  updateUserById,\r\n  addNotificationAPI,\r\n} from \"../../../Service/user\";\r\nimport { getBase64 } from \"../../../utils/getBase64\";\r\nimport FeedPostCard from \"../../Investor/Cards/FeedPost/FeedPostCard\";\r\nimport EasyCrop from \"react-easy-crop\";\r\nimport IconFile from \"../../Investor/SvgIcons/IconFile\";\r\nimport { BsLink45Deg } from \"react-icons/bs\";\r\nimport { s3 } from \"../../../Service/awsConfig\";\r\nimport { toggleinvestorCreatePostModal } from \"../../../Store/features/design/designSlice\";\r\nimport { CiImageOn, CiVideoOn } from \"react-icons/ci\";\r\nimport toast from \"react-hot-toast\";\r\nimport { loginSuccess } from \"../../../Store/features/user/userSlice\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { selectTheme } from \"../../../Store/features/design/designSlice\";\r\n\r\nconst CreatePostPopUp = ({\r\n  setPopupOpen,\r\n  popupOpen,\r\n  setNewPost,\r\n  respostingPostId,\r\n  appendDataToAllPosts,\r\n}) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const theme = useSelector(selectTheme);\r\n\r\n  const [postText, setPostText] = useState(\"\"); // Store the textarea data\r\n  const [category, setCategory] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(null); // Store the selected image data\r\n  const [selectedVideo, setSelectedVideo] = useState(null); // Store the selected video data\r\n  const [selectedDocument, setSelectedDocument] = useState(null); // Store the selected document data\r\n  const [posting, setPosting] = useState(false);\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n  const handleClose = () => {\r\n    setPopupOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!popupOpen) {\r\n      dispatch(toggleinvestorCreatePostModal());\r\n    }\r\n  }, [popupOpen, dispatch]);\r\n\r\n  const galleryInputRef = useRef(null);\r\n  const cameraInputRef = useRef(null);\r\n  const smileeInputRef = useRef(null);\r\n  const documentInputRef = useRef(null);\r\n\r\n  const handleGalleryButtonClick = () => {\r\n    galleryInputRef.current.click();\r\n  };\r\n\r\n  const handleCameraButtonClick = () => {\r\n    cameraInputRef.current.click();\r\n  };\r\n\r\n  const handleDocumentButtonClick = () => {\r\n    documentInputRef.current.click();\r\n  };\r\n\r\n  const handleSmileeButtonClick = () => {\r\n    smileeInputRef.current.click();\r\n  };\r\n\r\n  const handleOneLinkClick = () => {\r\n    getInvestorById(loggedInUser.investor)\r\n      .then(({ data }) => {\r\n        setPostText(\r\n          (prevPostText) =>\r\n            prevPostText +\r\n            ` https://thecapitalhub.in/onelink/${data.oneLink}/${loggedInUser.oneLinkId}`\r\n        );\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewVideo, setPreviewVideo] = useState(\"\");\r\n  const [previewVideoType, setPreviewVideoType] = useState(\"\");\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const objectUrl = URL.createObjectURL(file);\r\n    if (event.target.name === \"image\" && file.type.includes(\"image\")) {\r\n      setPreviewImage(objectUrl);\r\n      setSelectedImage(file);\r\n      setCroppedImage(null);\r\n      if (selectedVideo || selectedDocument) {\r\n        setPreviewVideo(\"\");\r\n        setSelectedVideo(null);\r\n        setPreviewVideoType(\"\");\r\n        setSelectedDocument(null);\r\n      }\r\n    } else if (event.target.name === \"video\" && file.type.includes(\"video\")) {\r\n      setPreviewVideoType(file.type);\r\n      setPreviewVideo(objectUrl);\r\n      setSelectedVideo(file);\r\n      if (selectedImage || selectedDocument) {\r\n        setPreviewImage(\"\");\r\n        setSelectedImage(null);\r\n        setSelectedDocument(null);\r\n      }\r\n    } else if (event.target.name === \"document\") {\r\n      setSelectedDocument(file);\r\n      if (selectedImage || selectedVideo) {\r\n        setPreviewImage(\"\");\r\n        setSelectedImage(null);\r\n        setPreviewVideo(\"\");\r\n        setSelectedVideo(null);\r\n        setPreviewVideoType(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleQuillChange = (value) => {\r\n    setPostText(value);\r\n  };\r\n\r\n  const getCroppedImg = async (imageSrc, crop) => {\r\n    const image = new Image();\r\n    image.src = imageSrc;\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x,\r\n      crop.y,\r\n      crop.width,\r\n      crop.height,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(\r\n        (blob) => {\r\n          if (!blob) {\r\n            reject(new Error(\"Failed to crop image\"));\r\n            return;\r\n          }\r\n\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = () => {\r\n            resolve(reader.result);\r\n          };\r\n        },\r\n        \"image/jpeg\",\r\n        1\r\n      );\r\n    });\r\n  };\r\n\r\n  const onCropComplete = async (croppedArea, croppedAreaPixels) => {\r\n    const croppedImg = await getCroppedImg(previewImage, croppedAreaPixels);\r\n    setCroppedImage(croppedImg);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setPosting(true);\r\n\r\n    if (!selectedImage && !selectedVideo) {\r\n      if (!respostingPostId && !postText) {\r\n        setPosting(false);\r\n        return;\r\n      }\r\n    }\r\n    const postData = new FormData();\r\n    if (respostingPostId) {\r\n      postData.append(\"resharedPostId\", respostingPostId);\r\n    }\r\n    postData.append(\"description\", postText);\r\n    postData.append(\"category\", category);\r\n\r\n    // Append the image, video, and document files if they are selected\r\n    if (selectedImage) {\r\n      postData.append(\"image\", croppedImage);\r\n    }\r\n    if (selectedVideo) {\r\n      const video = await getBase64(selectedVideo);\r\n      postData.append(\"video\", video);\r\n    }\r\n    if (selectedDocument) {\r\n      const timestamp = Date.now();\r\n      const fileName = `${timestamp}_${selectedDocument.name}`;\r\n      const params = {\r\n        Bucket: \"thecapitalhubwebsitedocuments\",\r\n        Key: `documents/${fileName}`,\r\n        Body: selectedDocument,\r\n      };\r\n      const res = await s3.upload(params).promise();\r\n      postData.append(\"documentUrl\", res.Location);\r\n      postData.append(\"documentName\", selectedDocument.name);\r\n      postData.append(\"image\",res.Location);\r\n    }\r\n\r\n    // Call the postUserPost function to make the POST request to the server\r\n    postUserPost(postData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        appendDataToAllPosts(response.data);\r\n        setPostText(\"\");\r\n        setSelectedImage(null);\r\n        setSelectedVideo(null);\r\n        setSelectedDocument(null);\r\n        setCroppedImage(null);\r\n        setNewPost(Math.random());\r\n        // Close the popup after successful submission\r\n        handleClose();\r\n\r\n        if (!loggedInUser.achievements.includes(\"6564684649186bca517cd0c9\")) {\r\n          const achievements = [...loggedInUser.achievements];\r\n          achievements.push(\"6564684649186bca517cd0c9\");\r\n          const updatedData = { achievements };\r\n          updateUserById(loggedInUser._id, updatedData)\r\n            .then(({ data }) => {\r\n              dispatch(loginSuccess(data.data));\r\n              const notificationBody = {\r\n                recipient: loggedInUser._id,\r\n                type: \"achievementCompleted\",\r\n                achievementId: \"6564684649186bca517cd0c9\",\r\n              };\r\n              addNotificationAPI(notificationBody)\r\n                .then((data) => console.log(\"Added\"))\r\n                .catch((error) => console.error(error.message));\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error updating user:\", error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // Handle error if needed\r\n        console.error(\"Error submitting post:\", error);\r\n      })\r\n      .finally(() => setPosting(false));\r\n  };\r\n\r\n  const [repostingPostData, setRepostingPostData] = useState(null);\r\n  const [loadingRepostData, setLoadingRepostData] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (respostingPostId) {\r\n      setLoadingRepostData(true);\r\n      getSinglePostAPI(respostingPostId)\r\n        .then(({ data }) => {\r\n          setRepostingPostData(data);\r\n          setLoadingRepostData(false);\r\n        })\r\n        .catch(() => handleClose());\r\n    }\r\n  }, [respostingPostId]);\r\n\r\n  return (\r\n    <>\r\n      {popupOpen && <div className=\"background-overlay\"></div>}\r\n      <div\r\n        className={`investor_create_post_modal modal ${\r\n          popupOpen ? \"d-block\" : \"\"\r\n        }`}\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"createpost_modal-header\">\r\n              <div className=\"createpostpopup\">\r\n                <div className=\"ceatepost_img_name\">\r\n                  <img\r\n                    src={loggedInUser.profilePicture}\r\n                    width={50}\r\n                    height={50}\r\n                    style={{ objectFit: \"cover\" }}\r\n                    className=\"rounded-circle\"\r\n                    alt=\"profile pic\"\r\n                  />\r\n                  <span>\r\n                    <h2>\r\n                      {loggedInUser?.firstName} {loggedInUser.lastName}\r\n                    </h2>\r\n                    <h6>Public</h6>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close d-flex justify-content-end\"\r\n                  onClick={handleClose}\r\n                  style={{ background: \"transparent\", border: \"none\" }}\r\n                >\r\n                  <h3 aria-hidden=\"true\" className=\"m-3\">\r\n                    &times;\r\n                  </h3>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"createpost_text_area\">\r\n                <ReactQuill\r\n                  value={postText}\r\n                  onChange={handleQuillChange}\r\n                  placeholder=\"Write a post...\"\r\n                  modules={{ toolbar: false }} // Hide the toolbar\r\n                  formats={[\r\n                    \"header\",\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"underline\",\r\n                    \"strike\",\r\n                    \"list\",\r\n                    \"bullet\",\r\n                    \"link\",\r\n                    \"image\",\r\n                    \"video\",\r\n                  ]}\r\n                  style={{ \r\n                    height: respostingPostId ? \"80px\" : \"200px\",\r\n                    color: theme === \"dark\" ? \"white\" : \"black\"\r\n                  }}\r\n                />\r\n\r\n                {respostingPostId &&\r\n                  (loadingRepostData ? (\r\n                    <div className=\"d-flex justify-content-center my-4\">\r\n                      <h6 className=\"h6 me-4\">Loading post...</h6>\r\n                      <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <FeedPostCard\r\n                      repostPreview\r\n                      userId={repostingPostData?.user?._id}\r\n                      postId={repostingPostData?._id}\r\n                      designation={repostingPostData?.user?.designation}\r\n                      profilePicture={repostingPostData?.user?.profilePicture}\r\n                      description={repostingPostData?.description}\r\n                      firstName={repostingPostData?.user?.firstName}\r\n                      lastName={repostingPostData?.user?.lastName}\r\n                      video={repostingPostData?.video}\r\n                      image={repostingPostData?.image}\r\n                      createdAt={repostingPostData?.createdAt}\r\n                      likes={repostingPostData?.likes}\r\n                    />\r\n                  ))}\r\n\r\n                {previewImage && (\r\n                  <div className=\"image-cropper\">\r\n                    <EasyCrop\r\n                      image={previewImage}\r\n                      crop={crop}\r\n                      zoom={zoom}\r\n                      onCropChange={setCrop}\r\n                      onZoomChange={setZoom}\r\n                      onCropComplete={onCropComplete}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {previewVideo && (\r\n                  <video\r\n                    key={selectedVideo ? selectedVideo.name : \"\"}\r\n                    controls\r\n                    width={\"100%\"}\r\n                  >\r\n                    <source src={previewVideo} type={previewVideoType} />\r\n                    Your browser does not support the video tag.\r\n                  </video>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"createpost_modal_footer\">\r\n              <div className=\"modal_footer_container mt-4 mb-3\">\r\n                <div className=\"left_buttons\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"image\"\r\n                    style={{ display: \"none\" }}\r\n                    ref={galleryInputRef}\r\n                    onChange={handleFileChange}\r\n                    accept=\"image/*\"\r\n                  />\r\n                  <button\r\n                    className=\"white_button\"\r\n                    onClick={handleGalleryButtonClick}\r\n                  >\r\n                    <CiImageOn size={20} />\r\n                  </button>\r\n\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"video\"\r\n                    style={{ display: \"none\" }}\r\n                    ref={cameraInputRef}\r\n                    onChange={handleFileChange}\r\n                    accept=\"video/*\"\r\n                  />\r\n                  <button\r\n                    className=\"white_button\"\r\n                    onClick={handleCameraButtonClick}\r\n                  >\r\n                    <CiVideoOn size={20} />\r\n                  </button>\r\n\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"document\"\r\n                    style={{ display: \"none\" }}\r\n                    ref={documentInputRef}\r\n                    onChange={handleFileChange}\r\n                  />\r\n                  <button\r\n                    className=\"white_button\"\r\n                    onClick={handleDocumentButtonClick}\r\n                  >\r\n                    <IconFile width=\"16px\" height=\"16px\" />\r\n                  </button>\r\n\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"document\"\r\n                    style={{ display: \"none\" }}\r\n                    ref={smileeInputRef}\r\n                    onChange={handleFileChange}\r\n                  />\r\n\r\n                  <button className=\"white_button\" onClick={handleOneLinkClick}>\r\n                    <BsLink45Deg height={\"59px\"} width={\"59px\"} size={\"20px\"} />\r\n                  </button>\r\n                </div>\r\n                <div className=\"post_button_container\">\r\n                  {posting ? (\r\n                    <button className=\"investor-post_button\" disabled>\r\n                      Posting...\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      className=\"investor-post_button\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      Post\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePostPopUp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./home.scss\";\r\n// import profilePic from \"../../../Images/investorIcon/profilePic.webp\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import InvestorRecommendationCard from \"../../../components/NewInvestor/InvestorRecommendationCard/InvestorRecommendationCard\";\r\nimport BatchImag from \"../../../Images/tick-mark.png\"\r\nimport InvestorRightProfileCard from \"../../../components/NewInvestor/InvestorRightProfileCard/InvestorRightProfileCard\";\r\nimport InvestorCreatePostPopUp from \"../../../components/NewInvestor/InvestorCreatePostPopUp/InvestorCreatePostPopUp\";\r\n// import InvestorSmallProfilecard from \"../../../components/NewInvestor/InvestorSmallProfilecard/InvestorSmallProfilecard\";\r\nimport InvestorFeedPostCard from \"../../../components/NewInvestor/InvesterFeedPostCard/InvestorFeedPostCard\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport {\r\n  getAllPostsAPI,\r\n  getInvestorById,\r\n  getSavedPostCollections,\r\n  postUserPost,\r\n} from \"../../../Service/user\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport {\r\n  setPageTitle,\r\n  selectInvestorCreatePostModal,\r\n  setShowOnboarding,\r\n} from \"../../../Store/features/design/designSlice\";\r\n\r\nimport { investorOnboardingSteps } from \"../../../components/OnBoardUser/steps/investor\";\r\nimport {\r\n  selectCompanyDataId,\r\n  selectIsInvestor,\r\n  selectLoggedInUserId,\r\n  selectUserInvestor,\r\n  selectUserProfilePicture,\r\n  setUserCompany,\r\n} from \"../../../Store/features/user/userSlice\";\r\nimport TutorialTrigger from \"../../../components/Shared/TutorialTrigger/TutorialTrigger\";\r\nimport PostDetail from \"../../../components/Investor/Cards/FeedPost/PostDetail\";\r\n\r\n\r\nfunction Home() {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n  const userProfilePicture = useSelector(selectUserProfilePicture);\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n  const userInvestor = useSelector(selectUserInvestor);\r\n  const companyDataId = useSelector(selectCompanyDataId);\r\n  const { postId } = useParams();\r\n  const userVisitCount = localStorage.getItem(\"userVisit\");\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const [newPost, setNewPost] = useState(false);\r\n  const [loadingFeed, setLoadingFeed] = useState(false);\r\n  const [getSavedPostData, setgetSavedPostData] = useState(\"\");\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [postData, setPostData] = useState({\r\n    userId: \"\",\r\n    postId: \"\",\r\n    designation: \"\",\r\n    startUpCompanyName: \"\",\r\n    investorCompanyName: \"\",\r\n    profilePicture: \"\",\r\n    description: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    oneLinkId: \"\",\r\n    video: \"\",\r\n    image: \"\",\r\n    documentName: \"\",\r\n    documentUrl: \"\",\r\n    createdAt: \"\",\r\n    likes: \"\",\r\n    response: \"\",\r\n    repostLoading: \"\",\r\n    resharedPostId: \"\",\r\n    isSubscribed:false\r\n  });\r\n  const dispatch = useDispatch();\r\n  const isInvestorCreatePostModalOpen = useSelector(\r\n    selectInvestorCreatePostModal\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (Number(userVisitCount) <= 1) {\r\n      dispatch(setShowOnboarding(true));\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setPopupOpen(isInvestorCreatePostModalOpen);\r\n  }, [isInvestorCreatePostModalOpen]);\r\n\r\n  const openPopup = () => {\r\n    setPopupOpen(!popupOpen);\r\n  };\r\n\r\n  const appendDataToAllPosts = (data) => {\r\n    setAllPosts([data, ...allPosts]);\r\n  };\r\n\r\n  const deletePostFilterData = (postId) => {\r\n    const filteredPosts = allPosts.filter((post) => post._id !== postId);\r\n    setAllPosts(filteredPosts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setPageTitle(\"Home\"));\r\n    document.title = \"Home | Investors - The Capital Hub\";\r\n\r\n    // Fetch company data\r\n    if (isInvestor && !companyDataId) {\r\n      getInvestorById(userInvestor)\r\n        .then(({ data }) => {\r\n          dispatch(setUserCompany(data));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, [dispatch, isInvestor, userInvestor, companyDataId]);\r\n\r\n  const fetchMorePosts = () => {\r\n    getAllPostsAPI(page)\r\n      .then(({ data }) => {\r\n        if (data?.length === 0) {\r\n          setHasMore(false);\r\n        } else {\r\n          const totalPost = data.filter((item) => item?.postType !== \"company\");\r\n          const post = allPosts.filter((item) => item?.postType !== \"company\");\r\n          setAllPosts([...post, ...totalPost]);\r\n          setPage(page + 1);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setHasMore(false);\r\n        console.log(err);\r\n      })\r\n      .finally(() => setLoadingFeed(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSavedPostCollections(loggedInUserId)\r\n      .then((data) => {\r\n        setgetSavedPostData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n    fetchMorePosts();\r\n  }, [newPost, loggedInUserId]);\r\n\r\n  // Repost\r\n  const [repostLoading, setRepostLoading] = useState({\r\n    instant: false,\r\n    withThoughts: false,\r\n  });\r\n  const [respostingPostId, setRepostingPostId] = useState(\"\");\r\n\r\n  const repostInstantly = (resharedPostId) => {\r\n    setRepostLoading({ ...repostLoading, instant: true });\r\n    postUserPost({ resharedPostId })\r\n      .then(() => fetchMorePosts())\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setRepostLoading({ ...repostLoading, instant: false }));\r\n  };\r\n\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const showPopup = queryParams.get(\"showPopup\") === \"true\";\r\n\r\n  useEffect(() => {\r\n    if (showPopup) {\r\n      setPopupOpen(true);\r\n      const urlWithoutQuery = location.pathname;\r\n      window.history.replaceState({}, \"\", urlWithoutQuery);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"investor_feed_container\">\r\n        {postId ? (\r\n          <PostDetail\r\n            userId={postData.userId}\r\n            postId={postId}\r\n            designation={postData.designation}\r\n            startUpCompanyName={postData.startUp}\r\n            investorCompanyName={postData.investor}\r\n            profilePicture={postData.profilePicture}\r\n            description={postData.description}\r\n            firstName={postData.firstName}\r\n            lastName={postData.lastName}\r\n            oneLinkId={postData.oneLinkId}\r\n            video={postData.video}\r\n            image={postData.image}\r\n            documentName={postData.documentName}\r\n            documentUrl={postData.documentUrl}\r\n            createdAt={postData.createdAt}\r\n            likes={postData.likes}\r\n            resharedPostId={postData.resharedPostId}\r\n            fetchAllPosts={fetchMorePosts}\r\n            response={getSavedPostData}\r\n            repostWithToughts={(resharedPostId) => {\r\n              setRepostingPostId(resharedPostId);\r\n              openPopup();\r\n            }}\r\n            repostInstantly={repostInstantly}\r\n            repostLoading={repostLoading}\r\n            deletePostFilterData={deletePostFilterData}\r\n            setPostData={setPostData}\r\n            isSubscribed = {postData.isSubscribed}\r\n          />\r\n        ) : (\r\n          <div className=\"main_content\">\r\n            {/* <InvestorSmallProfilecard text={\"Home\"} /> */}\r\n            <div className=\"posts_col d-flex flex-column gap-3\">\r\n              {/* Onboarding popup */}\r\n              <TutorialTrigger steps={investorOnboardingSteps.homePage} />\r\n\r\n              {/* Write a post */}\r\n              <div className=\"box start_post_container border\">\r\n                <img\r\n                  src={userProfilePicture}\r\n                  alt=\"Profile\"\r\n                  className=\"rounded-circle\"\r\n                  style={{ objectFit: \"cover\" }}\r\n                />\r\n                 \r\n                <div className=\"w-100 me-4\" onClick={openPopup}>\r\n                  <input\r\n                    className=\"px-3\"\r\n                    type=\"text\"\r\n                    placeholder=\"Write a post...\"\r\n                    style={{ pointerEvents: \"none\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <InfiniteScroll\r\n                  dataLength={allPosts.length}\r\n                  next={fetchMorePosts}\r\n                  hasMore={hasMore}\r\n                  loader={\r\n                    <p className=\"spinner_loader container p-5 text-center my-5 rounded-4 shadow\">\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <div className=\"spinner-border text-secondary\" role=\"status\">\r\n                          <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                      </div>\r\n                    </p>\r\n                  }\r\n                >\r\n                  {allPosts?.map((post) => {\r\n                    if (!post || !post.user) {\r\n                      return null;\r\n                    }\r\n                    const {\r\n                      description,\r\n                      user: {\r\n                        firstName,\r\n                        lastName,\r\n                        designation,\r\n                        profilePicture,\r\n                        _id: userId,\r\n                        startUp,\r\n                        investor,\r\n                        oneLinkId,\r\n                        isSubscribed\r\n                      },\r\n                      video,\r\n                      image,\r\n                      documentUrl,\r\n                      documentName,\r\n                      createdAt,\r\n                      likes,\r\n                      _id,\r\n                      resharedPostId,\r\n                    } = post;\r\n                    return (\r\n                      <InvestorFeedPostCard\r\n                        key={_id} // Ensure this is a unique key\r\n                        userId={userId}\r\n                        postId={_id}\r\n                        designation={designation}\r\n                        profilePicture={profilePicture}\r\n                        description={description}\r\n                        startUpCompanyName={startUp}\r\n                        investorCompanyName={investor}\r\n                        firstName={firstName}\r\n                        lastName={lastName}\r\n                        oneLinkId={oneLinkId}\r\n                        video={video}\r\n                        image={image}\r\n                        documentName={documentName}\r\n                        documentUrl={documentUrl}\r\n                        createdAt={createdAt}\r\n                        likes={likes}\r\n                        fetchAllPosts={fetchMorePosts}\r\n                        response={getSavedPostData}\r\n                        repostWithToughts={(resharedPostId) => {\r\n                          setRepostingPostId(resharedPostId);\r\n                          openPopup();\r\n                        }}\r\n                        repostInstantly={repostInstantly}\r\n                        repostLoading={repostLoading}\r\n                        resharedPostId={resharedPostId}\r\n                        deletePostFilterData={deletePostFilterData}\r\n                        setPostData={setPostData}\r\n                        isSubscribed={isSubscribed||false}\r\n                      />\r\n                    );\r\n                  })}\r\n                </InfiniteScroll>\r\n\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"right_content d-none d-xl-block\">\r\n          <InvestorRightProfileCard />\r\n          <RecommendationCard isInvestor={true} />\r\n          <NewsCorner />\r\n        </div>\r\n      </div>\r\n      {popupOpen && (\r\n        <InvestorCreatePostPopUp\r\n          setPopupOpen={setPopupOpen}\r\n          popupOpen\r\n          setNewPost={setNewPost}\r\n          respostingPostId={respostingPostId}\r\n          appendDataToAllPosts={appendDataToAllPosts}\r\n        />\r\n      )}\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["investorOnboardingSteps","explorePage","target","content","placement","disableBeacon","homePage","title","myStartupsPage","profilePage","mySchedulePage","savedPostsPage","connectionsPage","companyProfilePage","oneLinkPage","companyProfileEditPage","_ref","_repostingPostData$us","_repostingPostData$us2","_repostingPostData$us3","_repostingPostData$us4","_repostingPostData$us5","setPopupOpen","popupOpen","setNewPost","respostingPostId","appendDataToAllPosts","loggedInUser","useSelector","state","user","dispatch","useDispatch","theme","selectTheme","postText","setPostText","useState","category","setCategory","selectedImage","setSelectedImage","selectedVideo","setSelectedVideo","selectedDocument","setSelectedDocument","posting","setPosting","crop","setCrop","x","y","zoom","setZoom","croppedImage","setCroppedImage","handleClose","useEffect","toggleinvestorCreatePostModal","galleryInputRef","useRef","cameraInputRef","smileeInputRef","documentInputRef","previewImage","setPreviewImage","previewVideo","setPreviewVideo","previewVideoType","setPreviewVideoType","handleFileChange","event","file","files","objectUrl","URL","createObjectURL","name","type","includes","repostingPostData","setRepostingPostData","loadingRepostData","setLoadingRepostData","getSinglePostAPI","then","_ref4","data","catch","_jsxs","_Fragment","children","_jsx","className","concat","tabIndex","role","src","profilePicture","width","height","style","objectFit","alt","firstName","lastName","onClick","background","border","ReactQuill","value","onChange","placeholder","modules","toolbar","formats","color","FeedPostCard","repostPreview","userId","_id","postId","designation","description","video","image","createdAt","likes","EasyCrop","onCropChange","onZoomChange","onCropComplete","async","croppedArea","croppedAreaPixels","croppedImg","imageSrc","Image","canvas","document","createElement","ctx","getContext","drawImage","Promise","resolve","reject","toBlob","blob","Error","reader","FileReader","readAsDataURL","onloadend","result","getCroppedImg","controls","display","ref","accept","handleGalleryButtonClick","current","click","CiImageOn","size","handleCameraButtonClick","CiVideoOn","handleDocumentButtonClick","IconFile","handleOneLinkClick","getInvestorById","investor","_ref2","prevPostText","oneLink","oneLinkId","error","console","log","BsLink45Deg","disabled","e","preventDefault","postData","FormData","append","getBase64","timestamp","Date","now","fileName","params","Bucket","Key","Body","res","s3","upload","promise","Location","postUserPost","response","Math","random","achievements","push","updatedData","updateUserById","_ref3","loginSuccess","notificationBody","recipient","achievementId","addNotificationAPI","message","finally","loggedInUserId","selectLoggedInUserId","userProfilePicture","selectUserProfilePicture","isInvestor","selectIsInvestor","userInvestor","selectUserInvestor","companyDataId","selectCompanyDataId","useParams","userVisitCount","localStorage","getItem","allPosts","setAllPosts","newPost","loadingFeed","setLoadingFeed","getSavedPostData","setgetSavedPostData","hasMore","setHasMore","page","setPage","setPostData","startUpCompanyName","investorCompanyName","documentName","documentUrl","repostLoading","resharedPostId","isSubscribed","isInvestorCreatePostModalOpen","selectInvestorCreatePostModal","Number","setShowOnboarding","openPopup","deletePostFilterData","filteredPosts","filter","post","setPageTitle","setUserCompany","fetchMorePosts","getAllPostsAPI","length","totalPost","item","postType","err","getSavedPostCollections","setRepostLoading","instant","withThoughts","setRepostingPostId","repostInstantly","location","useLocation","showPopup","URLSearchParams","search","get","urlWithoutQuery","pathname","window","history","replaceState","MaxWidthWrapper","PostDetail","startUp","fetchAllPosts","repostWithToughts","TutorialTrigger","steps","pointerEvents","InfiniteScroll","dataLength","next","loader","map","InvestorFeedPostCard","InvestorRightProfileCard","RecommendationCard","NewsCorner","InvestorCreatePostPopUp"],"sourceRoot":""}