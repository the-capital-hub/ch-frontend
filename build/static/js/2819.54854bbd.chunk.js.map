{"version":3,"file":"static/js/2819.54854bbd.chunk.js","mappings":"yIAiCe,I,0BC5Bf,MAkCA,EAlCyBA,IAAiC,IAAhC,UAAEC,EAAS,KAAEC,EAAI,MAAEC,GAAOH,GAC7BI,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKC,eACnCC,GAKa,IAAIC,MAAOC,eAH7B,IAAID,KAAKD,GACVG,mBAAmB,QAFf,CAAEC,QAAS,QAASC,MAAO,OAAQC,IAAK,YADtCN,MAOpB,OACEO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,GAoBG,C,2KCtBQ,SAASC,IACtB,MAAMV,GAAeH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKC,eACvD,IAAI,SAAEW,IAAaC,EAAAA,EAAAA,KACnB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAaH,EAAaI,IAAI,aAE7BC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,IAC3CG,GAAWC,EAAAA,EAAAA,MA6BjB,OA3BAC,EAAAA,EAAAA,YAAU,KACRC,SAASC,MAAQ,gDACjBJ,GAASK,EAAAA,EAAAA,IAAa,mBAAmB,GACxC,CAACL,KAEJE,EAAAA,EAAAA,YAAU,KACW,MAAfT,GACFa,EAAAA,EAAAA,IAA0BlB,EAAUX,EAAa8B,WAC9CC,MAAKtC,IAAe,IAAd,KAAEuC,GAAMvC,EACb6B,EAAgBU,EAAKC,SACrBd,EAAe,GAAG,IAEnBe,OAAM,KACLZ,EAAgB,GAAG,KAGvBa,EAAAA,EAAAA,IAAYxB,GACToB,MAAKK,IAAe,IAAd,KAAEJ,GAAMI,EACbjB,EAAea,GACfV,EAAgB,GAAG,IAEpBY,OAAM,KACLf,EAAe,GAAG,GAExB,GACC,CAACR,EAAUK,EAAYhB,EAAa8B,aAGrCtB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAe,CAAAC,UACd9B,EAAAA,EAAAA,KAAA,OAAKd,UAAU,gDAA+C4C,UAE5DC,EAAAA,EAAAA,MAAA,OAAK7C,UAAU,gBAAe4C,SAAA,EAC5B9B,EAAAA,EAAAA,KAACgC,EAAAA,EAAgB,CAAC7C,KAAM,oBAEA,IAAvBuB,EAAYuB,QAAwC,IAAxBpB,EAAaoB,OACjB,IAAvBvB,EAAYuB,QACVjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAc,CAACxB,YAAaA,IACH,IAAxBG,EAAaoB,QACfjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAc,CAACrB,aAAcA,EAAcsB,UAAU,WAEtDnC,EAAAA,EAAAA,KAAA,OAAA8B,SAAK,uBAGP9B,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,UAWtB,C","sources":["Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","pages/Investor/InvestorCompanyProfilePage/InvestorCompanyProfilePage.jsx"],"sourcesContent":["var _path, _rect;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\n// import NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOnePager, getInvestorFromOneLinkAPI } from \"../../../Service/user\";\r\nimport SmallProfileCard from \"../../../components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\n// import RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SpinnerBS from \"../../../components/Shared/Spinner/SpinnerBS\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport default function InvestorCompanyProfilePage() {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  let { username } = useParams();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const isInvestor = searchParams.get(\"investor\");\r\n\r\n  const [companyData, setCompanyData] = useState([]);\r\n  const [investorData, setInvestorData] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Company Profile | Investors - The Capital Hub\";\r\n    dispatch(setPageTitle(\"Company Profile\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isInvestor === \"1\") {\r\n      getInvestorFromOneLinkAPI(username, loggedInUser.oneLinkId)\r\n        .then(({ data }) => {\r\n          setInvestorData(data.company);\r\n          setCompanyData([]);\r\n        })\r\n        .catch(() => {\r\n          setInvestorData([]);\r\n        });\r\n    } else {\r\n      getOnePager(username)\r\n        .then(({ data }) => {\r\n          setCompanyData(data);\r\n          setInvestorData([]);\r\n        })\r\n        .catch(() => {\r\n          setCompanyData([]);\r\n        });\r\n    }\r\n  }, [username, isInvestor, loggedInUser.oneLinkId]);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"otherInvestorCompanyProfilePage__wrapper pb-5\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <SmallProfileCard text={\"Company Profile\"} />\r\n          {/* Company profile */}\r\n          {companyData.length !== 0 || investorData.length !== 0 ? (\r\n            companyData.length !== 0 ? (\r\n              <CompanyProfile companyData={companyData} />\r\n            ) : investorData.length !== 0 ? (\r\n              <CompanyProfile investorData={investorData} isStartup=\"false\" />\r\n            ) : (\r\n              <div>No data available</div>\r\n            )\r\n          ) : (\r\n            <SpinnerBS />\r\n          )}\r\n        </div>\r\n        {/* Right side content */}\r\n        {/* <div className=\"right__content\">\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div> */}\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","className","text","width","useSelector","state","user","loggedInUser","dateString","Date","toDateString","toLocaleDateString","weekday","month","day","_jsx","_Fragment","InvestorCompanyProfilePage","username","useParams","searchParams","setSearchParams","useSearchParams","isInvestor","get","companyData","setCompanyData","useState","investorData","setInvestorData","dispatch","useDispatch","useEffect","document","title","setPageTitle","getInvestorFromOneLinkAPI","oneLinkId","then","data","company","catch","getOnePager","_ref2","MaxWidthWrapper","children","_jsxs","SmallProfileCard","length","CompanyProfile","isStartup","SpinnerBS"],"sourceRoot":""}