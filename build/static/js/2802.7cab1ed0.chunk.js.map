{"version":3,"file":"static/js/2802.7cab1ed0.chunk.js","mappings":"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EAAAA,GAAW,CAAA/H,UACVC,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CACXE,UAAWgH,EACX/G,QAAS,oBACTE,oBAAqBA,aAOnC,C,mCCvFO,MAAMuH,EAAsB,CACjCC,uBAAwB,wCACxBC,gBACE,wEACFC,wBAAyB,6CACzBC,4BAA6B,iDAC7BC,0BACE,4DACFC,4BACE,mDACFC,yCACE,yEACFC,kCACE,uDACFC,iCACE,8DACFC,+BACE,oDACFC,oCACE,2D,8HCnBG,MAAMC,EAAgB,CAC3B,kBACA,MACA,MACA,QACA,MACA,QACA,YACA,aACA,UACA,QACA,gBACA,kBACA,oBACA,MACA,WACA,kBACA,aACA,YACA,eACA,UACA,SACA,aACA,2BACA,YACA,6BACA,gBACA,0BACA,8BACA,iCACA,WACA,+BACA,YACA,aACA,qBACA,qBACA,YACA,YACA,kCACA,kCACA,sCACA,kBACA,gBACA,WACA,iCACA,+BACA,cACA,UAGWC,EAAgB,CAAC,OAAQ,SAAU,SAEnCC,EAAc,CAAC,MAAO,OAAQ,SAE9BC,EAAa,CAAC,mBAAoB,YAAa,YAAa,qBAE5DC,EAAe,CAC1B,YACA,YACA,iBACA,WACA,OACA,sBAGWC,EAAyB,CACpC,YACA,YACA,iBACA,WACA,OACA,sBAGWC,EAAuB,CAClC,0BACA,gCACA,gCACA,2BAGWC,EAAsB,CACjC,eACA,YACA,+BACA,eACA,2BAGWC,EAAwB,CACnC,qCACA,kDACA,sDACA,2DACA,qDACA,+CAYWC,EAA2B,CACtC,YACA,YACA,aACA,cACA,aAGWC,EAAmB,CAC9B,+BACA,yCACA,yBACA,oBACA,uBACA,wBACA,yBACA,4BACA,uBACA,mBACA,iBACA,sB,mMC/Ha,SAASC,EAAQlJ,GAAY,IAAX,KAAEmJ,GAAMnJ,EACvC,OACEV,EAAAA,EAAAA,MAAA,OACEmD,UAAU,oCACVO,MAAO,CAAEoG,WAAY,QAASzJ,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,QACE6C,UAAU,GACVO,MAAO,CACLqG,KAAM,QACNC,QAAS,MACTC,UAAW,6CAGf3J,EAAAA,EAAAA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","sources":["components/Investor/SvgIcons/IconCloudUpload.jsx","components/NewInvestor/ProfileComponents/AddEditModal.jsx","components/NewInvestor/ProfileComponents/InvestedCard.jsx","components/NewInvestor/ProfileComponents/StartupsInvested/StartupsInvested.jsx","constants/Investor/ProfilePage.js","constants/Startups/ExplorePage.js","components/Shared/DividerH/DividerH.jsx","components/NewInvestor/InvestorOneLinkEditComponents/ProfileInformation/ProfileInformationForm.jsx","components/NewInvestor/ProfileComponents/InvestmentPhilosophy/Components/InvestmentPhilosophyInfo/SectorPreferences/SectorPreferences.jsx","components/NewInvestor/InvestorOneLinkEditComponents/InvestmentPhilosophyForm/FormTextArea.jsx","components/NewInvestor/InvestorOneLinkEditComponents/InvestmentPhilosophyForm/InvestmentPhilosophyForm.jsx","pages/Investor/InvestorOneLinkEdit/InvestorOneLinkEdit.jsx","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["// icon:cloud-upload | Bootstrap https://icons.getbootstrap.com/ | Bootstrap\r\nimport * as React from \"react\";\r\n\r\nfunction IconCloudUpload(props) {\r\n  return (\r\n    <svg\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"currentColor\"\r\n        d=\"M4.406 1.342A5.53 5.53 0 018 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 010-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 00-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 010 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"black\"\r\n        d=\"M7.646 4.146a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L8.5 5.707V14.5a.5.5 0 01-1 0V5.707L5.354 7.854a.5.5 0 11-.708-.708l3-3z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconCloudUpload;\r\n","import { AiFillDelete } from \"react-icons/ai\";\r\nimport { CiEdit } from \"react-icons/ci\";\r\nimport { BsFillCloudUploadFill } from \"react-icons/bs\";\r\nimport { useState } from \"react\";\r\nimport { getBase64 } from \"../../../utils/getBase64\";\r\nimport {\r\n  addStartupInvested,\r\n  addSectorOfInterest,\r\n  getInvestorById,\r\n  uploadLogo,\r\n  postInvestorData,\r\n} from \"../../../Service/user\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AddEditModal.scss\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport Modal from \"../../../components/PopUp/Modal/Modal\";\r\n\r\nexport default function AddEditModal({\r\n  dataArray,\r\n  heading,\r\n  isStartups = true,\r\n  setInvestedStartups,\r\n  setSectorsData,\r\n  testformData,\r\n}) {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [formData, setFormData] = useState({\r\n    companyImage: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    equity: \"\",\r\n  });\r\n  const [sectorLogo, setSectorLogo] = useState(null);\r\n  const [isEdited, setIsEdited] = useState(false);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [isNewImage, setNewImage] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [deleteConfirmIndex, setDeleteConfirmIndex] = useState();\r\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value, type, files } = event.target;\r\n\r\n    if (type === \"file\") {\r\n      setNewImage(false);\r\n      setFormData({\r\n        ...formData,\r\n        [name]: files[0],\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSectorLogoChange = (event) => {\r\n    const { files } = event.target;\r\n    setSectorLogo(files[0]);\r\n    setNewImage(false);\r\n  };\r\n\r\n  //handle add and edit\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      if (isEdited) {\r\n        const { data: investor } = await getInvestorById(\r\n          loggedInUser?.investor\r\n        );\r\n        if (isStartups) {\r\n          const editedStartUp = investor.startupsInvested[editIndex];\r\n          editedStartUp.name = formData.name;\r\n          editedStartUp.description = formData.description;\r\n          editedStartUp.investedEquity = formData.equity;\r\n          if (formData.companyImage instanceof Blob) {\r\n            const logo = await getBase64(formData.companyImage);\r\n            const { url } = await uploadLogo({ logo });\r\n            editedStartUp.logo = url;\r\n          }\r\n          investor.startupsInvested[editIndex] = editedStartUp;\r\n          const { data: response } = await postInvestorData(investor);\r\n          setInvestedStartups(response.startupsInvested);\r\n        } else {\r\n          const editedSector = investor.sectorInterested[editIndex];\r\n          editedSector.name = formData.name;\r\n          if (sectorLogo instanceof Blob) {\r\n            const logo = await getBase64(sectorLogo);\r\n            const { url } = await uploadLogo({ logo });\r\n            editedSector.logo = url;\r\n          }\r\n          investor.sectorInterested[editIndex] = editedSector;\r\n          const { data: response } = await postInvestorData(investor);\r\n          setSectorsData(response.sectorInterested);\r\n        }\r\n      } else {\r\n        if (isStartups) {\r\n          const logo = await getBase64(formData.companyImage);\r\n          const newStartUpData = {\r\n            logo: logo,\r\n            name: formData.name,\r\n            description: formData.description,\r\n            investedEquity: formData.equity,\r\n          };\r\n          console.log(newStartUpData);\r\n          const response = await addStartupInvested(\r\n            loggedInUser?.investor,\r\n            newStartUpData\r\n          );\r\n          setInvestedStartups(response.data.startupsInvested);\r\n        } else {\r\n          const logo = await getBase64(sectorLogo);\r\n          const newSectorData = {\r\n            logo: logo,\r\n            name: formData.name,\r\n          };\r\n          console.log(\"Sector\", newSectorData);\r\n          const response = await addSectorOfInterest(\r\n            loggedInUser?.investor,\r\n            newSectorData\r\n          );\r\n          console.log(response.data);\r\n          setSectorsData(response.data.sectorInterested);\r\n        }\r\n      }\r\n      resetFormData();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (index) => {\r\n    try {\r\n      setIsEdited(true);\r\n      setNewImage(true);\r\n      setEditIndex(index);\r\n      if (isStartups) {\r\n        const startUp = dataArray[index];\r\n        setFormData({\r\n          name: startUp.name,\r\n          companyImage: startUp.logo,\r\n          description: startUp.description,\r\n          equity: startUp.investedEquity,\r\n        });\r\n      } else {\r\n        const sector = dataArray[index];\r\n        setFormData({\r\n          name: sector.name,\r\n        });\r\n        setSectorLogo(sector.logo);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const resetFormData = () => {\r\n    setFormData({\r\n      companyImage: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      equity: \"\",\r\n    });\r\n    setSectorLogo(null);\r\n    setIsEdited(false);\r\n    setEditIndex(null);\r\n    setNewImage(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (!deleteConfirm) {\r\n      return;\r\n    }\r\n\r\n    getInvestorById(loggedInUser?.investor)\r\n      .then(({ data: investor }) => {\r\n        if (isStartups) {\r\n          setModalOpen(false);\r\n          setDeleteConfirm(false);\r\n          investor.startupsInvested.splice(deleteConfirmIndex, 1);\r\n          return postInvestorData(investor);\r\n        } else {\r\n          setModalOpen(false);\r\n          setDeleteConfirm(false);\r\n          investor.sectorInterested.splice(deleteConfirmIndex, 1);\r\n          return postInvestorData(investor);\r\n        }\r\n      })\r\n      .then(({ data: response }) => {\r\n        if (isStartups) {\r\n          setModalOpen(false);\r\n          setDeleteConfirm(false);\r\n          setInvestedStartups(response.startupsInvested);\r\n        } else {\r\n          setModalOpen(false);\r\n          setDeleteConfirm(false);\r\n          setSectorsData(response.sectorInterested);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile__modal__content\">\r\n      <div className=\"border rounded-4 p-2 w-100 overflow-y-auto\">\r\n        <h5 className=\"green_underline\">{heading}: </h5>\r\n        <div className=\"d-flex flex-column gap-3 p-0 p-sm-2 w-100\">\r\n          {dataArray?.map((startUp, index) => {\r\n            return (\r\n              <div\r\n                className=\"border rounded-4 p-2 d-flex justify-content-between align-items-center\"\r\n                key={index}\r\n              >\r\n                <img\r\n                  src={\r\n                    startUp.logo ||\r\n                    \"https://res.cloudinary.com/drjt9guif/image/upload/v1692264454/TheCapitalHub/users/default-user-avatar_fe2ky5.webp\"\r\n                  }\r\n                  alt={startUp.name}\r\n                  style={{ width: \"50px\" }}\r\n                />\r\n                <h6 className=\"green_underline \">{startUp.name}</h6>\r\n                <div className=\"d-flex gap-2\">\r\n                  {!startUp.companyId && (\r\n                    <button\r\n                      className=\"btn btn-investor px-3\"\r\n                      onClick={() => handleEdit(index)}\r\n                    >\r\n                      <CiEdit style={{ color: \"\", backgroundColor: \"\" }} />\r\n                    </button>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    // onClick={() => handleDelete(index)}\r\n                    onClick={() => {\r\n                      setDeleteConfirmIndex(index);\r\n                      setModalOpen(true);\r\n                    }}\r\n                  >\r\n                    <AiFillDelete style={{ color: \"\", backgroundColor: \"\" }} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      <div className=\"border rounded-3 p-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <h5 className=\"green_underline\">Add new: </h5>\r\n\r\n          <div className=\"d-flex flex-column gap-4\">\r\n            {isStartups ? (\r\n              <div className=\"upload__image mt-4\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"companyImage\"\r\n                  id=\"companyImage\"\r\n                  accept=\"image/*\"\r\n                  className=\"visually-hidden\"\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div className=\"\">\r\n                  <label\r\n                    htmlFor=\"companyImage\"\r\n                    className=\"fw-lighter upload__label  \"\r\n                  >\r\n                    <BsFillCloudUploadFill\r\n                      style={{\r\n                        fontSize: \"1.5rem\",\r\n                        color: \"rgba(140, 90, 201, 1)\",\r\n                      }}\r\n                    />\r\n                    Upload Image\r\n                    {formData.companyImage && (\r\n                      <img\r\n                        src={\r\n                          isEdited && isNewImage\r\n                            ? formData.companyImage\r\n                            : URL.createObjectURL(formData.companyImage)\r\n                        }\r\n                        alt=\"Selected\"\r\n                        style={{ maxWidth: \"100%\", maxHeight: \"70px\" }}\r\n                      />\r\n                    )}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"upload__image mt-4\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"sectorLogo\"\r\n                  id=\"sectorLogo\"\r\n                  accept=\"image/*\"\r\n                  className=\"visually-hidden\"\r\n                  onChange={handleSectorLogoChange}\r\n                />\r\n                <label htmlFor=\"sectorLogo\" className=\"text-black fw-lighter\">\r\n                  <div className=\"upload__label p-2\">\r\n                    <BsFillCloudUploadFill\r\n                      style={{\r\n                        fontSize: \"1.5rem\",\r\n                        color: \"rgba(140, 90, 201, 1)\",\r\n                      }}\r\n                    />\r\n                    Upload Image\r\n                    {sectorLogo && (\r\n                      <img\r\n                        src={\r\n                          isEdited && isNewImage\r\n                            ? sectorLogo\r\n                            : URL.createObjectURL(sectorLogo)\r\n                        }\r\n                        alt=\"Selected\"\r\n                        style={{ maxWidth: \"100%\", maxHeight: \"200px\" }}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            )}\r\n            <div className=\"invested__company__name \">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder={`${isStartups ? \"company\" : \"sector\"} name...`}\r\n                className=\"p-2 w-100 rounded-3 modal__input\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            {isStartups ? (\r\n              <>\r\n                <div className=\"invested__company__description\">\r\n                  <textarea\r\n                    name=\"description\"\r\n                    id=\"description\"\r\n                    rows={8}\r\n                    className=\"p-2 w-100 rounded-3 modal__input\"\r\n                    placeholder=\"description...\"\r\n                    value={formData.description}\r\n                    onChange={handleInputChange}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"invested__company__name \">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"equity\"\r\n                    id=\"equity\"\r\n                    placeholder=\"Equity\"\r\n                    className=\"p-2 w-100 rounded-3 modal__input\"\r\n                    value={formData.equity}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"d-flex justify-between\">\r\n              <button\r\n                className=\"btn btn-investor w-auto fs-6\"\r\n                type=\"button\"\r\n                onClick={resetFormData}\r\n              >\r\n                Clear\r\n              </button>\r\n              <button\r\n                className=\"btn btn-investor w-auto fs-6 ms-2\"\r\n                type=\"submit\"\r\n                // data-bs-dismiss=\"modal\"\r\n              >\r\n                {loading ? (\r\n                  <SpinnerBS\r\n                    colorClass={\r\n                      loggedInUser.isInvestor === \"true\"\r\n                        ? \"text-dark\"\r\n                        : \"text-light\"\r\n                    }\r\n                    spinnerSizeClass=\"spinner-border-sm\"\r\n                  />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {modalOpen && (\r\n        <Modal>\r\n          <h5 className=\"py-2\">Are you sure you want to delete this item?</h5>\r\n          <div className=\"d-flex flex-row gap-3 mx-auto\">\r\n            <button\r\n              className=\"btn btn-danger text-dark\"\r\n              onClick={() => {\r\n                handleDelete();\r\n                setDeleteConfirm(true);\r\n              }}\r\n            >\r\n              Ok\r\n            </button>\r\n            <button\r\n              className=\"btn green_button px-3 \"\r\n              onClick={() => setModalOpen(false)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import fisdomStartUpIcon from \"../../../Images/Investor/Profile/fisdom_startup.png\";\r\n\r\nexport default function InvestedCard({ startUp }) {\r\n  const text =\r\n    \"One classical breakdown of economic activity distinguishes three sectors: Primary: involves the retrieval and production of raw-material commodities, such as corn, coal, wood or iron\";\r\n\r\n  return (\r\n    <div className=\"invested_card border rounded-4 \" id={startUp.id}>\r\n      <div className=\"card_title\">\r\n        <img src={startUp.logo || \"https://res.cloudinary.com/drjt9guif/image/upload/v1692264454/TheCapitalHub/users/default-user-avatar_fe2ky5.webp\"} alt=\"startup icon\" width={50} />\r\n        <h5 className=\"green_underline pb-2\">{startUp.name}</h5>\r\n      </div>\r\n      <div className=\"py-2 pe-2 card_text\">\r\n        <p className=\"green_underline mb-1\">Sector:</p>\r\n        <p className=\"mb-0\">{startUp.description}</p>\r\n      </div>\r\n      <div className=\"py-2 pe-2 card_text\">\r\n        <p className=\"green_underline mb-1\">Invested:</p>\r\n        <p className=\"mb-0\">{ startUp.investedEquity}%  <strong>Equity</strong></p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ModalBSBody,\r\n  ModalBSContainer,\r\n  ModalBSHeader,\r\n  ModalBsLauncher,\r\n} from \"../../../PopUp/ModalBS\";\r\nimport AddEditModal from \"../AddEditModal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport InvestedCard from \"../InvestedCard\";\r\nimport \"./StartupsInvested.scss\";\r\nimport {\r\n  selectUserInvestor,\r\n  selectUserStartupsInvested,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport { getInvestorById } from \"../../../../Service/user\";\r\n\r\nexport default function StartupsInvested({investorId, cannotAdd = false }) {\r\n  // Fetch loggedInUser from global state\r\n  const userStartupsInvested = useSelector(selectUserStartupsInvested);\r\n  const userInvestor = useSelector(selectUserInvestor);\r\n\r\n  // States for Invested Startups\r\n  const [investedStartups, setInvestedStartups] = useState(userStartupsInvested);\r\n\r\n  useEffect(() => {\r\n    if (!userStartupsInvested && !investorId) {\r\n      console.log(\"1\")\r\n      getInvestorById(userInvestor)\r\n        .then(({ data }) => {\r\n          setInvestedStartups(data.startupsInvested);\r\n        })\r\n        .catch(() => setInvestedStartups([]));\r\n    } \r\n    else if(investorId){\r\n      console.log(\"2\")\r\n      getInvestorById(investorId)\r\n      .then(({ data }) => {\r\n        setInvestedStartups(data.startupsInvested);\r\n      })\r\n      .catch(() => setInvestedStartups([]));\r\n    }else {\r\n      console.log(\"3\")\r\n      setInvestedStartups(userStartupsInvested);\r\n    }\r\n  }, [userInvestor, userStartupsInvested]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"startups_invested border shadow-sm\">\r\n        <div className=\"header border-bottom p-4 \">\r\n          <h2 className=\"green_underline typography\">Startups Invested</h2>\r\n          <div className=\"\">\r\n            {!cannotAdd && (\r\n              <ModalBsLauncher\r\n                id=\"startupsModal\"\r\n                className={\"btn btn-investor px-2 px-sm-3 \"}\r\n              >\r\n                Add New\r\n              </ModalBsLauncher>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* Loop cards here */}\r\n        <div className=\"invested_cards px-3 py-4\">\r\n          {investedStartups?.map((startUp) => (\r\n            <InvestedCard startUp={startUp} key={startUp._id} />\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Startups Modal */}\r\n        <ModalBSContainer id=\"startupsModal\" isStatic={false} modalXl>\r\n          <ModalBSHeader\r\n            title=\"Add/Edit Startups Invested\"\r\n            className={\"d-l-grey\"}\r\n          />\r\n          <ModalBSBody>\r\n            <AddEditModal\r\n              dataArray={investedStartups}\r\n              heading={\"Startups Invested\"}\r\n              setInvestedStartups={setInvestedStartups}\r\n            />\r\n          </ModalBSBody>\r\n        </ModalBSContainer>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export const PhilosophyQuestions = {\r\n  importanceOfManagement: \"What is the importance of Management?\",\r\n  roleAsAInvestor:\r\n    \"What role do you play as an Investor? Are you more passive or active?\",\r\n  founderAlmaMaterMatters: \"How much does Founder's alma mater matter?\",\r\n  riskManagementInInvestments: \"How crucial is risk management in investments?\",\r\n  guideOnSellingInvestments:\r\n    \"What factors guide your decisions on selling investments?\",\r\n  timingInInvestmentDecisions:\r\n    \"How important is timing in investment decisions?\",\r\n  macroeconomicFactorsInfluenceInvestments:\r\n    \"How do macroeconomic factors significantly influence your investments?\",\r\n  assessCompanyCompetitiveAdvantage:\r\n    \"How do you assess a company's competitive advantage?\",\r\n  industryTrendsHoldInYourStrategy:\r\n    \"What significance do industry trends hold in your strategy?\",\r\n  evaluateCompanyGrowthPotential:\r\n    \"How do you evaluate a company's growth potential?\",\r\n  weightGaveToTechnologicalInnovation:\r\n    \"How much weight do you give to technological innovation?\",\r\n};\r\n","export const sectorOptions = [\r\n  \"Sector Agnostic\",\r\n  \"B2B\",\r\n  \"B2C\",\r\n  \"AI/ML\",\r\n  \"API\",\r\n  \"AR/VR\",\r\n  \"Analytics\",\r\n  \"Automation\",\r\n  \"BioTech\",\r\n  \"Cloud\",\r\n  \"Consumer Tech\",\r\n  \"Creator Economy\",\r\n  \"Crypto/Blockchain\",\r\n  \"D2C\",\r\n  \"DeepTech\",\r\n  \"Developer Tools\",\r\n  \"E-Commerce\",\r\n  \"Education\",\r\n  \"Climate Tech\",\r\n  \"Fintech\",\r\n  \"Gaming\",\r\n  \"Healthtech\",\r\n  \"IoT (Internet of Things)\",\r\n  \"Legaltech\",\r\n  \"Logistics and Supply Chain\",\r\n  \"Manufacturing\",\r\n  \"Media and Entertainment\",\r\n  \"Mobility and Transportation\",\r\n  \"PropTech (Property Technology)\",\r\n  \"Robotics\",\r\n  \"Saas (Software as a Service)\",\r\n  \"SpaceTech\",\r\n  \"SportsTech\",\r\n  \"Telecommunications\",\r\n  \"Travel and Tourism\",\r\n  \"Wearables\",\r\n  \"Insurtech\",\r\n  \"Agtech (Agriculture Technology)\",\r\n  \"Clean Energy / Renewable Energy\",\r\n  \"HRtech (Human Resources Technology)\",\r\n  \"B2B Marketplace\",\r\n  \"Cybersecurity\",\r\n  \"E-sports\",\r\n  \"MarTech (Marketing Technology)\",\r\n  \"MedTech (Medical Technology)\",\r\n  \"Retail Tech\",\r\n  \"others\",\r\n];\r\n\r\nexport const genderOptions = [\"Male\", \"Female\", \"Other\"];\r\n\r\nexport const sizeOptions = [\"10+\", \"100+\", \"1000+\"];\r\n\r\nexport const ageOptions = [\"Less then a year\", \"1-3 years\", \"3-5 years\", \"More than 5 years\"];\r\n\r\nexport const stageOptions = [\r\n  \"Bootstrap\",\r\n  \"Incubated\",\r\n  \"Angel invested\",\r\n  \"Pre seed\",\r\n  \"Seed\",\r\n  \"Series A and above\",\r\n];\r\n\r\nexport const investmentStageOptions = [\r\n  \"Bootstrap\",\r\n  \"Incubated\",\r\n  \"Angel invested\",\r\n  \"Pre seed\",\r\n  \"Seed\",\r\n  \"Series A and above\",\r\n];\r\n\r\nexport const fundingRaisedOptions = [\r\n  \"Less than ₹10 Lakh\",\r\n  \"₹10 Lakh - ₹50 Lakh\",\r\n  \"₹50 Lakh - ₹1 Crore\",\r\n  \"More than ₹1 Crore\",\r\n];\r\n\r\nexport const productStageOptions = [\r\n  \"Concept/Idea\",\r\n  \"Prototype\",\r\n  \"Minimum Viable Product (MVP)\",\r\n  \"Beta Testing\",\r\n  \"Fully Developed Product\",\r\n];\r\n\r\nexport const investmentSizeOptions = [\r\n  \"Micro-investments (< ₹10,000)\",\r\n  \"Small Investments (₹10,000 - ₹50,000)\",\r\n  \"Moderate Investments (₹50,000 - ₹2 Lakhs)\",\r\n  \"Significant Investments (₹2 Lakhs - ₹10 Lakhs)\",\r\n  \"Large Investments (₹10 Lakhs - ₹1 Crore)\",\r\n  \"Major Investments (₹1 Crore and above)\",\r\n];\r\n\r\n// export const sectorPreferenceOptions = [];\r\n\r\nexport const previousExitsOptions = [\r\n  \"Successful IPO\",\r\n  \"Acquisition by a Larger Company\",\r\n  \"Merger\",\r\n  \"No Previous Exit Experience\",\r\n];\r\n\r\nexport const yearsOfExperienceOptions = [\r\n  \"0-2 years\",\r\n  \"2-5 years\",\r\n  \"5-10 years\",\r\n  \"10-15 years\",\r\n  \"15+ years\",\r\n];\r\n\r\nexport const educationOptions = [\r\n  \"Computer Science Engineering\",\r\n  \"Electrical and Electronics Engineering\",\r\n  \"Mechanical Engineering\",\r\n  \"Civil Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"Aerospace Engineering\",\r\n  \"Biomedical Engineering\",\r\n  \"Environmental Engineering\",\r\n  \"Software Engineering\",\r\n  \"MBA in Marketing\",\r\n  \"MBA in Finance\",\r\n  \"MBA in Data Science\",\r\n];\r\n\r\nexport const diversityMetricsOptions = [\r\n  \"Gender Diversity\",\r\n  \"Ethnic Diversity\",\r\n  \"Age Diversity\",\r\n  \"LGBTQ+ Inclusivity\",\r\n  \"Disability Inclusivity\",\r\n  \"Socioeconomic Diversity\",\r\n];\r\n","export default function DividerH({ text }) {\r\n  return (\r\n    <div\r\n      className=\"divider d-flex align-items-center\"\r\n      style={{ gridColumn: \"1/-1\" }}\r\n    >\r\n      <span\r\n        className=\"\"\r\n        style={{\r\n          flex: \"1 1 0\",\r\n          opacity: \"0.5\",\r\n          borderTop: \"1px solid var(--darkMode-currentTheme)\",\r\n        }}\r\n      ></span>\r\n      <span className=\"px-3 my-3 fs-6 opacity-75\">{text}</span>\r\n      <span\r\n        className=\"\"\r\n        style={{\r\n          flex: \"1 1 0\",\r\n          opacity: \"0.5\",\r\n          borderTop: \"1px solid var(--darkMode-currentTheme)\",\r\n        }}\r\n      ></span>\r\n    </div>\r\n  );\r\n}\r\n","import { Form, Spinner } from \"react-bootstrap\";\r\nimport \"./ProfileInformationForm.scss\";\r\nimport { Button, InputGroup } from \"react-bootstrap\";\r\nimport IconCloudUpload from \"../../../Investor/SvgIcons/IconCloudUpload\";\r\nimport { useState } from \"react\";\r\nimport { getBase64 } from \"../../../../utils/getBase64\";\r\nimport { postInvestorData, updateUserAPI } from \"../../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  loginSuccess,\r\n  selectUserProfilePicture,\r\n  selectUserSocialLinks,\r\n  updateUserCompany,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport DividerH from \"../../../Shared/DividerH/DividerH\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function ProfileInformationForm() {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const userProfilePicture = useSelector(selectUserProfilePicture);\r\n  const userSocialLinks = useSelector(selectUserSocialLinks);\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  async function handleProfileInfoSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const {\r\n      designation,\r\n      location,\r\n      bio,\r\n      experience,\r\n      website,\r\n      linkedin,\r\n      // facebook,\r\n      twitter,\r\n      instagram,\r\n    } = e.target;\r\n\r\n    let updatedUserData = {\r\n      designation: designation.value,\r\n      location: location.value,\r\n      bio: bio.value,\r\n      experience: experience.value,\r\n    };\r\n\r\n    if (selectedFile) {\r\n      const picture = await getBase64(selectedFile);\r\n      updatedUserData.profilePicture = picture;\r\n    }\r\n\r\n    let updatedSocialLinks = {\r\n      socialLinks: {\r\n        website: website.value,\r\n        linkedin: linkedin.value,\r\n        // facebook: facebook.value,\r\n        twitter: twitter.value,\r\n        instagram: instagram.value,\r\n      },\r\n      founderId: loggedInUser._id,\r\n    };\r\n\r\n    // console.log(\"user data\", updatedUserData);\r\n    // console.log(\"company data\", updatedSocialLinks);\r\n\r\n    try {\r\n      const [userResponse, companyResponse] = await Promise.all([\r\n        updateUserAPI(updatedUserData),\r\n        postInvestorData(updatedSocialLinks),\r\n      ]);\r\n      // console.log(\"userResponse\", userResponse);\r\n      // console.log(\"companyResponse\", companyResponse);\r\n      dispatch(loginSuccess(userResponse.data.data));\r\n      dispatch(\r\n        updateUserCompany({ socialLinks: companyResponse.data.socialLinks })\r\n      );\r\n      toast.success(\"Changes Saved\");\r\n    } catch (error) {\r\n      console.error(\"Error saving information\", error);\r\n      toast.error(\"Error saving information. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={handleProfileInfoSubmit}\r\n      className=\"px-3 px-lg-4 pb-4 d-flex flex-column gap-3 profile-information-form\"\r\n    >\r\n      <Form.Group controlId=\"onelink-profilePicture\" className=\"form-group\">\r\n        <p className=\"mb-3 fs-5\">Profile Picture</p>\r\n        <Form.Label style={{ cursor: \"pointer\" }} className=\"picture-label\">\r\n          {selectedFile ? (\r\n            <img\r\n              src={URL.createObjectURL(selectedFile)}\r\n              alt=\"profile\"\r\n              width={100}\r\n              height={100}\r\n              className=\"rounded-circle object-fit-cover\"\r\n            />\r\n          ) : userProfilePicture ? (\r\n            <img\r\n              src={userProfilePicture}\r\n              alt=\"profile\"\r\n              width={100}\r\n              height={100}\r\n              className=\"rounded-circle object-fit-cover shadow-lg\"\r\n            />\r\n          ) : (\r\n            <IconCloudUpload height={40} width={40} />\r\n          )}\r\n        </Form.Label>\r\n        <input\r\n          type=\"file\"\r\n          name=\"profilePicture\"\r\n          id=\"onelink-profilePicture\"\r\n          className=\"visually-hidden\"\r\n          onInput={(e) => setSelectedFile(e.target.files[0])}\r\n        />\r\n      </Form.Group>\r\n\r\n      <InputGroup className=\"flex-column flex-md-row gap-4\">\r\n        <Form.Group controlId=\"onelink-designation\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">designation</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"designation\"\r\n            defaultValue={loggedInUser.designation}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"onelink-location\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">location</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"location\"\r\n            defaultValue={loggedInUser.location}\r\n          />\r\n        </Form.Group>\r\n      </InputGroup>\r\n\r\n      <Form.Group controlId=\"onelink-bio\" className=\"form-group\">\r\n        <Form.Label className=\"text-capitalize\">bio</Form.Label>\r\n        <Form.Control\r\n          as={\"textarea\"}\r\n          rows={5}\r\n          type=\"text\"\r\n          name=\"bio\"\r\n          defaultValue={loggedInUser.bio}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"onelink-experience\" className=\"form-group\">\r\n        <Form.Label className=\"text-capitalize\">Current Experience</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"experience\"\r\n          defaultValue={loggedInUser.experience}\r\n        />\r\n      </Form.Group>\r\n\r\n      <DividerH text={\"Social Links\"} />\r\n\r\n      <InputGroup className=\"flex-column flex-md-row gap-4\">\r\n        <Form.Group controlId=\"onelink-website\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">website</Form.Label>\r\n          <Form.Control\r\n            type=\"url\"\r\n            name=\"website\"\r\n            defaultValue={userSocialLinks.website}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"onelink-linkedin\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">LinkedIn</Form.Label>\r\n          <Form.Control\r\n            type=\"url\"\r\n            name=\"linkedin\"\r\n            defaultValue={userSocialLinks.linkedin}\r\n          />\r\n        </Form.Group>\r\n      </InputGroup>\r\n      <InputGroup className=\"flex-column flex-md-row gap-4\">\r\n        {/* <Form.Group controlId=\"onelink-facebook\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">facebook</Form.Label>\r\n          <Form.Control type=\"url\" name=\"facebook\" />\r\n        </Form.Group> */}\r\n        <Form.Group controlId=\"onelink-instagram\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">instagram</Form.Label>\r\n          <Form.Control\r\n            type=\"url\"\r\n            name=\"instagram\"\r\n            defaultValue={userSocialLinks.instagram}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"onelink-twitter\" className=\"form-group\">\r\n          <Form.Label className=\"text-capitalize\">twitter</Form.Label>\r\n          <Form.Control\r\n            type=\"url\"\r\n            name=\"twitter\"\r\n            defaultValue={userSocialLinks.twitter}\r\n          />\r\n        </Form.Group>\r\n      </InputGroup>\r\n\r\n      {/* Action button */}\r\n      <div className=\"d-flex\">\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"investor\"\r\n          className=\"ms-auto d-flex align-items-center gap-2\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <Spinner size=\"sm\" variant=\"black\" />\r\n              {\"Saving...\"}\r\n            </>\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { sectorOptions } from \"../../../../../../../constants/Startups/ExplorePage\";\r\nimport \"./SectorPreferences.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUserSectorPreferences } from \"../../../../../../../Store/features/user/userSlice\";\r\n\r\nexport default function SectorPreferences({\r\n  isEditing = false,\r\n  setSelectedSectors,\r\n}) {\r\n  // Fetch from store\r\n  const userSectorPreferences = useSelector(selectUserSectorPreferences);\r\n\r\n  function handleSectorSelect(e) {\r\n    const { name, checked } = e.target;\r\n    if (checked) {\r\n      setSelectedSectors((prev) => [...prev, name]);\r\n    } else {\r\n      setSelectedSectors((prev) => {\r\n        let copy = [...prev];\r\n        let index = copy.indexOf(name);\r\n        return copy.toSpliced(index, 1);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center gap-3 flex-wrap\">\r\n      {!isEditing ? (\r\n        userSectorPreferences.length ? (\r\n          userSectorPreferences?.map((sector, index) => {\r\n            return (\r\n              <span key={sector} className=\"investor-check-wrapper shadow-sm\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"btn-check\"\r\n                  id={sector}\r\n                  name={sector}\r\n                  onClick={handleSectorSelect}\r\n                  autoComplete=\"off\"\r\n                  checked={true}\r\n                  readOnly\r\n                />\r\n                <label className=\"btn btn-outline-investor\" htmlFor={sector}>\r\n                  {sector}\r\n                </label>\r\n              </span>\r\n            );\r\n          })\r\n        ) : (\r\n          <>\r\n            <p className=\"text-muted w-100 mb-0\">\r\n              Please select your preference:\r\n            </p>\r\n            {sectorOptions.map((sector, index) => {\r\n              return (\r\n                <span key={sector} className=\"investor-check-wrapper shadow-sm\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"btn-check\"\r\n                    id={sector}\r\n                    name={sector}\r\n                    onClick={handleSectorSelect}\r\n                    autoComplete=\"off\"\r\n                    defaultChecked={userSectorPreferences?.includes(sector)}\r\n                  />\r\n                  <label className=\"btn btn-outline-investor\" htmlFor={sector}>\r\n                    {sector}\r\n                  </label>\r\n                </span>\r\n              );\r\n            })}\r\n            <span className=\"w-100 d-flex align-items-center\">\r\n              <button type=\"submit\" className=\"ms-auto green_button\">\r\n                Save\r\n              </button>\r\n            </span>\r\n          </>\r\n        )\r\n      ) : (\r\n        sectorOptions.map((sector, index) => {\r\n          return (\r\n            <span key={sector} className=\"investor-check-wrapper shadow-sm\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"btn-check\"\r\n                id={sector}\r\n                name={sector}\r\n                onClick={handleSectorSelect}\r\n                autoComplete=\"off\"\r\n                defaultChecked={userSectorPreferences?.includes(sector)}\r\n              />\r\n              <label className=\"btn btn-outline-primary\" htmlFor={sector}>\r\n                {sector}\r\n              </label>\r\n            </span>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Form } from \"react-bootstrap\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nexport default function FormTextArea({\r\n  name,\r\n  label,\r\n  defaultValue,\r\n  wordLimit = null,\r\n  controlId,\r\n}) {\r\n  const [alert, setAlert] = useState(false);\r\n  const textRef = useRef();\r\n\r\n  function handleTextAreaChange(e) {\r\n    // auto resize\r\n    textRef.current.style.height = \"auto\";\r\n    textRef.current.style.height = textRef.current.scrollHeight + 2 + \"px\";\r\n\r\n    // Enforce word limit\r\n    if (!wordLimit) {\r\n      return;\r\n    }\r\n\r\n    const { value } = e.target;\r\n    let words = value.split(\" \");\r\n    if (words.length > wordLimit) {\r\n      textRef.current.value = words.slice(0, words.length - 1).join(\" \");\r\n      setAlert(true);\r\n    } else {\r\n      setAlert(false);\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form.Group controlId={controlId} className=\"form-group\">\r\n      <Form.Label className=\"\">{label}</Form.Label>\r\n      <Form.Control\r\n        as={\"textarea\"}\r\n        rows={5}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        onChange={handleTextAreaChange}\r\n        ref={textRef}\r\n      />\r\n      {wordLimit && (\r\n        <em\r\n          className={`py-2 m-0 text-danger ${alert ? \"visible\" : \"invisible\"}`}\r\n        >\r\n          You have exceeded word limit. Please use {wordLimit} words or less.\r\n        </em>\r\n      )}\r\n    </Form.Group>\r\n  );\r\n}\r\n","import { Button, Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport \"./InvestmentPhilosophyForm.scss\";\r\nimport SectorPreferences from \"../../ProfileComponents/InvestmentPhilosophy/Components/InvestmentPhilosophyInfo/SectorPreferences/SectorPreferences\";\r\nimport { PhilosophyQuestions } from \"../../../../constants/Investor/ProfilePage\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  loginSuccess,\r\n  selectCompanyAge,\r\n  selectCompanyName,\r\n  selectCompanyRevenue,\r\n  selectCompanyStage,\r\n  selectLoggedInUserId,\r\n  selectUserInvestmentPhilosophy,\r\n  selectUserSectorPreferences,\r\n  updateUserCompany,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport { postInvestorData, updateUserAPI } from \"../../../../Service/user\";\r\nimport FormTextArea from \"./FormTextArea\";\r\nimport DividerH from \"../../../Shared/DividerH/DividerH\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport default function InvestmentPhilosophyForm() {\r\n  const userSectorPreferences = useSelector(selectUserSectorPreferences);\r\n  const userInvestmentPhilosophy = useSelector(selectUserInvestmentPhilosophy);\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n  const companyName = useSelector(selectCompanyName);\r\n  const companyAge = useSelector(selectCompanyAge);\r\n  const companyStage = useSelector(selectCompanyStage);\r\n  const companyRevenue = useSelector(selectCompanyRevenue);\r\n\r\n  const [selectedSectors, setSelectedSectors] = useState(userSectorPreferences);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const startupFields = useMemo(\r\n    () => [\r\n      { name: \"stage\", label: \"Stage\", defaultValue: companyStage },\r\n      { name: \"age\", label: \"Age\", defaultValue: companyAge },\r\n      {\r\n        name: \"companyName\",\r\n        label: \"Founded Startup\",\r\n        defaultValue: companyName,\r\n      },\r\n    ],\r\n    [companyName, companyAge, companyStage]\r\n  );\r\n\r\n  async function handlePhilosophySubmit(e) {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    const {\r\n      importanceOfManagement,\r\n      roleAsAInvestor,\r\n      founderAlmaMaterMatters,\r\n      riskManagementInInvestments,\r\n      guideOnSellingInvestments,\r\n      timingInInvestmentDecisions,\r\n      macroeconomicFactorsInfluenceInvestments,\r\n      assessCompanyCompetitiveAdvantage,\r\n      industryTrendsHoldInYourStrategy,\r\n      evaluateCompanyGrowthPotential,\r\n      weightGaveToTechnologicalInnovation,\r\n      stage,\r\n      age,\r\n      companyName,\r\n      revenueYear1,\r\n      revenueAmount1,\r\n      revenueYear2,\r\n      revenueAmount2,\r\n      revenueYear3,\r\n      revenueAmount3,\r\n      revenueYear4,\r\n      revenueAmount4,\r\n      revenueYear5,\r\n      revenueAmount5,\r\n    } = e.target;\r\n\r\n    let updatedUserData = {\r\n      philosophy: {\r\n        importanceOfManagement: importanceOfManagement.value,\r\n        roleAsAInvestor: roleAsAInvestor.value,\r\n        founderAlmaMaterMatters: founderAlmaMaterMatters.value,\r\n        riskManagementInInvestments: riskManagementInInvestments.value,\r\n        guideOnSellingInvestments: guideOnSellingInvestments.value,\r\n        timingInInvestmentDecisions: timingInInvestmentDecisions.value,\r\n        macroeconomicFactorsInfluenceInvestments:\r\n          macroeconomicFactorsInfluenceInvestments.value,\r\n        assessCompanyCompetitiveAdvantage:\r\n          assessCompanyCompetitiveAdvantage.value,\r\n        industryTrendsHoldInYourStrategy:\r\n          industryTrendsHoldInYourStrategy.value,\r\n        evaluateCompanyGrowthPotential: evaluateCompanyGrowthPotential.value,\r\n        weightGaveToTechnologicalInnovation:\r\n          weightGaveToTechnologicalInnovation.value,\r\n      },\r\n      sectorPreferences: selectedSectors,\r\n    };\r\n\r\n    let revenueData = [\r\n      { year: revenueYear1.value, amount: revenueAmount1.value },\r\n      { year: revenueYear2.value, amount: revenueAmount2.value },\r\n      { year: revenueYear3.value, amount: revenueAmount3.value },\r\n      { year: revenueYear4.value, amount: revenueAmount4.value },\r\n      { year: revenueYear5.value, amount: revenueAmount5.value },\r\n    ];\r\n\r\n    let updatedCompanyData = {\r\n      founderId: loggedInUserId,\r\n      stage: stage.value,\r\n      age: age.value,\r\n      companyName: companyName.value,\r\n      revenue: revenueData,\r\n    };\r\n\r\n    try {\r\n      const [userResponse, companyResponse] = await Promise.all([\r\n        updateUserAPI(updatedUserData),\r\n        postInvestorData(updatedCompanyData),\r\n      ]);\r\n      // console.log(\"userResponse\", userResponse);\r\n      // console.log(\"companyResponse\", companyResponse);\r\n      dispatch(loginSuccess(userResponse.data.data));\r\n      dispatch(\r\n        updateUserCompany({\r\n          stage: companyResponse.data.stage,\r\n          age: companyResponse.data.age,\r\n          companyName: companyResponse.data.companyName,\r\n          revenue: companyResponse.data.revenue,\r\n        })\r\n      );\r\n      toast.success(\"Changes Saved\");\r\n    } catch (error) {\r\n      console.error(\"Error saving information\", error);\r\n      toast.error(\"Error saving information. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={handlePhilosophySubmit}\r\n      className=\"investment-philosophy-form px-3 px-lg-4 pb-4\"\r\n    >\r\n      {/* Startp information */}\r\n      <div\r\n        className=\"d-flex align-items-center gap-4 flex-wrap\"\r\n        style={{ gridColumn: \"1/-1\" }}\r\n      >\r\n        {startupFields.map(({ name, label, defaultValue }) => {\r\n          return (\r\n            <Form.Group\r\n              controlId={`onelink-${name}`}\r\n              className=\"flex-grow-1 form-group\"\r\n              key={name}\r\n            >\r\n              <Form.Label>{label}</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name={name}\r\n                defaultValue={defaultValue}\r\n              />\r\n            </Form.Group>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <DividerH text={\"Philosophy\"} />\r\n\r\n      {/* Select field */}\r\n      <fieldset className=\"\" style={{ gridColumn: \"1/-1\" }}>\r\n        <legend>What are your Industries of preference?</legend>\r\n        <SectorPreferences\r\n          isEditing={true}\r\n          setSelectedSectors={setSelectedSectors}\r\n        />\r\n      </fieldset>\r\n\r\n      {/* Philosophy Questions */}\r\n      {Object.keys(PhilosophyQuestions).map((question) => {\r\n        return (\r\n          <FormTextArea\r\n            key={question}\r\n            defaultValue={\r\n              userInvestmentPhilosophy ? userInvestmentPhilosophy[question] : \"\"\r\n            }\r\n            label={PhilosophyQuestions[question]}\r\n            name={question}\r\n            controlId={`onelink-${question}`}\r\n            // wordLimit={2}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <DividerH text={\"Revenue\"} />\r\n\r\n      {/* Revenue */}\r\n      <div\r\n        className=\"d-flex flex-column flex-md-row gap-3 flex-wrap\"\r\n        style={{ gridColumn: \"1/-1\" }}\r\n      >\r\n        {Array(5)\r\n          .fill(0)\r\n          .map(({ year, amount }, index) => {\r\n            return (\r\n              <div\r\n                className=\"revenue-inputs d-flex flex-column align-items-center gap-2 px-3 py-3\"\r\n                key={`Slot${index}`}\r\n              >\r\n                <h5 className=\"align-self-start m-0\">\r\n                  Revenue Slot {index + 1}\r\n                </h5>\r\n                <Form.Group\r\n                  controlId={`onelink-revenueYear-${index + 1}`}\r\n                  className=\"form-group\"\r\n                >\r\n                  <Form.Label className=\"\">Year</Form.Label>\r\n                  <Form.Control\r\n                    type=\"number\"\r\n                    min={2010}\r\n                    max={+String(new Date().getFullYear())}\r\n                    name={`revenueYear${index + 1}`}\r\n                    className=\"revenueYear\"\r\n                    defaultValue={\r\n                      companyRevenue ? companyRevenue[index][\"year\"] : \"\"\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group\r\n                  controlId={`onelink-revenueAmount-${index + 1}`}\r\n                  className=\"form-group\"\r\n                >\r\n                  <Form.Label className=\"\">Amount</Form.Label>\r\n                  <InputGroup className=\"justify-content-center\">\r\n                    <InputGroup.Text\r\n                      className=\"text-bg-dark text-align-center d-block\"\r\n                      style={{ flex: \"0 0 40px\" }}\r\n                    >\r\n                      ₹\r\n                    </InputGroup.Text>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      min={0}\r\n                      name={`revenueAmount${index + 1}`}\r\n                      className=\"revenueAmount\"\r\n                      defaultValue={\r\n                        companyRevenue ? companyRevenue[index][\"amount\"] : \"\"\r\n                      }\r\n                    />\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n\r\n      {/* Action button */}\r\n      <div className=\"d-flex\" style={{ gridColumn: \"1/-1\" }}>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"investor\"\r\n          className=\"ms-auto d-flex align-items-center gap-2\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <Spinner size=\"sm\" variant=\"black\" />\r\n              {\"Saving...\"}\r\n            </>\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","// import { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport \"./InvestorOneLinkEdit.scss\";\r\nimport StartupsInvested from \"../../../components/NewInvestor/ProfileComponents/StartupsInvested/StartupsInvested\";\r\nimport ProfileInformationForm from \"../../../components/NewInvestor/InvestorOneLinkEditComponents/ProfileInformation/ProfileInformationForm\";\r\nimport InvestmentPhilosophyForm from \"../../../components/NewInvestor/InvestorOneLinkEditComponents/InvestmentPhilosophyForm/InvestmentPhilosophyForm\";\r\n\r\nexport default function InvestorOneLinkEdit() {\r\n  return (\r\n    <div className=\"oneLink-edit-wrapper mb-3\">\r\n      <MaxWidthWrapper>\r\n        <div className=\"d-flex flex-column gap-3\">\r\n          {/* Profile Info */}\r\n          <section className=\"white-to-grey rounded-4 shadow-sm border\">\r\n            <h3 className=\"px-3 px-lg-4 py-4 border-bottom\">\r\n              Profile Information\r\n            </h3>\r\n            <ProfileInformationForm />\r\n          </section>\r\n\r\n          {/* Startups Invested */}\r\n          <StartupsInvested />\r\n\r\n          {/* Investment Philosophy */}\r\n          <section className=\"white-to-grey rounded-4 shadow-sm border\">\r\n            <h3 className=\"px-3 px-lg-4 py-4 border-bottom\">\r\n              Investment Philosophy\r\n            </h3>\r\n            <InvestmentPhilosophyForm />\r\n          </section>\r\n        </div>\r\n      </MaxWidthWrapper>\r\n    </div>\r\n  );\r\n}\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["props","_jsxs","fill","viewBox","height","width","children","_jsx","fillRule","d","AddEditModal","_ref","dataArray","heading","isStartups","setInvestedStartups","setSectorsData","testformData","loggedInUser","useSelector","state","user","formData","setFormData","useState","companyImage","name","description","equity","sectorLogo","setSectorLogo","isEdited","setIsEdited","editIndex","setEditIndex","isNewImage","setNewImage","loading","setLoading","modalOpen","setModalOpen","deleteConfirmIndex","setDeleteConfirmIndex","deleteConfirm","setDeleteConfirm","handleInputChange","event","value","type","files","target","resetFormData","className","map","startUp","index","src","logo","alt","style","companyId","onClick","async","investedEquity","sector","error","console","log","handleEdit","CiEdit","color","backgroundColor","AiFillDelete","onSubmit","preventDefault","data","investor","getInvestorById","editedStartUp","startupsInvested","Blob","getBase64","url","uploadLogo","response","postInvestorData","editedSector","sectorInterested","newStartUpData","addStartupInvested","newSectorData","addSectorOfInterest","id","accept","onChange","htmlFor","BsFillCloudUploadFill","fontSize","URL","createObjectURL","maxWidth","maxHeight","placeholder","concat","_Fragment","rows","SpinnerBS","colorClass","isInvestor","spinnerSizeClass","Modal","then","_ref2","splice","_ref3","catch","InvestedCard","StartupsInvested","investorId","cannotAdd","userStartupsInvested","selectUserStartupsInvested","userInvestor","selectUserInvestor","investedStartups","useEffect","ModalBsLauncher","_id","ModalBSContainer","isStatic","modalXl","ModalBSHeader","title","ModalBSBody","PhilosophyQuestions","importanceOfManagement","roleAsAInvestor","founderAlmaMaterMatters","riskManagementInInvestments","guideOnSellingInvestments","timingInInvestmentDecisions","macroeconomicFactorsInfluenceInvestments","assessCompanyCompetitiveAdvantage","industryTrendsHoldInYourStrategy","evaluateCompanyGrowthPotential","weightGaveToTechnologicalInnovation","sectorOptions","genderOptions","sizeOptions","ageOptions","stageOptions","investmentStageOptions","fundingRaisedOptions","productStageOptions","investmentSizeOptions","yearsOfExperienceOptions","educationOptions","DividerH","text","gridColumn","flex","opacity","borderTop","ProfileInformationForm","userProfilePicture","selectUserProfilePicture","userSocialLinks","selectUserSocialLinks","selectedFile","setSelectedFile","dispatch","useDispatch","Form","e","designation","location","bio","experience","website","linkedin","twitter","instagram","updatedUserData","picture","profilePicture","updatedSocialLinks","socialLinks","founderId","userResponse","companyResponse","Promise","all","updateUserAPI","loginSuccess","updateUserCompany","toast","success","Group","controlId","Label","cursor","IconCloudUpload","onInput","InputGroup","Control","defaultValue","as","Button","variant","disabled","Spinner","size","SectorPreferences","isEditing","setSelectedSectors","userSectorPreferences","selectUserSectorPreferences","handleSectorSelect","checked","prev","copy","indexOf","toSpliced","autoComplete","defaultChecked","includes","length","readOnly","FormTextArea","label","wordLimit","alert","setAlert","textRef","useRef","current","scrollHeight","words","split","slice","join","ref","InvestmentPhilosophyForm","userInvestmentPhilosophy","selectUserInvestmentPhilosophy","loggedInUserId","selectLoggedInUserId","companyName","selectCompanyName","companyAge","selectCompanyAge","companyStage","selectCompanyStage","companyRevenue","selectCompanyRevenue","selectedSectors","startupFields","useMemo","stage","age","revenueYear1","revenueAmount1","revenueYear2","revenueAmount2","revenueYear3","revenueAmount3","revenueYear4","revenueAmount4","revenueYear5","revenueAmount5","philosophy","sectorPreferences","revenueData","year","amount","updatedCompanyData","revenue","Object","keys","question","Array","min","max","String","Date","getFullYear","Text","InvestorOneLinkEdit","MaxWidthWrapper","React","bsPrefix","animation","Component","useBootstrapPrefix","bsSpinnerPrefix","classNames","displayName"],"sourceRoot":""}