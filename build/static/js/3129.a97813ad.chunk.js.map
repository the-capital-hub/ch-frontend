{"version":3,"file":"static/js/3129.a97813ad.chunk.js","mappings":"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","sources":["components/NewInvestor/SearchResults/ResultBar.jsx","pages/Investor/SearchResults/SearchResults.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Default from \"../../../Images/Investor/searchResult/business-and-trade.png\";\r\nimport \"./ResultBar.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectLoggedInUserId,\r\n  selectUserOneLink,\r\n} from \"../../../Store/features/user/userSlice\";\r\n\r\nexport default function ResultBar({\r\n  image,\r\n  name,\r\n  description,\r\n  isCompany,\r\n  param,\r\n  isInvestor = false,\r\n  oneLinkId,\r\n}) {\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n  const userOneLink = useSelector(selectUserOneLink);\r\n\r\n  const linkTo = isCompany\r\n    ? `/investor/company-profile/${param}`\r\n    : `/investor/user/${name}/${oneLinkId}`;\r\n  const link = isInvestor ? `${linkTo}?investor=1` : linkTo;\r\n\r\n  const disableLink = isCompany\r\n    ? param === userOneLink\r\n    : param === loggedInUserId;\r\n\r\n  return (\r\n    <Link\r\n      className=\"text-decoration-none\"\r\n      style={{\r\n        color: \"var(d-l-grey)\",\r\n        pointerEvents: `${disableLink ? \"none\" : \"all\"}`,\r\n      }}\r\n      // to={isCompany ? `/investor/company-profile/${param}` : `/investor/user/${param}`}\r\n      to={link}\r\n    >\r\n      <div className=\"result__bar d-flex align-items-center gap-3 p-3\">\r\n        <img\r\n          src={image || Default}\r\n          alt=\"\"\r\n          style={{ width: \"80px\", height: \"80px\", objectFit: \"cover\" }}\r\n          className=\"rounded-circle border border-dangers\"\r\n        />\r\n        <div className=\"result__item__text d-flex flex-column d-l-grey\">\r\n          <h4>{name || \"BondLink\"}</h4>\r\n          <p className=\"m-0 text-secondary\">\r\n            {description ||\r\n              \"One classical breakdown of economic activity distinguishes three sectors.\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { Link, useSearchParams } from \"react-router-dom\";\r\n// import CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\n// import Filters from \"../../../components/NewInvestor/SearchResults/Filters\";\r\nimport ResultBar from \"../../../components/NewInvestor/SearchResults/ResultBar\";\r\nimport \"./SearchResults.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSearchResultsAPI } from \"../../../Service/user\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SpinnerBS from \"../../../components/Shared/Spinner/SpinnerBS\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\n\r\n// const SEARCHFILTERS = [\"Industry\", \"Age\", \"Stage\", \"Startups\"];\r\n\r\nexport default function SearchResults() {\r\n  // Fetch Global State\r\n  // const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  // const userIdToRemove = loggedInUser._id;\r\n  const dispatch = useDispatch();\r\n\r\n  // Retrieve Query\r\n  const [searchParams] = useSearchParams();\r\n  // Set to state\r\n  const [query, setQuery] = useState(searchParams.get(\"query\"));\r\n  // Data States\r\n  const [peopleData, setPeopleData] = useState(null);\r\n  const [companyData, setCompanyData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch search data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await getSearchResultsAPI(query);\r\n      setPeopleData(data?.data?.users);\r\n      setCompanyData(data?.data?.company);\r\n      setLoading(false);\r\n    }\r\n    if (searchParams.has(\"query\") && query !== searchParams.get(\"query\")) {\r\n      setQuery(searchParams.get(\"query\"));\r\n      setLoading(true);\r\n    }\r\n    if (searchParams.has(\"query\")) {\r\n      fetchData();\r\n    }\r\n  }, [query, searchParams]);\r\n\r\n  useEffect(() => {\r\n    setQuery(searchParams.get(\"query\"));\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setPageTitle(\"Search Results\"));\r\n    document.title = \"Search Results | The Capital Hub\";\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"search__results__wrapper pb-5\">\r\n        <div className=\"pb-4 pt-2\">\r\n          {/* <Filters filterLabels={SEARCHFILTERS} /> */}\r\n          <span className=\"white-to-grey d-l-grey rounded-4 shadow-sm px-4 py-3 d-flex flex-wrap gap-2\">\r\n            <p className=\"m-0 p-0\">Didn't find what you are looking for?</p>\r\n            <Link\r\n              to=\"/investor/explore\"\r\n              className=\"text-decoration-none\"\r\n              style={{ color: \"var(--darkMode-currentTheme)\" }}\r\n            >\r\n              Head over to Explore\r\n            </Link>\r\n          </span>\r\n          {/* <h1>Search Filters</h1> */}\r\n        </div>\r\n        <div className=\"search__results d-flex flex-column gap-5\">\r\n          {/* People Results */}\r\n          <section className=\"people__results\">\r\n            <div className=\"results__container white-to-grey d-l-grey shadow-sm rounded-4 pb-4\">\r\n              {/* Category */}\r\n              <div className=\"p-4 border-bottom\">\r\n                <h3 className=\"m-0\">{\"People\"}</h3>\r\n              </div>\r\n              {/* Loop through data array here */}\r\n              {!loading ? (\r\n                peopleData.length !== 0 ? (\r\n                  peopleData.map((person) => {\r\n                    const {\r\n                      profilePicture,\r\n                      firstName,\r\n                      lastName,\r\n                      designation,\r\n                      oneLinkId,\r\n                      _id,\r\n                    } = person;\r\n                    return (\r\n                      <ResultBar\r\n                        image={profilePicture}\r\n                        name={`${firstName} ${lastName}`}\r\n                        description={designation}\r\n                        key={_id}\r\n                        param={_id}\r\n                        oneLinkId={oneLinkId}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-center py-4\">\r\n                    <h4>No Users Found</h4>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <SpinnerBS\r\n                  className={\r\n                    \"d-flex py-5 justify-content-center align-items-center w-100 white-to-grey\"\r\n                  }\r\n                  colorClass={\"d-l-grey\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </section>\r\n          {/* Company Results */}\r\n          <section className=\"companies__results\">\r\n            <div className=\"results__container  white-to-grey d-l-grey shadow-sm rounded-4 pb-4\">\r\n              {/* Category */}\r\n              <div className=\"p-4 border-bottom\">\r\n                <h3 className=\"m-0\">{\"Company\"}</h3>\r\n              </div>\r\n              {/* Loop through data array here */}\r\n              {!loading ? (\r\n                companyData.length !== 0 ? (\r\n                  companyData.map((comp) => {\r\n                    const { logo, company, description, _id, oneLink } = comp;\r\n                    return (\r\n                      <ResultBar\r\n                        image={logo}\r\n                        name={company}\r\n                        description={description}\r\n                        key={_id}\r\n                        param={oneLink}\r\n                        isCompany\r\n                        isInvestor={comp.isInvestor}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-center py-4\">\r\n                    <h4>No Companies Found</h4>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <SpinnerBS\r\n                  className={\r\n                    \"d-flex py-5 justify-content-center align-items-center w-100 white-to-grey\"\r\n                  }\r\n                  colorClass={\"d-l-grey\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["ResultBar","_ref","image","name","description","isCompany","param","isInvestor","oneLinkId","loggedInUserId","useSelector","selectLoggedInUserId","userOneLink","selectUserOneLink","linkTo","concat","link","disableLink","_jsx","Link","className","style","color","pointerEvents","to","children","_jsxs","src","Default","alt","width","height","objectFit","SearchResults","dispatch","useDispatch","searchParams","useSearchParams","query","setQuery","useState","get","peopleData","setPeopleData","companyData","setCompanyData","loading","setLoading","useEffect","has","async","_data$data","_data$data2","data","getSearchResultsAPI","users","company","fetchData","setPageTitle","document","title","MaxWidthWrapper","SpinnerBS","colorClass","length","map","person","profilePicture","firstName","lastName","designation","_id","comp","logo","oneLink"],"sourceRoot":""}