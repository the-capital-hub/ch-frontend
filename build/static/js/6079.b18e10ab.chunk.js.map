{"version":3,"file":"static/js/6079.b18e10ab.chunk.js","mappings":"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","sources":["components/InvestorOneLink/InvestorOneLinkAppointment/Calendar/Calendar.jsx","pages/InvestorOneLink/InvestorOneLinkAppointment/InvestorOneLinkAppointment.jsx"],"sourcesContent":["// src/Calendar.js\r\nimport React, { useState } from \"react\";\r\nimport { FaArrowLeftLong, FaArrowRightLong } from \"react-icons/fa6\";\r\nimport \"./calendar.css\"; // Import custom CSS for styling\r\n\r\nconst Calendar = ({ setDate }) => {\r\n  const today = new Date();\r\n  const [currentDate, setCurrentDate] = useState(today);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  // Get the first day and the total days of the month\r\n  const getFirstDayOfMonth = (date) =>\r\n    new Date(date.getFullYear(), date.getMonth(), 1).getDay();\r\n  const getDaysInMonth = (date) =>\r\n    new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n\r\n  // Generate an array of days for the calendar\r\n  const generateCalendar = (date) => {\r\n    const daysInMonth = getDaysInMonth(date);\r\n    const firstDay = getFirstDayOfMonth(date);\r\n    const daysArray = [];\r\n\r\n    // Fill the days array with empty slots for the previous month\r\n    for (let i = 0; i < firstDay; i++) {\r\n      daysArray.push(\"\");\r\n    }\r\n\r\n    // Fill the days array with the current month days\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      daysArray.push(i);\r\n    }\r\n\r\n    return daysArray;\r\n  };\r\n\r\n  // Navigate to the previous month\r\n  const prevMonth = () => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)\r\n    );\r\n  };\r\n\r\n  // Navigate to the next month\r\n  const nextMonth = () => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)\r\n    );\r\n  };\r\n\r\n  // Generate the days array\r\n  const daysArray = generateCalendar(currentDate);\r\n\r\n  // Get month and year to display\r\n  const month = currentDate.toLocaleString(\"default\", { month: \"long\" });\r\n  const year = currentDate.getFullYear();\r\n\r\n  // Days of the week headers\r\n  const daysOfWeek = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n  // Handle date click\r\n  const handleDateClick = (day) => {\r\n    const clickedDate = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth(),\r\n      day\r\n    );\r\n    if (selectedDate && clickedDate.getDate() === selectedDate.getDate()) {\r\n      setSelectedDate(\"\");\r\n      setDate(\"\");\r\n    } else {\r\n      setSelectedDate(clickedDate);\r\n      setDate(clickedDate); // Pass the selected date to the parent\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <div className=\"calendar-header\">\r\n        <button onClick={prevMonth}>\r\n          <FaArrowLeftLong />\r\n        </button>\r\n        <h4>{`${month} ${year}`}</h4>\r\n        <button onClick={nextMonth}>\r\n          <FaArrowRightLong />\r\n        </button>\r\n      </div>\r\n      <div className=\"calendar-grid\">\r\n        {daysOfWeek.map((day) => (\r\n          <div key={day} className=\"calendar-day-header\">\r\n            {day}\r\n          </div>\r\n        ))}\r\n        {daysArray.map((day, index) => {\r\n          const dateObj = new Date(\r\n            currentDate.getFullYear(),\r\n            currentDate.getMonth(),\r\n            day\r\n          );\r\n          const isBeforeToday = dateObj < today && day !== \"\";\r\n          const isToday = dateObj.toDateString() === today.toDateString();\r\n          const isSelected =\r\n            selectedDate &&\r\n            dateObj.toDateString() === selectedDate.toDateString();\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={`calendar-day ${day === \"\" ? \"empty\" : \"\"} ${\r\n                isBeforeToday ? \"disabled\" : \"\"\r\n              } ${isToday ? \"today\" : \"\"} ${isSelected ? \"selected\" : \"\"}`}\r\n              onClick={() => !isBeforeToday && handleDateClick(day)} // Allow clicking on today and future dates\r\n            >\r\n              {day}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./InvestorOneLinkAppointment.scss\";\r\nimport { IoTimeOutline } from \"react-icons/io5\";\r\nimport { TbFileUpload } from \"react-icons/tb\";\r\nimport AfterSuccessPopUp from \"../../../components/PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { HiOutlineFolderMinus } from \"react-icons/hi2\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectIsMobileView,\r\n  selectTheme,\r\n  setPageTitle,\r\n} from \"../../../Store/features/design/designSlice\";\r\nimport moment from \"moment\";\r\nimport {\r\n  addMessage,\r\n  addNotificationAPI,\r\n  createChat,\r\n  createMeetingAPI,\r\n  createMeetingLink,\r\n} from \"../../../Service/user\";\r\nimport { setChatId } from \"../../../Store/features/chat/chatSlice\";\r\nimport { generateId } from \"../../../utils/ChatsHelpers\";\r\nimport { selectLoggedInUserId } from \"../../../Store/features/user/userSlice\";\r\nimport Calendar from \"../../../components/InvestorOneLink/InvestorOneLinkAppointment/Calendar/Calendar\";\r\nimport { getBase64 } from \"../../../utils/getBase64\";\r\n\r\nconst times = [\r\n  \"00:00\",\r\n  \"00:30\",\r\n  \"01:00\",\r\n  \"01:30\",\r\n  \"02:00\",\r\n  \"02:30\",\r\n  \"03:00\",\r\n  \"03:30\",\r\n  \"04:00\",\r\n  \"04:30\",\r\n  \"05:00\",\r\n  \"05:30\",\r\n  \"06:00\",\r\n  \"06:30\",\r\n  \"07:00\",\r\n  \"07:30\",\r\n  \"08:00\",\r\n  \"08:30\",\r\n  \"09:00\",\r\n  \"09:30\",\r\n  \"10:00\",\r\n  \"10:30\",\r\n  \"11:00\",\r\n  \"11:30\",\r\n  \"12:00\",\r\n  \"12:30\",\r\n];\r\n\r\nexport default function InvestorOneLinkAppointment() {\r\n  const { userId } = useParams();\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [open, setOpen] = useState(false);\r\n  const [fromTime, setFromTime] = useState(\"10:00\");\r\n  const [toTime, setToTime] = useState(\"10:30\");\r\n  const [agenda, setAgenda] = useState(\"\");\r\n  const [timing, setTiming] = useState(\"AM\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const fileInputRef = useRef(null);\r\n  const [selectedFiles, setSelectedFiles] = useState(null);\r\n  const theme = useSelector(selectTheme);\r\n  const dispatch = useDispatch();\r\n  const [date, setDate] = useState(moment().format(\"YYYY-MM-DD\"));\r\n\r\n  useEffect(() => {\r\n    document.title = \"Appointment | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Appointment\"));\r\n  }, [dispatch]);\r\n\r\n  const handleProfileClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFiles(file);\r\n  };\r\n\r\n  const handelAppointment = async () => {\r\n    try {\r\n      if (loggedInUserId === userId) {\r\n        alert(\"Same user cannot book a meeting\");\r\n        return;\r\n      }\r\n      let doc = \"\";\r\n      if (selectedFiles) {\r\n        doc = await getBase64(selectedFiles);\r\n      }\r\n\r\n      const newMeetingData = {\r\n        start: fromTime,\r\n        end: toTime,\r\n        title,\r\n        agenda,\r\n        oneLinkId: userId,\r\n        doc: doc,\r\n        timing,\r\n      };\r\n\r\n      if (!loggedInUser.meetingToken) {\r\n        const response = await createMeetingLink(window.location.href);\r\n        window.location.href = response.data;\r\n      } else {\r\n        const { data } = await createMeetingAPI({ ...newMeetingData });\r\n        if (data) {\r\n          const notificationBody = {\r\n            recipient: userId,\r\n            type: \"onlinkRequest\",\r\n            achievementId: \"658bb97a8a18edb75e6f4243\",\r\n          };\r\n          setOpen(true);\r\n          const schuldedUserId = data.userId;\r\n          await createChat(schuldedUserId, loggedInUserId)\r\n            .then(async (res) => {\r\n              if (res.message === \"Chat already exists\") {\r\n                await addNotificationAPI(notificationBody);\r\n                const message = {\r\n                  id: generateId(),\r\n                  senderId: loggedInUserId,\r\n                  text: `${loggedInUser.firstName} ${loggedInUser.lastName} has scheduled a meeting with you on ${date} at ${fromTime} ${timing}`,\r\n                  chatId: res?.data?._id,\r\n                };\r\n                await addMessage(message);\r\n                return;\r\n              }\r\n              await addNotificationAPI(notificationBody);\r\n              dispatch(setChatId(res?.data._id));\r\n              const message = {\r\n                id: generateId(),\r\n                senderId: loggedInUserId,\r\n                text: `${loggedInUser.firstName} ${loggedInUser.lastName} has scheduled a meeting with you on ${date} at ${fromTime} ${timing}`,\r\n                chatId: res?.data?._id,\r\n              };\r\n              await addMessage(message);\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error creating chat-->\", error);\r\n            });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Create meeting error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"appointment_wrapper mb-5\">\r\n      <h2 className=\"mb-3 px-3 px-xxl-0 fw-bold page_heading\">\r\n        Schedule an appointment\r\n      </h2>\r\n      <section className=\"appointment_section py-4 rounded-4 border d-flex flex-column gap-4\">\r\n        <h4 className=\"div__heading px-3 px-lg-4\">Select Date & Time</h4>\r\n        <div className=\"two_col_container\">\r\n          <div\r\n            className=\"calendar d-flex\"\r\n            style={{\r\n              padding: \"2rem\",\r\n              flexWrap: \"wrap\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"calender__div\"\r\n              style={{\r\n                maxWidth: \"600px\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"calender rounded-2\"\r\n                style={{ width: \"600px\", background: \"#212224\" }}\r\n              >\r\n                <Calendar setDate={setDate} date={date} />\r\n              </div>\r\n              <p style={{ paddingTop: \"1rem\" }}>Time</p>\r\n              <div style={{ display: \"flex\" }}>\r\n                <div>\r\n                  <p style={{ marginBottom: 0 }}>From</p>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      background: \"#3c3e45\",\r\n                      maxWidth: \"100px\",\r\n                      padding: \"10px\",\r\n                      alignItems: \"center\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <IoTimeOutline />\r\n                    <select\r\n                      style={{\r\n                        background: \"transparent\",\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setFromTime(e.target.value);\r\n                      }}\r\n                    >\r\n                      {times.map((item) => (\r\n                        <option key={item} value={item} style={{ color: \"#000\" }}>{item}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style={{ marginLeft: \"1rem\" }}>\r\n                  <p style={{ marginBottom: 0 }}>To</p>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      background: \"#3c3e45\",\r\n                      maxWidth: \"100px\",\r\n                      padding: \"10px\",\r\n                      alignItems: \"center\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <IoTimeOutline />\r\n                    <select\r\n                      style={{\r\n                        background: \"transparent\",\r\n                        border: \"none\",\r\n                        outline: \"none\",\r\n                      }}\r\n                      onChange={(e) => {\r\n                        setToTime(e.target.value);\r\n                      }}\r\n                    >\r\n                      {times.map((item) => (\r\n                        <option key={item} value={item} style={{ color: \"#000\" }}>{item}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style={{ marginLeft: \"2rem\" }}>\r\n                  <p style={{ marginBottom: 0 }}>Time</p>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      background: \"#3c3e45\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        background: timing === \"AM\" ? \"#DDFF71\" : \"transparent\",\r\n                        color: timing === \"AM\" ? \"#000\" : \"#fff\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"10px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setTiming(\"AM\");\r\n                      }}\r\n                    >\r\n                      AM\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        background: timing === \"PM\" ? \"#DDFF71\" : \"transparent\",\r\n                        color: timing === \"PM\" ? \"#000\" : \"#fff\",\r\n                        padding: \"10px\",\r\n                        borderRadius: \"10px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setTiming(\"PM\");\r\n                      }}\r\n                    >\r\n                      PM\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"rounded-2\"\r\n              style={{\r\n                background: theme === \"dark\" ? \"#212224\" : \"#f5f5f5\",\r\n                maxWidth: \"600px\",\r\n                width: \"100%\",\r\n                padding: \"2rem\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div>\r\n                <label>Meeting Title</label>\r\n                <input\r\n                  className=\"profile_edit_field w-100\"\r\n                  style={{\r\n                    border: \"none\",\r\n                    borderRadius: \"5px\",\r\n                    padding: \"10px\",\r\n                    background: \"#35363A\",\r\n                  }}\r\n                  value={title}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div style={{ paddingTop: \"0.5rem\" }}>\r\n                <p style={{ marginBottom: 0 }}>Meeting Duration</p>\r\n                <p>\r\n                  <IoTimeOutline /> 1 hour\r\n                </p>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  margin: \"0.3rem 0 0.5rem\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                {selectedFiles ? (\r\n                  <div\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      background: \"#2D2D2D\",\r\n                      marginBottom: \"0.4rem\",\r\n                      borderRadius: \"10px\",\r\n                      padding: \"1rem 0.5rem\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-between\",\r\n                    }}\r\n                  >\r\n                    <HiOutlineFolderMinus color=\"#8C5AC9\" size={30} />\r\n                    <p style={{ marginBottom: 0 }}>{selectedFiles.name}</p>\r\n                    <button\r\n                      style={{\r\n                        padding: \"0px 20px\",\r\n                        border: \"none\",\r\n                        background: \"#FF6C6C\",\r\n                        borderRadius: \"5px\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setSelectedFiles(null);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      background: \"rgba(140, 90, 201, 0.08)\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                      padding: \"1rem 0\",\r\n                      borderRadius: \"5px\",\r\n                      border: \"2px dotted\",\r\n                      color: \"#8C5AC9\",\r\n                      position: \"relative\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={handleProfileClick}\r\n                  >\r\n                    <TbFileUpload color=\"#8C5AC9\" size={55} />\r\n                    <p style={{ color: theme === \"dark\" ? \"#fff\" : \"#000\" }}>\r\n                      Upload files for meeting\r\n                    </p>\r\n                    <input\r\n                      id=\"file-input\"\r\n                      type=\"file\"\r\n                      ref={fileInputRef}\r\n                      onChange={handleFileChange}\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label>Agenda</label>\r\n                <textarea\r\n                  className=\"profile_edit_field w-100\"\r\n                  style={{\r\n                    border: \"none\",\r\n                    borderRadius: \"5px\",\r\n                    padding: \"10px\",\r\n                    background: \"#35363A\",\r\n                    minHeight: \"100px\",\r\n                  }}\r\n                  value={agenda}\r\n                  onChange={(e) => {\r\n                    setAgenda(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              alignItems: \"flex-end\",\r\n              justifyContent: \"flex-end\",\r\n              padding: \"0 2rem\",\r\n            }}\r\n          >\r\n            <button\r\n              style={{\r\n                background: \"#ff0000\",\r\n                border: \"none\",\r\n                padding: \"10px 20px\",\r\n                borderRadius: \"25px\",\r\n                marginRight: \"15px\",\r\n                maxWidth: \"150px\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              style={{\r\n                background: \"#DDFF71\",\r\n                border: \"none\",\r\n                padding: \"10px 20px\",\r\n                borderRadius: \"25px\",\r\n                color: \"black\",\r\n                maxWidth: \"200px\",\r\n                width: \"100%\",\r\n              }}\r\n              onClick={handelAppointment}\r\n            >\r\n              Create a schedule\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {open && (\r\n        <AfterSuccessPopUp\r\n          withoutOkButton\r\n          onClose={() => setOpen(!open)}\r\n          successText=\"Authentication with Google completed\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["_ref","setDate","today","Date","currentDate","setCurrentDate","useState","selectedDate","setSelectedDate","daysArray","date","daysInMonth","getFullYear","getMonth","getDate","getDaysInMonth","firstDay","getDay","getFirstDayOfMonth","i","push","generateCalendar","month","toLocaleString","year","_jsxs","className","children","_jsx","onClick","prevMonth","FaArrowLeftLong","concat","nextMonth","FaArrowRightLong","map","day","index","dateObj","isBeforeToday","isToday","toDateString","isSelected","clickedDate","handleDateClick","times","InvestorOneLinkAppointment","userId","useParams","loggedInUserId","useSelector","selectLoggedInUserId","loggedInUser","state","user","open","setOpen","fromTime","setFromTime","toTime","setToTime","agenda","setAgenda","timing","setTiming","title","setTitle","fileInputRef","useRef","selectedFiles","setSelectedFiles","theme","selectTheme","dispatch","useDispatch","moment","format","useEffect","document","setPageTitle","style","padding","flexWrap","justifyContent","maxWidth","width","background","Calendar","paddingTop","display","marginBottom","alignItems","borderRadius","IoTimeOutline","border","outline","onChange","e","target","value","item","color","marginLeft","cursor","flexDirection","margin","HiOutlineFolderMinus","size","name","position","handleProfileClick","current","click","TbFileUpload","id","type","ref","event","file","files","minHeight","marginRight","async","alert","doc","getBase64","newMeetingData","start","end","oneLinkId","meetingToken","data","createMeetingAPI","notificationBody","recipient","achievementId","schuldedUserId","createChat","then","_res$data2","res","message","_res$data","addNotificationAPI","generateId","senderId","text","firstName","lastName","chatId","_id","addMessage","setChatId","catch","error","console","response","createMeetingLink","window","location","href","AfterSuccessPopUp","withoutOkButton","onClose","successText"],"sourceRoot":""}