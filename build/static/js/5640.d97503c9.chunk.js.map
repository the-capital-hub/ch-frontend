{"version":3,"file":"static/js/5640.d97503c9.chunk.js","mappings":"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","sources":["components/Investor/CompanyProfilePageComponents/CompanyDescription/CompanyDescription.jsx","components/Investor/CompanyProfilePageComponents/CompanyProfileForm.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeamCard.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/AddTeamMemberModal.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeam.jsx","components/Investor/InvestorGlobalCards/ColoredCards/ColorCard.js"],"sourcesContent":["import React from \"react\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function CompanyDescription({\r\n  companyData,\r\n  companyDescription,\r\n  setCompanyDescription,\r\n  isBioEditable,\r\n  setIsBioEditable,\r\n  submitBioHandler,\r\n  handleDescriptionChange,\r\n  loading,\r\n}) {\r\n  // fetch isInvestor\r\n  const { isInvestor } = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleResize(e) {\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + 2 + \"px\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`paragraph__component py-5 px-3 px-md-5 d-flex flex-column gap-4  ${\r\n        isInvestor === \"true\" ? \"rounded-4 border\" : \"rounded-4\"\r\n      } `}\r\n      style={{ color: \"var(--d-l-grey)\" }}\r\n    >\r\n      <div className=\"d-flex flex-column-reverse flex-sm-row align-items-sm-center justify-content-between gap-3 gap-md-0\">\r\n        <h2>Company Description</h2>\r\n        <span className=\"ms-auto\">\r\n          <div className=\"d-flex gap-2 justify-content-end flex-wrap flex-md-nowrap\">\r\n            <button\r\n              type=\"button\"\r\n              className={`align-self-end btn-base ${\r\n                isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n              } ${isBioEditable ? \"btn-sm\" : \"\"}`}\r\n              onClick={() => {\r\n                if (isBioEditable) {\r\n                  setCompanyDescription(companyData.description);\r\n                }\r\n                setIsBioEditable(!isBioEditable);\r\n              }}\r\n            >\r\n              {isBioEditable ? \"Cancel\" : \"Edit\"}\r\n              {/* <CiEdit /> */}\r\n            </button>\r\n            {isBioEditable && (\r\n              <button\r\n                className={`align-self-end btn-base ${\r\n                  isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n                } ${isBioEditable ? \"btn-sm\" : \"\"}`}\r\n                onClick={(e) => submitBioHandler(e)}\r\n              >\r\n                {loading ? (\r\n                  <SpinnerBS\r\n                    colorClass={`${\r\n                      isInvestor === \"true\" ? \"text-dark\" : \"text-white\"\r\n                    }`}\r\n                    spinnerSizeClass=\"spinner-border-sm\"\r\n                  />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n                {/* <CiSaveUp2 /> */}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </span>\r\n      </div>\r\n      {/* <p>\r\n              A little about myself. “Dejection is a sign of failure but it\r\n              becomes the cause of success”. I wrote this when I was 16 years old\r\n              and that’s exactly when I idealised the reality of life. In this\r\n              current world, success is defined in many ways, some of which\r\n              include money, fame and power. I believe that success is just the\r\n              beginning of a new problem. Every step of our lives we work hard to\r\n              solve an issue and every time we end up with a new problem.\r\n            </p> */}\r\n      {isBioEditable ? (\r\n        <textarea\r\n          value={companyDescription}\r\n          name=\"bio\"\r\n          onChange={handleDescriptionChange}\r\n          className=\"description_textarea p-2\"\r\n          onFocus={handleResize}\r\n          autoFocus\r\n          // rows={4}\r\n        />\r\n      ) : (\r\n        <p className=\"small_typo\">\r\n          {companyDescription || \"Click on edit to add company description\"}\r\n        </p>\r\n      )}\r\n      {/* <Link className=\"see__more align-self-end\">See more</Link> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CompanyProfileForm.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../Service/user\";\r\nimport { getBase64 } from \"../../../utils/getBase64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginSuccess } from \"../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport { setUserCompany } from \"../../../Store/features/user/userSlice\";\r\nimport { BsFillCameraFill } from \"react-icons/bs\";\r\n\r\nconst LOCATIONS = [\r\n  \"Select Location\",\r\n  \"New Delhi\",\r\n  \"Gurgaon\",\r\n  \"Mumbai\",\r\n  \"Pune\",\r\n  \"Hyderabad\",\r\n  \"Chennai\",\r\n  \"Bengaluru\",\r\n  \"Mangalore\",\r\n  \"Kochi\",\r\n  \"Lucknow\",\r\n  \"Kolkata\",\r\n  \"Others\",\r\n];\r\n\r\nconst SECTORS = [\r\n  \"Sector Agnostic\",\r\n  \"B2B\",\r\n  \"B2C\",\r\n  \"AI/ML\",\r\n  \"API\",\r\n  \"AR/VR\",\r\n  \"Analytics\",\r\n  \"Automation\",\r\n  \"BioTech\",\r\n  \"Cloud\",\r\n  \"Consumer Tech\",\r\n  \"Creator Economy\",\r\n  \"Crypto/Blockchain\",\r\n  \"D2C\",\r\n  \"DeepTech\",\r\n  \"Developer Tools\",\r\n  \"E-Commerce\",\r\n  \"Education\",\r\n  \"Climate Tech\",\r\n  \"Fintech\",\r\n  \"Gaming\",\r\n  \"Healthtech\",\r\n  \"IoT (Internet of Things)\",\r\n  \"Legaltech\",\r\n  \"Logistics and Supply Chain\",\r\n  \"Manufacturing\",\r\n  \"Media and Entertainment\",\r\n  \"Mobility and Transportation\",\r\n  \"PropTech (Property Technology)\",\r\n  \"Robotics\",\r\n  \"Saas (Software as a Service)\",\r\n  \"SpaceTech\",\r\n  \"SportsTech\",\r\n  \"Telecommunications\",\r\n  \"Travel and Tourism\",\r\n  \"Wearables\",\r\n  \"Insurtech\",\r\n  \"Agtech (Agriculture Technology)\",\r\n  \"Clean Energy / Renewable Energy\",\r\n  \"HRtech (Human Resources Technology)\",\r\n  \"B2B Marketplace\",\r\n  \"Cybersecurity\",\r\n  \"E-sports\",\r\n  \"MarTech (Marketing Technology)\",\r\n  \"MedTech (Medical Technology)\",\r\n  \"Retail Tech\",\r\n  \"others\",\r\n];\r\nconst stageData = [\r\n  \"Bootstrap\",\r\n  \"Incubated\",\r\n  \"Angel invested\",\r\n  \"Pre seed\",\r\n  \"Seed\",\r\n  \"Series A and above\",\r\n];\r\nconst productData = [\r\n  \"Concept/Idea\",\r\n  \"Prototype\",\r\n  \"Minimum Viable Product(MVP)\",\r\n  \"Beta Testing\",\r\n  \"Fully Deployed Product\",\r\n];\r\n\r\nexport default function CompanyProfileForm({\r\n  companyData,\r\n  investor = false,\r\n  isSaveAll,\r\n  handleShowPopup,\r\n  theme,\r\n}) {\r\n  // States for form\r\n  const [imagePreview, setImagePreview] = useState(companyData?.logo || null);\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [othersClicked, setOthersClicked] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n  // State for loading\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isSaveAll) {\r\n      const event = new Event(\"submit\", { cancelable: true });\r\n      handleSubmit(event);\r\n    }\r\n  }, [isSaveAll]);\r\n\r\n  useEffect(() => {\r\n    if (investor) {\r\n      setFormData({\r\n        founderId: companyData.founderId || loggedInUser._id,\r\n        company: companyData.companyName || \"\",\r\n        tagline: companyData.tagline || \"\",\r\n        location: companyData.location || LOCATIONS[0],\r\n        startedAtDate: companyData.startedAtDate || \"\",\r\n        industryType: companyData.industry || \"\",\r\n        sector: companyData.sector || SECTORS[0],\r\n        noOfEmployees: companyData.noOfEmployees || \"\",\r\n        vision: companyData.vision || \"\",\r\n        mission: companyData.mission || \"\",\r\n        socialLinks: companyData.socialLinks || \"\",\r\n        keyFocus: companyData.keyFocus || \"\",\r\n        stage: companyData.stage || stageData[0],\r\n        lastFunding: companyData.lastFunding || \"\",\r\n        productStage: companyData.productStage || \"\",\r\n      });\r\n    } else {\r\n      setFormData(companyData || {});\r\n    }\r\n  }, [companyData, investor]);\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"siteUrl\") {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        socialLinks: {\r\n          ...prevData.socialLinks,\r\n          website: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle File Input change\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setSelectedFile(file);\r\n    setImagePreview(imageUrl);\r\n  };\r\n\r\n  // Handle Location select\r\n  const handleLocationSelect = (e, location) => {\r\n    if (location === LOCATIONS[0]) return;\r\n    if (location === \"Others\") {\r\n      setOthersClicked(true);\r\n    }\r\n    setFormData((prevData) => ({ ...prevData, location: location }));\r\n  };\r\n\r\n  // Handle Dropdown Blur\r\n  const handleDropdownBlur = () => {\r\n    setOthersClicked(false);\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      location:\r\n        (formData.location !== \"Others\" && formData.location) ||\r\n        companyData.location,\r\n    }));\r\n  };\r\n\r\n  // Handle Sector Select\r\n  const handleSectorSelect = (e, sector) => {\r\n    if (sector === SECTORS[0]) return;\r\n    setFormData((prevData) => ({ ...prevData, sector: sector }));\r\n  };\r\n\r\n  // handle form submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // set loading\r\n    setLoading(true);\r\n\r\n    let updatedFormData = { ...formData };\r\n\r\n    try {\r\n      if (selectedFile) {\r\n        const logo = await getBase64(selectedFile);\r\n        updatedFormData.logo = logo;\r\n      }\r\n      if (investor) {\r\n        const response = await postInvestorData({\r\n          ...updatedFormData,\r\n          companyName: updatedFormData.company,\r\n          founderId: companyData.founderId || loggedInUser._id,\r\n        });\r\n        const user = {\r\n          ...loggedInUser,\r\n          investor: response.data._id,\r\n        };\r\n        dispatch(loginSuccess(user));\r\n        dispatch(setUserCompany(response.data));\r\n        // Show success popup\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n      } else {\r\n        const response = await postStartUpData({\r\n          ...updatedFormData,\r\n          founderId: companyData.founderId || loggedInUser._id,\r\n        });\r\n        dispatch(setUserCompany(response.data));\r\n        // Show success popup\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // Show error popup\r\n      setLoading(false);\r\n      handleShowPopup({ error: true });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile__form\">\r\n      <form action=\"\" className=\"\" onSubmit={handleSubmit}>\r\n        <div className=\"mx-auto\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            id=\"image\"\r\n            accept=\"image/*\"\r\n            className=\"visually-hidden\"\r\n            onChange={handleFileInputChange}\r\n          />\r\n          <label htmlFor=\"image\" className={`upload__label ${theme} `}>\r\n            {imagePreview || companyData?.logo ? (\r\n              <img\r\n                src={imagePreview || companyData?.logo}\r\n                alt=\"Selected\"\r\n                className=\"preview-image\"\r\n                style={{\r\n                  width: \"70px\",\r\n                  height: \"70px\",\r\n                  objectFit: \"contain\",\r\n                  borderRadius: \"100px\",\r\n                }}\r\n              />\r\n            ) : (\r\n              <BsFillCameraFill\r\n                style={{\r\n                  fontSize: \"1.5rem\",\r\n                  color: `${\r\n                    theme === \"investor\" ? \"black\" : \"rgba(253, 89, 1,1)\"\r\n                  }`,\r\n                }}\r\n              />\r\n            )}\r\n          </label>\r\n          <p\r\n            className=\"div__heading\"\r\n            style={{ color: \"#fff\", marginBottom: \"0\" }}\r\n          >\r\n            Company Logo\r\n          </p>\r\n        </div>\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Name</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"company\"\r\n            id=\"company\"\r\n            className=\"profile_form_input\"\r\n            value={formData.company || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Tagline</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tagline\"\r\n            id=\"tagline\"\r\n            className=\"profile_form_input\"\r\n            value={formData.tagline || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        {/* <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Industry</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"industryType\"\r\n            id=\"industry\"\r\n            className=\"profile_form_input\"\r\n            value={formData.industryType || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset> */}\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Location</legend>\r\n          {othersClicked && (\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              id=\"location\"\r\n              className=\"profile_form_input\"\r\n              placeholder={formData.location + \"...\"}\r\n              onChange={handleInputChange}\r\n              onBlur={handleDropdownBlur}\r\n              autoFocus\r\n            />\r\n          )}\r\n          {!othersClicked && (\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn profile_form_input w-auto dropdown-toggle\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {formData.location}\r\n              </button>\r\n              <ul\r\n                className={`dropdown-menu m-0 p-0 ${\r\n                  investor ? \"investor\" : \"startup\"\r\n                }`}\r\n              >\r\n                {LOCATIONS.map((location, index) => {\r\n                  return (\r\n                    <li key={`${location}${index}`} className=\"m-0 p-0\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`btn btn-base list-btn w-100 text-start ps-3 ${\r\n                          investor ? \"investor\" : \"startup\"\r\n                        } ${location === formData.location ? \"selected\" : \"\"}`}\r\n                        onClick={(e) => handleLocationSelect(e, location)}\r\n                      >\r\n                        {location}\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Established Date</legend>\r\n          <input\r\n            type=\"date\"\r\n            name=\"startedAtDate\"\r\n            id=\"startedAtDate\"\r\n            className=\"profile_form_input\"\r\n            value={formData.startedAtDate || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Sector</legend>\r\n          <div className=\"dropdown\">\r\n            <button\r\n              className=\"btn profile_form_input w-auto dropdown-toggle sector_text\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {formData.sector}\r\n            </button>\r\n            <ul\r\n              className={`dropdown-menu m-0 p-0 ${\r\n                investor ? \"investor\" : \"startup\"\r\n              }`}\r\n            >\r\n              {SECTORS.map((sector, index) => {\r\n                return (\r\n                  <li key={`${sector}${index}`} className=\"m-0 p-0\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`btn btn-base list-btn text-start ps-3 text-break ${\r\n                        investor ? \"investor\" : \"startup\"\r\n                      } ${sector === formData.sector ? \"selected\" : \"\"}`}\r\n                      onClick={(e) => handleSectorSelect(e, sector)}\r\n                    >\r\n                      <p className=\"m-0\">{sector}</p>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>No. of Employees</legend>\r\n          <input\r\n            type=\"number\"\r\n            name=\"noOfEmployees\"\r\n            id=\"noOfEmployees\"\r\n            max={2000}\r\n            min={0}\r\n            className=\"profile_form_input\"\r\n            value={formData.noOfEmployees || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Website URL</legend>\r\n          <input\r\n            type=\"url\"\r\n            name=\"siteUrl\"\r\n            id=\"siteUrl\"\r\n            className=\"profile_form_input\"\r\n            value={formData.socialLinks?.website || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Vision</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"vision\"\r\n            id=\"vision\"\r\n            className=\"profile_form_input\"\r\n            value={formData.vision || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Mission</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mission\"\r\n            id=\"mission\"\r\n            className=\"profile_form_input\"\r\n            value={formData.mission || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Key Focus</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"keyFocus\"\r\n            id=\"keyFocus\"\r\n            className=\"profile_form_input\"\r\n            value={formData.keyFocus || \"\"}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Finance, AR, VR, AI\"\r\n          />\r\n        </fieldset>\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">TAM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"TAM\"\r\n              id=\"TAM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.TAM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"TAM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">SAM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SAM\"\r\n              id=\"SAM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.SAM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"SAM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">SOM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SOM\"\r\n              id=\"SOM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.SOM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"SOM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">Last funding</legend>\r\n            <input\r\n              type=\"date\"\r\n              name=\"lastFunding\"\r\n              id=\"lastFunding\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.lastFunding || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Last funding\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend>Investment stage</legend>\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn profile_form_input w-auto dropdown-toggle sector_text\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {formData.stage || stageData[0]}\r\n              </button>\r\n              <ul\r\n                className={`dropdown-menu m-0 p-0 ${\r\n                  investor ? \"investor\" : \"startup\"\r\n                }`}\r\n              >\r\n                {stageData.map((sector, index) => {\r\n                  return (\r\n                    <li key={`${sector}${index}`} className=\"m-0 p-0\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`btn btn-base list-btn text-start ps-3 text-break ${\r\n                          investor ? \"investor\" : \"startup\"\r\n                        } ${sector === formData.stage ? \"selected\" : \"\"}`}\r\n                        onClick={(e) => {\r\n                          if (sector === stageData[0]) return;\r\n                          setFormData((prevData) => ({\r\n                            ...prevData,\r\n                            stage: sector,\r\n                          }));\r\n                        }}\r\n                      >\r\n                        <p className=\"m-0\">{sector}</p>\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </fieldset>\r\n        )}\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend>Product stage</legend>\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn profile_form_input w-auto dropdown-toggle sector_text\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {formData.productStage || productData[0]}\r\n              </button>\r\n              <ul\r\n                className={`dropdown-menu m-0 p-0 ${\r\n                  investor ? \"investor\" : \"startup\"\r\n                }`}\r\n              >\r\n                {productData.map((sector, index) => {\r\n                  return (\r\n                    <li key={`${sector}${index}`} className=\"m-0 p-0\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`btn btn-base list-btn text-start ps-3 text-break ${\r\n                          investor ? \"investor\" : \"startup\"\r\n                        } ${sector === formData.productStage ? \"selected\" : \"\"}`}\r\n                        onClick={(e) => {\r\n                          if (sector === productData[0]) return;\r\n                          setFormData((prevData) => ({\r\n                            ...prevData,\r\n                            productStage: sector,\r\n                          }));\r\n                        }}\r\n                      >\r\n                        <p className=\"m-0\">{sector}</p>\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </fieldset>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className={`align-self-end btn-base ${\r\n            investor ? \"investor\" : \"startup\"\r\n          }`}\r\n        >\r\n          {loading ? (\r\n            <SpinnerBS\r\n              colorClass={`${investor ? \"text-dark\" : \"text-white\"}`}\r\n              spinnerSizeClass=\"spinner-border-sm\"\r\n            />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CoreTeamCard.scss\";\r\n\r\nexport default function CoreTeamCard({ image, name, designation }) {\r\n  return (\r\n    <div\r\n      className=\"p-4 d-flex flex-column align-items-center gap-3 rounded-4 core_team_card\"\r\n      style={{ backgroundColor: \"var(--bs-light)\" }}\r\n    >\r\n      <img\r\n        src={image}\r\n        alt={\"name\"}\r\n        style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\r\n        className=\"rounded-circle\"\r\n        loading=\"lazy\"\r\n      />\r\n      <h5 className=\"text-capitalize text-center text-break\">{name}</h5>\r\n      <p className=\"text-capitalize text-center text-break\">{designation}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BsFillCameraFill } from \"react-icons/bs\";\r\nimport {\r\n  postStartUpData,\r\n  uploadLogo,\r\n  postInvestorData,\r\n} from \"../../../../Service/user\";\r\nimport { getBase64 } from \"../../../../utils/getBase64\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nexport default function AddTeamMemberModal({\r\n  companyData,\r\n  setCompanyData,\r\n  theme,\r\n}) {\r\n  const initialMemberState = {\r\n    name: \"\",\r\n    designation: \"\",\r\n    image: \"\",\r\n    index: null,\r\n  };\r\n  // State for member\r\n  const [member, setMember] = useState(initialMemberState);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // handleChange\r\n  function handleInputChange(e) {\r\n    const { name, value } = e.target;\r\n    setMember((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  // handleFileChange\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      try {\r\n        const imageUrl = URL.createObjectURL(file);\r\n        setSelectedFile(file);\r\n        setImagePreview(imageUrl);\r\n      } catch (error) {\r\n        console.error(\"Error creating object URL:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // handle AddTeamMember\r\n  const handleAddTeamMember = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    let index = member.index;\r\n    let profileImage = member.image;\r\n\r\n    if (selectedFile) {\r\n      try {\r\n        const logo = await getBase64(selectedFile);\r\n        const { url } = await uploadLogo({ logo });\r\n        profileImage = url;\r\n      } catch (error) {\r\n        console.log(\"Error:\", error);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const updatedTeamMember = {\r\n      name: member.name,\r\n      designation: member.designation,\r\n      image: profileImage,\r\n    };\r\n\r\n    try {\r\n      if (isEditing) {\r\n        let editedTeam = [...companyData.team];\r\n        editedTeam[index] = updatedTeamMember;\r\n\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: editedTeam,\r\n        }));\r\n\r\n        const response = loggedInUser.isInvestor === \"true\"\r\n          ? await postInvestorData({\r\n              founderId: companyData.founderId,\r\n              team: editedTeam,\r\n            })\r\n          : await postStartUpData({\r\n              founderId: companyData.founderId,\r\n              team: editedTeam,\r\n            });\r\n        dispatch(setUserCompany(response.data));\r\n      } else {\r\n        const newTeam = [...companyData.team, updatedTeamMember];\r\n\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: newTeam,\r\n        }));\r\n\r\n        const response = loggedInUser.isInvestor === \"true\"\r\n          ? await postInvestorData({\r\n              founderId: companyData.founderId,\r\n              team: newTeam,\r\n            })\r\n          : await postStartUpData({\r\n              founderId: companyData.founderId,\r\n              team: newTeam,\r\n            });\r\n        dispatch(setUserCompany(response.data));\r\n      }\r\n\r\n      setMember(initialMemberState);\r\n      setSelectedFile(null);\r\n      setIsEditing(false);\r\n      setImagePreview(null);\r\n    } catch (error) {\r\n      console.error(\"Error adding team member:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle select click\r\n  function handleSelectClick(e, member, index) {\r\n    setIsEditing(true);\r\n    setMember({ ...member, index });\r\n    setImagePreview(member.image);\r\n  }\r\n\r\n  // Handle Delete click\r\n  async function handleDeleteClick(e, member, index) {\r\n    let response = window.confirm(\r\n      `Are you sure you want to remove \"${member.name}\" from your Team?`\r\n    );\r\n    if (response) {\r\n      const newTeam = [...companyData.team];\r\n      newTeam.splice(index, 1);\r\n\r\n      try {\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: newTeam,\r\n        }));\r\n\r\n        const postResponse = loggedInUser.isInvestor === \"true\"\r\n          ? await postInvestorData({\r\n              founderId: companyData.founderId,\r\n              team: newTeam,\r\n            })\r\n          : await postStartUpData({\r\n              founderId: companyData.founderId,\r\n              team: newTeam,\r\n            });\r\n        dispatch(setUserCompany(postResponse.data));\r\n\r\n        setMember(initialMemberState);\r\n        setSelectedFile(null);\r\n        setIsEditing(false);\r\n        setImagePreview(null);\r\n      } catch (error) {\r\n        console.error(\"Error deleting team member:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle Clear\r\n  function handleClear() {\r\n    setMember(initialMemberState);\r\n    setIsEditing(false);\r\n    setSelectedFile(null);\r\n    setImagePreview(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"team_member_modal d-flex flex-column flex-lg-row gap-4 justify-content-around py-3\">\r\n      {/* Edit/Remove modal */}\r\n\r\n      {companyData?.team?.length > 0 && (\r\n        <div className=\"edit_remove_team d-flex flex-column gap-3 overflow-y-auto py-3\">\r\n          <h5 className=\"m-0 text-center\">Select member to edit</h5>\r\n          <div className=\"d-flex flex-column gap-3\">\r\n            {companyData?.team?.map((member, index) => (\r\n              <div\r\n                className=\"team_member_reomve d-flex align-items-center justify-content-around p-2 rounded-4\"\r\n                key={`${member.name}${index}`}\r\n              >\r\n                <img\r\n                  src={member.image}\r\n                  alt={member.name}\r\n                  style={{\r\n                    width: \"50px\",\r\n                    height: \"50px\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  className=\"rounded-circle\"\r\n                />\r\n                <h6 className=\"m-0 flex-grow-1 text-center\">{member.name}</h6>\r\n                <div className=\"d-flex gap-2\">\r\n                  <button\r\n                    className={`modal_edit_btn ${theme}`}\r\n                    onClick={(e) => handleSelectClick(e, member, index)}\r\n                  >\r\n                    <FaRegEdit size={10} style={{ fill: \"black\" }} />\r\n                  </button>\r\n                  <button\r\n                    className={`modal_delete_btn ${theme}`}\r\n                    onClick={(e) => handleDeleteClick(e, member, index)}\r\n                  >\r\n                    <MdDelete size={20} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add modal */}\r\n      <div className=\"add_team d-flex flex-column gap-3 rounded-4 shadow-sm py-3\">\r\n        <h5 className=\"m-0 text-center\">Add new Member</h5>\r\n\r\n        <form\r\n          onSubmit={handleAddTeamMember}\r\n          className=\"d-flex flex-column gap-4 p-4\"\r\n        >\r\n          {/* Profile picture input */}\r\n          <div className=\"mx-auto\">\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              id=\"teamMemberImage\"\r\n              accept=\"image/*\"\r\n              className=\"visually-hidden\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <label htmlFor=\"teamMemberImage\" className={`upload__label ${theme}`}>\r\n              {imagePreview ? (\r\n                <img\r\n                  src={imagePreview}\r\n                  alt=\"Selected\"\r\n                  className=\"preview-image\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"contain\",\r\n                    borderRadius: \"100px\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <BsFillCameraFill\r\n                  style={{\r\n                    fontSize: \"1.5rem\",\r\n                    color: theme === \"investor\" ? \"black\" : \"rgba(253, 89, 1,1)\",\r\n                  }}\r\n                />\r\n              )}\r\n            </label>\r\n          </div>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={member.name}\r\n              className={`modal__input p-2 rounded-2 w-100 ${theme}`}\r\n              onChange={handleInputChange}\r\n              style={{ color: \"black\" }}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"designation\"\r\n              id=\"designation\"\r\n              placeholder=\"Enter Designation\"\r\n              value={member.designation}\r\n              className={`modal__input p-2 rounded-2 w-100 ${theme}`}\r\n              onChange={handleInputChange}\r\n              style={{ color: \"black\" }}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={!member.designation || !member.name}\r\n            className={`orange_button ${theme}`}\r\n            type=\"submit\"\r\n          >\r\n            {loading ? (\r\n              <SpinnerBS\r\n                colorClass={theme === \"investor\" ? \"text-dark\" : \"text-light\"}\r\n                spinnerSizeClass=\"spinner-border-sm\"\r\n              />\r\n            ) : isEditing ? \"Update\" : \"Add\"}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`orange_button ${theme}`}\r\n            onClick={handleClear}\r\n          >\r\n            Clear\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CoreTeam.scss\";\r\nimport CoreTeamCard from \"./CoreTeamCard\";\r\n// import RaghuImage from \"../../../../Images/aboutUs/Raghu.jpeg\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  ModalBSBody,\r\n  ModalBSContainer,\r\n  // ModalBSFooter,\r\n  ModalBSHeader,\r\n  ModalBsLauncher,\r\n} from \"../../../PopUp/ModalBS\";\r\nimport AddTeamMemberModal from \"./AddTeamMemberModal\";\r\n\r\nexport default function CoreTeam({ companyData, setCompanyData, theme }) {\r\n  const [team, setTeam] = useState(companyData?.team);\r\n  useEffect(() => {\r\n    setTeam(companyData?.team);\r\n  }, [companyData]);\r\n\r\n  return (\r\n    <div className=\" d-flex flex-column gap-4\">\r\n      <div\r\n        className=\"d-flex align-items-center justify-content-between\"\r\n        style={{ color: \"var(--d-l-grey)\" }}\r\n      >\r\n        <h2>Core Team</h2>\r\n        {/* <Link className=\"see__more align-self-end\">See more</Link> */}\r\n      </div>\r\n      <div\r\n        className={`team__cards__container d-flex align-items-center gap-5 pb-3 ${theme} `}\r\n      >\r\n        {team && team.length > 0 ? (\r\n          team?.map((member, index) => (\r\n            <CoreTeamCard\r\n              key={index}\r\n              image={member.image}\r\n              name={member.name}\r\n              designation={member.designation}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>Click Add to add team members</p>\r\n        )}\r\n      </div>\r\n      {/* If authorised show \"Add\" button that triggers add modal */}\r\n      {\r\n        <div className=\"align-self-end\">\r\n          <ModalBsLauncher\r\n            id={\"AddTeamMemberModal\"}\r\n            className={`add_button d-flex align-items-center gap-1 w-auto ${theme} `}\r\n          >\r\n            <span>Add</span>\r\n          </ModalBsLauncher>\r\n        </div>\r\n      }\r\n      {/* Modal for adding new team member */}\r\n      <div className=\"addCoreTeamModal__container\">\r\n        <ModalBSContainer id={\"AddTeamMemberModal\"} modalXl>\r\n          <ModalBSHeader\r\n            title={\"Add Team Member\"}\r\n            className={`orange__heading ${theme}`}\r\n          />\r\n          <ModalBSBody>\r\n            <AddTeamMemberModal\r\n              setCompanyData={setCompanyData}\r\n              companyData={companyData}\r\n              theme={theme}\r\n            />\r\n          </ModalBSBody>\r\n        </ModalBSContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ColorCard.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nconst ColorCard = ({\r\n  color,\r\n  text,\r\n  image,\r\n  amount,\r\n  background,\r\n  onAmountChange,\r\n  field,\r\n  colorCardData,\r\n  className,\r\n  noRupee,\r\n  isInvestor = false,\r\n  isOneLink = false,\r\n  isNotEditable,\r\n}) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editedAmount, setEditedAmount] = useState(amount);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEditedAmount(amount);\r\n  }, [amount]);\r\n\r\n  const handleEditClick = () => {\r\n    if (!isNotEditable) setIsEditMode(true);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setEditedAmount(e.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditMode(false);\r\n    onAmountChange(editedAmount);\r\n    const updatedData = {\r\n      founderId: loggedInUser._id,\r\n      colorCard: { ...colorCardData, [field]: editedAmount },\r\n    };\r\n    if (isInvestor) {\r\n      postInvestorData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    } else {\r\n      postStartUpData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${className} colorcard-component card row border`}\r\n      style={{\r\n        //backgroundColor: \"rgba(255, 115, 115, 1)\"\r\n        backgroundColor: \"#333333\",\r\n        padding: \"5px 10px\",\r\n        justifyContent:\"space-between\"\r\n      }}\r\n    >\r\n      <div className=\"col-7 col-sm-6 left-content\">\r\n        <>\r\n          <h3 className=\"title\" style={{ color: \"#fff\" }}>\r\n            {text}\r\n          </h3>\r\n          {isEditMode ? (\r\n            <input\r\n              type=\"text\"\r\n              className=\"edit_input\"\r\n              id=\"edit\"\r\n              value={editedAmount}\r\n              onChange={handleAmountChange}\r\n              onBlur={handleBlur}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span\r\n              className=\"rupee-sign\"\r\n              onClick={onAmountChange ? handleEditClick : () => {}}\r\n              style={{ color: \"#fff\" }}\r\n            >\r\n              {!noRupee && \"\"} {editedAmount}{\" \"}\r\n              {!isOneLink && !isNotEditable && (\r\n                <label htmlFor=\"edit\" className=\"edit-tip\">\r\n                  Click to edit\r\n                </label>\r\n              )}\r\n            </span>\r\n          )}\r\n        </>\r\n      </div>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"rgba(231, 177, 91, 0.2)\",\r\n          borderRadius: \"10px\",\r\n          padding:\"5px\",\r\n          width:\"70px\"\r\n        }}\r\n      >\r\n        <img src={image} alt=\"Card\" width={60} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n"],"names":["CompanyDescription","_ref","companyData","companyDescription","setCompanyDescription","isBioEditable","setIsBioEditable","submitBioHandler","handleDescriptionChange","loading","isInvestor","useSelector","state","user","loggedInUser","useDispatch","_jsxs","className","concat","style","color","children","_jsx","type","onClick","description","e","SpinnerBS","colorClass","spinnerSizeClass","value","name","onChange","onFocus","target","height","scrollHeight","autoFocus","LOCATIONS","SECTORS","stageData","productData","CompanyProfileForm","_formData$socialLinks","investor","isSaveAll","handleShowPopup","theme","imagePreview","setImagePreview","useState","logo","formData","setFormData","selectedFile","setSelectedFile","othersClicked","setOthersClicked","dispatch","setLoading","useEffect","event","Event","cancelable","handleSubmit","founderId","_id","company","companyName","tagline","location","startedAtDate","industryType","industry","sector","noOfEmployees","vision","mission","socialLinks","keyFocus","stage","lastFunding","productStage","handleInputChange","prevData","website","async","preventDefault","updatedFormData","getBase64","response","postInvestorData","data","loginSuccess","setUserCompany","success","postStartUpData","error","console","log","action","onSubmit","id","accept","file","files","imageUrl","URL","createObjectURL","htmlFor","src","alt","width","objectFit","borderRadius","BsFillCameraFill","fontSize","marginBottom","placeholder","onBlur","handleDropdownBlur","map","index","handleLocationSelect","handleSectorSelect","max","min","TAM","SAM","SOM","CoreTeamCard","image","designation","backgroundColor","AddTeamMemberModal","_companyData$team","_companyData$team2","setCompanyData","initialMemberState","member","setMember","isEditing","setIsEditing","prev","team","length","handleSelectClick","FaRegEdit","size","fill","window","confirm","newTeam","splice","previousData","postResponse","handleDeleteClick","MdDelete","profileImage","url","uploadLogo","updatedTeamMember","editedTeam","required","disabled","CoreTeam","setTeam","ModalBsLauncher","ModalBSContainer","modalXl","ModalBSHeader","title","ModalBSBody","text","amount","background","onAmountChange","field","colorCardData","noRupee","isOneLink","isNotEditable","isEditMode","setIsEditMode","editedAmount","setEditedAmount","padding","justifyContent","_Fragment","handleBlur","updatedData","colorCard","then","res","catch","handleEditClick"],"sourceRoot":""}