{"version":3,"file":"static/js/7730.f7569c57.chunk.js","mappings":"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","sources":["components/Investor/InvestorGlobalCards/OneLink/OnePagePreviewCard/OnePagePreviewCard.js","components/Investor/OneLink/Table/Table.js","components/Investor/OneLink/OneLinkEditPage/OneLinkEditView/OneLinkEditView.js","components/Investor/OneLink/OneLinkEditPage/OneLinkEditPage.js","components/Investor/SvgIcons/IconChevronBack.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./OnePagePreviewCard.scss\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { postStartUpData } from \"../../../../../Service/user\";\r\n\r\n// const OnePagePreviewCard = ({ company, page }) => {\r\n//   const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n//   const [editedContent, setEditedContent] = useState({});\r\n//   const [editable, setEditable] =useState(false)\r\n\r\n//   const cardData = [\r\n//     {\r\n//       field: \"problem\",\r\n//       title: \"1.Problem\",\r\n//       content:\r\n//         company?.problem ||\r\n//         `Enter the problem statement your startup is addressing`,\r\n//     },\r\n//     {\r\n//       field: \"solution\",\r\n//       title: \"2.Solution\",\r\n//       content:\r\n//         company?.solution || \"Enter the solution your startup is offering\",\r\n//     },\r\n//     {\r\n//       field: \"competitiveLandscape\",\r\n//       title: \"3.Competitive Landscape\",\r\n//       content: company?.competitiveLandscape || \"Mention your competitors\",\r\n//     },\r\n//     {\r\n//       field: \"growthModel\",\r\n//       title: \"4.Revenue Model\",\r\n//       content: company?.growthModel || \"Your startup’s revenue model\",\r\n//     },\r\n//     {\r\n//       field: \"growthStrategy\",\r\n//       title: \"5.Growth Strategy\",\r\n//       content: company?.growthStrategy || \"Your Growth startegy\",\r\n//     },\r\n//     {\r\n//       field: \"marketTraction\",\r\n//       title: \"6.Market Traction\",\r\n//       content: company?.marketTraction || \"Your Market traction\",\r\n//     },\r\n//     // { title: \"7.Business Model\", content: \"Your Business Model\" },\r\n//   ];\r\n\r\n//   const handleUpdate = (field, newValue) => {\r\n//     setEditable(true)\r\n//     if (!newValue) return;\r\n//     setEditedContent({ ...editedContent, [field]: newValue });\r\n\r\n//     postStartUpData({\r\n//       [field]: newValue,\r\n//       founderId: loggedInUser._id,\r\n//     })\r\n//       .then(({ data }) => {\r\n//         console.log(data);\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"row onepage_card_container\">\r\n//         {cardData.map((card, index) => (\r\n//           <div className=\"col-md-6 col-lg-4\" key={index}>\r\n//             <div className=\"card\">\r\n//               <div className=\"card-body\">\r\n//                 <h5 className=\"card-title\">{card.title}</h5>\r\n//                 {page === \"oneLinkEdit\" ? (\r\n//                   editable ? (\r\n//                     <textarea\r\n//                       type=\"text\"\r\n//                       className=\"card-text\"\r\n//                       placeholder={card.field}\r\n//                       value={editedContent[card.field] || card.content}\r\n//                       onChange={(e) => handleUpdate(card.field, e.target.value)}\r\n//                       onBlur={() =>\r\n//                         handleUpdate(card.field, editedContent[card.field])\r\n//                       }\r\n//                     />\r\n//                   ) : (\r\n//                     <h6 onClick={handleUpdate} >{card.content}</h6>\r\n//                   )\r\n//                 ) : (\r\n//                   <h6 onClick={handleUpdate}>{card.content}</h6>\r\n//                 )}\r\n\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default OnePagePreviewCard;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./OnePagePreviewCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postStartUpData } from \"../../../../../Service/user\";\r\n\r\nconst OnePagePreviewCard = ({ company, page }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [editedContent, setEditedContent] = useState({});\r\n  const [editableIndex, setEditableIndex] = useState(null);\r\n  const [value, setValue] = useState(false);\r\n\r\n  const cardData = [\r\n    {\r\n      field: \"problem\",\r\n      title: \"Problem\",\r\n      content:\r\n        company?.problem ||\r\n        `Enter the problem statement your startup is addressing`,\r\n    },\r\n    {\r\n      field: \"solution\",\r\n      title: \"Solution\",\r\n      content:\r\n        company?.solution || \"Enter the solution your startup is offering\",\r\n    },\r\n    {\r\n      field: \"marketLandscape\",\r\n      title: \"Market Landscape\",\r\n      content: company?.competitiveLandscape || \"Mention your competitors\",\r\n    },\r\n    // {\r\n    //   field: \"growthModel\",\r\n    //   title: \"Revenue Model\",\r\n    //   content: company?.growthModel || \"Your startup’s revenue model\",\r\n    // },\r\n    // {\r\n    //   field: \"growthStrategy\",\r\n    //   title: \"Growth Strategy\",\r\n    //   content: company?.growthStrategy || \"Your Growth startegy\",\r\n    // },\r\n    // {\r\n    //   field: \"marketTraction\",\r\n    //   title: \"Market Traction\",\r\n    //   content: company?.marketTraction || \"Your Market traction\",\r\n    // },\r\n    // { title: \"Business Model\", content: \"Your Business Model\" },\r\n  ];\r\n\r\n  const handleUpdate = (field, newValue) => {\r\n    console.log(\"field, newValue\", field, newValue);\r\n    if (!newValue) return;\r\n    setEditedContent({ ...editedContent, [field]: newValue });\r\n\r\n    postStartUpData({\r\n      [field]: newValue,\r\n      founderId: loggedInUser._id,\r\n    })\r\n      .then((data) => {\r\n        console.log(\"saved data\", data);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"onepage_card_container\">\r\n        {cardData.map((card, index) => (\r\n          <div className=\"card_item\" key={index} >\r\n            <div className=\"card m-0\">\r\n              <div\r\n                className=\"card-body\"\r\n                onClick={() => setEditableIndex(index)}\r\n              >\r\n                <h5 className=\"card-title\">{card.title}</h5>\r\n                {page === \"oneLinkEdit\" ? (\r\n                  editableIndex === index ? (\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"card-text m-0 fs-6\"\r\n                      placeholder={card.field}\r\n                      value={value || card.content}\r\n                      onChange={(e) => setValue(e.target.value)}\r\n                      onBlur={() => {\r\n                        handleUpdate(card.field, value);\r\n                        setEditableIndex(null);\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                  ) : (\r\n                    <h6\r\n                      // onClick={() => setEditableIndex(index)}\r\n                      style={{ wordBreak: \"break-word\" }}\r\n                    >\r\n                      {card.content}\r\n                    </h6>\r\n                  )\r\n                ) : (\r\n                  <h6 style={{ wordBreak: \" break-word\" }}>{card.content}</h6>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OnePagePreviewCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./table.scss\";\r\n\r\nconst Table = ({ hidden, page, setTable, data }) => {\r\n  const initialData = {\r\n    rows: [],\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(initialData);\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n    // console.log(data);\r\n  }, [data]);\r\n\r\n  const addColumn = () => {\r\n    setTableData((prevData) => ({\r\n      rows: prevData.rows.map((row) => ({\r\n        ...row,\r\n        values: [...row.values, \"\"],\r\n      })),\r\n    }));\r\n  };\r\n\r\n  const addRow = () => {\r\n    const columnName = prompt(\r\n      \"Enter a name for the new row:\",\r\n      `Row ${tableData.rows.length + 1}`\r\n    );\r\n\r\n    if (columnName !== null) {\r\n      const newRow = {\r\n        label: columnName,\r\n        values: Array(tableData.rows[0].values.length).fill(\"\"),\r\n      };\r\n      setTableData((prevData) => ({\r\n        rows: [...prevData.rows, newRow],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleValueChange = (rowIndex, colIndex, value) => {\r\n    const updatedData = {\r\n      rows: tableData.rows.map((row, rIndex) => ({\r\n        ...row,\r\n        values:\r\n          rIndex === rowIndex\r\n            ? row.values.map((v, cIndex) => (cIndex === colIndex ? value : v))\r\n            : row.values,\r\n      })),\r\n    };\r\n    setTableData(updatedData);\r\n    setTable(updatedData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table-container\">\r\n        <h2 className={hidden && \"hidden\"}>Projections</h2>\r\n\r\n        <table>\r\n          <tbody>\r\n            {tableData?.rows?.map((row, rowIndex) => (\r\n              <tr key={row.label}>\r\n                <th>{row.label}</th>\r\n                {row?.values.map((value, colIndex) => (\r\n                  <td key={`${row.label}${colIndex}`}>\r\n                    {page === \"oneLinkEditPage\" ? (\r\n                      <input\r\n                        className=\"table_input\"\r\n                        placeholder=\"0\"\r\n                        value={value}\r\n                        onChange={(e) =>\r\n                          handleValueChange(rowIndex, colIndex, e.target.value)\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      `${value}`\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        {page === \"oneLinkEditPage\" && (\r\n          <button\r\n            onClick={addRow}\r\n            className=\"add_row_btn startup\"\r\n            style={{ marginRight: \"10px\" }}\r\n          >\r\n            + Add Row\r\n          </button>\r\n        )}\r\n        {page === \"oneLinkEditPage\" && (\r\n          <button onClick={addColumn} className=\"add_row_btn startup\">\r\n            + Add Column\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./OneLinkEditView.scss\";\r\n// import DollarRupeeImage from \"../../../../../Images/Dollar_rupee.svg\";\r\n// import PramodSq from \"../../../../../Images/Pramod.jpeg\";\r\nimport OnePagePreviewCard from \"../../../InvestorGlobalCards/OneLink/OnePagePreviewCard/OnePagePreviewCard\";\r\nimport Table from \"../../Table/Table\";\r\nimport TeamCard from \"../../../InvestorGlobalCards/OneLink/TeamCard/TeamCard\";\r\n// import FundAsking from \"../../Table/FundAsking/FundAsking\";\r\n// import FundDeployment from \"../../Table/FundDeployment/FundDeployment\";\r\nimport {\r\n  // Link,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\n// import SmallProfileCard from \"../../../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\n// import OneLinkMarketSection from \"../OneLinkMarketSection/OneLinkMarketSection\";\r\n// import OneLinkContactEdit from \"./OneLinkContactEdit/OneLinkContactEdit\";\r\nimport AfterSuccessPopUp from \"../../../../PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getStartupByFounderId,\r\n  postStartUpData,\r\n  updateUserById,\r\n  addNotificationAPI,\r\n} from \"../../../../../Service/user\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nimport { getBase64 } from \"../../../../../utils/getBase64\";\r\n// import camimg from \"../../../../../Images/Camera.png\";\r\nimport backIcon from \"../../../../../Images/Chat/BackIcon.svg\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { loginSuccess } from \"../../../../../Store/features/user/userSlice\";\r\nimport toast from \"react-hot-toast\";\r\n// import achievement from \"../../../../../Images/Investor/Achievements/img_1.png\";\r\n// import AchievementToast from \"../../../../Toasts/AchievementToast/AchievementToast\";\r\n// import { achievementTypes } from \"../../../../Toasts/AchievementToast/types\";\r\nimport IconChevronBack from \"../../../SvgIcons/IconChevronBack\";\r\n\r\nconst OneLinkEditView = () => {\r\n  const dispatch = useDispatch();\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const userId = loggedInUser._id;\r\n  const [company, setCompany] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    logo: \"\",\r\n    keyFocus: \"\",\r\n    socialLinks: \"\",\r\n    TAM: \"\",\r\n    SAM: \"\",\r\n    SOM: \"\",\r\n  });\r\n  const [selectedLogo, setSelectedLogo] = useState(null);\r\n  // const [imageData, setImageData] = useState(null);\r\n  const [fundingAskRows, setFundingAskRows] = useState([\r\n    { required: \"\", amount: \"\" },\r\n  ]);\r\n  const [roadMapRows, setRoadMapRows] = useState([{ date: \"\", milestone: \"\" }]);\r\n  const [competitorData, setCompetitorData] = useState([{ name: \"\" }]);\r\n\r\n  const initialData = {\r\n    rows: [\r\n      { label: \"Revenue\", values: [\"\"] },\r\n      { label: \"Expense\", values: [\"\"] },\r\n    ],\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(initialData);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getStartupByFounderId(userId)\r\n      .then(({ data }) => {\r\n        setCompany(data);\r\n        setFormData({\r\n          company: data.company || \"\",\r\n          description: data.description || \"\",\r\n          logo: data.logo || \"\",\r\n          keyFocus: data.keyFocus || \"\",\r\n          location: data.location || \"\",\r\n          socialLinks: data.socialLinks || [],\r\n          TAM: data.TAM || \"\",\r\n          SAM: data.SAM || \"\",\r\n          SOM: data.SOM || \"\",\r\n          startedAtDate: data.startedAtDate || \"\",\r\n        });\r\n        setFundingAskRows(data.fundingsAsk || fundingAskRows);\r\n        setRoadMapRows(data.roadMap || roadMapRows);\r\n        setCompetitorData(data.competitors || competitorData);\r\n        setTableData(\r\n          data.projections.length > 0 ? data.projections[0] : tableData\r\n        );\r\n      })\r\n      .catch(() => setCompany({}));\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch the image data from the URL\r\n  //   fetch(company?.logo)\r\n  //     .then((response) => response.blob())\r\n  //     .then((blob) => {\r\n  //       // Create a URL for the blob data\r\n  //       const blobUrl = URL.createObjectURL(blob);\r\n  //       setImageData(blobUrl);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error fetching image:\", error);\r\n  //     });\r\n  // }, [company?.logo]);\r\n\r\n  const handleInputChange = (field, event) => {\r\n    const updatedValue = event.target.value;\r\n    if (!updatedValue) return;\r\n    setFormData({ ...formData, [field]: updatedValue });\r\n  };\r\n\r\n  const handleSocialLinkChange = (field, event) => {\r\n    const updatedValue = event.target.value;\r\n    const updatedSocialLinks = { ...formData.socialLinks };\r\n    updatedSocialLinks[field] = updatedValue;\r\n    setFormData({\r\n      ...formData,\r\n      socialLinks: updatedSocialLinks,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (logo) => {\r\n    if (logo) {\r\n      formData.logo = logo;\r\n    }\r\n    postStartUpData({\r\n      ...formData,\r\n      founderId: loggedInUser._id,\r\n    })\r\n      .then(({ data }) => {\r\n        setSelectedLogo(data.logo);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const element = document.querySelector(\".download_preview\");\r\n    const buttons = document.querySelectorAll(\"button\");\r\n    buttons.forEach((button) => {\r\n      button.style.display = \"none\";\r\n    });\r\n    html2canvas(element, {\r\n      allowTaint: false,\r\n      removeContainer: true,\r\n      backgroundColor: \"#ffffff\",\r\n      scale: window.devicePixelRatio,\r\n      useCORS: true,\r\n      windowWidth: \"1400px\",\r\n    }).then((canvas) => {\r\n      const contentDataURL = canvas.toDataURL(\"image/png\");\r\n      const imgWidth = 210;\r\n      const pageHeight = 295;\r\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      let heightLeft = imgHeight;\r\n      let pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      let position = 5;\r\n\r\n      pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n      heightLeft -= pageHeight;\r\n\r\n      while (heightLeft >= 0) {\r\n        position = heightLeft - imgHeight;\r\n        pdf.addPage();\r\n        pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n        heightLeft -= pageHeight;\r\n      }\r\n      pdf.save(`${formData.company}.pdf`);\r\n      buttons.forEach((button) => {\r\n        button.style.display = \"block\";\r\n      });\r\n    });\r\n  };\r\n\r\n  const handlePreviewPDF = () => {\r\n    const container = document.querySelector(\".download_preview\");\r\n    const buttons = document.querySelectorAll(\"button\");\r\n    buttons.forEach((button) => {\r\n      button.style.display = \"none\";\r\n    });\r\n    html2canvas(container, {\r\n      allowTaint: false,\r\n      removeContainer: true,\r\n      backgroundColor: \"#ffffff\",\r\n      scale: window.devicePixelRatio,\r\n      useCORS: true,\r\n      windowWidth: \"1400px\",\r\n    }).then((canvas) => {\r\n      const contentDataURL = canvas.toDataURL(\"image/png\");\r\n      const imgWidth = 210;\r\n      const pageHeight = 295;\r\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      let heightLeft = imgHeight;\r\n      let pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      let position = 5;\r\n\r\n      pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n      heightLeft -= pageHeight;\r\n\r\n      while (heightLeft >= 0) {\r\n        position = heightLeft - imgHeight;\r\n        pdf.addPage();\r\n        pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n        heightLeft -= pageHeight;\r\n      }\r\n      const blob = pdf.output(\"blob\");\r\n      const blobUrl = URL.createObjectURL(blob);\r\n      window.open(blobUrl, \"_blank\");\r\n      buttons.forEach((button) => {\r\n        button.style.display = \"block\";\r\n      });\r\n    });\r\n  };\r\n\r\n  const logoOnChangeHandler = async ({ target }) => {\r\n    const logo = await getBase64(target.files[0]);\r\n    console.log(target.files[0]);\r\n    setFormData((prevForm) => {\r\n      return {\r\n        ...prevForm,\r\n        logo: logo,\r\n      };\r\n    });\r\n    handleUpdate(logo);\r\n  };\r\n\r\n  const addRow = () => {\r\n    setFundingAskRows([...fundingAskRows, { required: \"\", amount: \"\" }]);\r\n  };\r\n\r\n  const addRodMapRow = () => {\r\n    setRoadMapRows([...roadMapRows, { date: \"\", milestone: \"\" }]);\r\n  };\r\n\r\n  const deleteRow = (index) => {\r\n    const updatedRows = [...fundingAskRows];\r\n    updatedRows.splice(index, 1);\r\n    setFundingAskRows(updatedRows);\r\n  };\r\n\r\n  const deleteRoadMapRow = (index) => {\r\n    const updatedRows = [...roadMapRows];\r\n    updatedRows.splice(index, 1);\r\n    setRoadMapRows(updatedRows);\r\n  };\r\n\r\n  const handleFundingAskInputChange = (index, field, value) => {\r\n    const updatedRows = [...fundingAskRows];\r\n    updatedRows[index][field] = value;\r\n    setFundingAskRows(updatedRows);\r\n  };\r\n\r\n  const handleRoadMapInputChange = (index, field, value) => {\r\n    const updatedRows = [...roadMapRows];\r\n    updatedRows[index][field] = value;\r\n    setRoadMapRows(updatedRows);\r\n  };\r\n\r\n  // Competitor Input Change\r\n  const handleCompetitorInputChange = (index, value) => {\r\n    const updatedCompetitorData = [...competitorData];\r\n    updatedCompetitorData[index].name = value;\r\n    setCompetitorData(updatedCompetitorData);\r\n  };\r\n\r\n  // Add Competitor\r\n  const addCompetitor = () => {\r\n    const updatedCompetitorData = [...competitorData, { name: \"\" }];\r\n    setCompetitorData(updatedCompetitorData);\r\n  };\r\n\r\n  // Delete Competitor\r\n  const deleteCompetitor = (index) => {\r\n    const updatedCompetitorData = competitorData.filter((_, i) => i !== index);\r\n    setCompetitorData(updatedCompetitorData);\r\n  };\r\n\r\n  const [fromSubmit, setFromSubmit] = useState(false);\r\n  const [popupData, setPopupData] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    postStartUpData({\r\n      fundingsAsk: fundingAskRows,\r\n      roadMap: roadMapRows,\r\n      competitors: competitorData,\r\n      projections: tableData,\r\n      founderId: loggedInUser._id,\r\n    })\r\n      .then(({ data }) => {\r\n        setPopupData(\"Changes saved\");\r\n        setFromSubmit(true);\r\n\r\n        if (!loggedInUser.achievements.includes(\"6564689149186bca517cd0d1\")) {\r\n          const achievements = [...loggedInUser.achievements];\r\n          achievements.push(\"6564689149186bca517cd0d1\");\r\n          const updatedData = { achievements };\r\n          updateUserById(loggedInUser._id, updatedData)\r\n            .then(({ data }) => {\r\n              dispatch(loginSuccess(data.data));\r\n              const notificationBody = {\r\n                recipient: loggedInUser._id,\r\n                type: \"achievementCompleted\",\r\n                achievementId: \"6564689149186bca517cd0d1\",\r\n              };\r\n              addNotificationAPI(notificationBody)\r\n                .then((data) => console.log(\"Added\"))\r\n                .catch((error) => console.error(error.message));\r\n\r\n              toast.dismiss();\r\n              // toast.custom((t) => (\r\n              //   <AchievementToast type={achievementTypes.oneStopShop} />\r\n              // ));\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error updating user:\", error);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"editview_container\"> \r\n        <div className=\"col\">\r\n          <SmallProfileCard text={\"Edit\"} />\r\n        </div>\r\n        <div className=\"box_container px-3 px-lg-5 py-5 my-4\"> \r\n       <section className=\"dollar_rupree\">\r\n            <img src={DollarRupeeImage} alt=\"image\" />\r\n          </section> \r\n       <div className=\"download_preview\">\r\n            <section className=\"company_description\">\r\n              <div\r\n                className=\"mx-2 my-2 my-md-0\"\r\n                style={{ height: \"120px\", width: \"120px\" }}\r\n              >\r\n                <label htmlFor=\"logoImg\" className=\"position-relative\">\r\n                  <img\r\n                    src={selectedLogo || imageData}\r\n                    alt=\"image\"\r\n                    style={{ height: \"120px\", width: \"120px\" }}\r\n                    role=\"button\"\r\n                  />\r\n                  <span\r\n                    style={{ fontSize: \"10px\", left: \"30%\" }}\r\n                    className=\"position-absolute top-50 text-white rounded-pill bg-dark py-1 px-2\"\r\n                  >\r\n                    Update\r\n                  </span>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  value=\"\"\r\n                  id=\"logoImg\"\r\n                  name=\"logo\"\r\n                  onChange={logoOnChangeHandler}\r\n                  accept=\".jpg, .jpeg, .png, .webp, .svg\"\r\n                  hidden\r\n                />\r\n              </div>\r\n              <div className=\"company_text text-center text-md-start\">\r\n                <h6>\r\n                  <input\r\n                    className=\"name_container fs-5 \"\r\n                    value={formData.company}\r\n                    onChange={(e) => handleInputChange(\"company\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </h6>\r\n                <h6>\r\n                  <input\r\n                    className=\"name_container \"\r\n                    value={formData.tagline}\r\n                    onChange={(e) => handleInputChange(\"tagline\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </h6>\r\n                <hr className=\"m-0\" />\r\n                <h6>\r\n                  <textarea\r\n                    className=\"description_container\"\r\n                    value={formData.description}\r\n                    onChange={(e) => handleInputChange(\"description\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </h6>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"card_section\">\r\n              <OnePagePreviewCard company={company} page={\"oneLinkEdit\"} />\r\n            </section>\r\n\r\n            <section className=\"market_section\">\r\n              <OneLinkMarketSection company={company} page={\"oneLinkEdit\"} />\r\n            </section>\r\n\r\n            <section className=\"table_section\">\r\n              <Table page={\"oneLinkEditPage\"} />\r\n            </section>\r\n\r\n            <section className=\"team_section\">\r\n              {company?.team?.map((team, index) => (\r\n                <TeamCard\r\n                  index={index + 1}\r\n                  profile={team?.image}\r\n                  name={team?.name}\r\n                  designation={team?.designation}\r\n                  company={company}\r\n                  page={\"oneLinkEdit\"}\r\n                />\r\n              ))}\r\n            </section>\r\n\r\n            <section className=\"fund_asking_deployment\">\r\n              <div className=\"funding_divider\">\r\n                <FundAsking company={company} page={\"oneViewEdit\"} />\r\n              </div>\r\n              <div className=\"funding_divider\">\r\n                <OneLinkContactEdit\r\n                  oneLink={company.oneLink}\r\n                  page={\"oneViewEdit\"}\r\n                />\r\n              </div>\r\n            </section>\r\n          </div> \r\n\r\n      <section className=\"button_preview_download_section pdf-hidden\">\r\n            <div className=\"download_button_container\">\r\n              <button onClick={handlePreviewPDF}>Preview</button>\r\n              <button className=\"download_button\" onClick={handleDownloadPDF}>\r\n                Download\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div> */}\r\n      <section className=\"one_link_edit_view_section w-100 p-3 rounded-4\">\r\n        <span\r\n          className=\"back_img rounded-circle shadow-sm d-flex align-items-center justify-content-center\"\r\n          title=\"Go Back\"\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          {/* <img\r\n            src={backIcon}\r\n            alt=\"go back\"\r\n            width={20}\r\n            height={20}\r\n            onClick={() => navigate(-1)}\r\n          /> */}\r\n          <IconChevronBack width={25} height={25} color=\"var(--d-l-grey)\" />\r\n        </span>\r\n        <div className=\"download_preview p-md-5 \">\r\n          <section className=\" img_company_data d-flex flex-column flex-md-row w-100 justify-content-between align-items-center gap-3\">\r\n            <div className=\"img_right \">\r\n              <label htmlFor=\"logoImg\" className=\"position-relative\">\r\n                <img\r\n                  src={selectedLogo || company?.logo}\r\n                  alt=\"Selected logo or previous logo\"\r\n                  role=\"button\"\r\n                />\r\n                <span\r\n                  className=\"position-absolute py-1 px-2 d-flex flex-column justify-content-center align-items-center\"\r\n                  style={{\r\n                    fontSize: \"15px\",\r\n                    padding: \"4px\",\r\n                    color: \"var(--d-l-grey)\",\r\n                  }}\r\n                >\r\n                  Upload Company Logo\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                value=\"\"\r\n                id=\"logoImg\"\r\n                name=\"logo\"\r\n                onChange={logoOnChangeHandler}\r\n                accept=\".jpg, .jpeg, .png, .webp, .svg\"\r\n                hidden\r\n              />\r\n            </div>\r\n            <div className=\"compant_data d-flex flex-column gap-3 \">\r\n              <div className=\"startup_Name_inp\">\r\n                <h5>Startup Name</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"company\"\r\n                  name=\"company\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.company}\r\n                  onChange={(e) => handleInputChange(\"company\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n              <div className=\"location_data_div d-flex flex-column flex-md-row gap-3 w-100 \">\r\n                <div className=\"country  w-100 \">\r\n                  <h5>City, Country</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    className=\" px-3\"\r\n                    value={formData.location}\r\n                    onChange={(e) => handleInputChange(\"location\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </div>\r\n                <div className=\"founded  w-100 \">\r\n                  <h5>Founded Date</h5>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"founded_date\"\r\n                    name=\"founded_date\"\r\n                    className=\" px-3 w-100\"\r\n                    value={formData.startedAtDate}\r\n                    onChange={(e) => handleInputChange(\"startedAtDate\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"tags_inp\">\r\n                <h5>Tags</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"tags\"\r\n                  name=\"tags\"\r\n                  className=\" px-3\"\r\n                  style={{ width: \"100%\" }}\r\n                  value={formData.keyFocus}\r\n                  onChange={(e) => handleInputChange(\"keyFocus\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"link_section\">\r\n            <div className=\"web_link\">\r\n              <h5>Website Link</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"website_link\"\r\n                name=\"website_link\"\r\n                className=\"w-100 px-3\"\r\n                value={formData.socialLinks?.website}\r\n                onChange={(e) => handleSocialLinkChange(\"website\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n            <h4>Social Links</h4>\r\n            <div className=\"social_links d-flex flex-column flex-md-row justify-content-between gap-3\">\r\n              <div className=\"links w-100\">\r\n                <h5>Linkedin</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"link_1\"\r\n                  name=\"link_1\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.socialLinks.linkedin}\r\n                  onChange={(e) => handleSocialLinkChange(\"linkedin\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"links w-100\">\r\n                <h5>Twitter</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"link_2\"\r\n                  name=\"link_2\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.socialLinks.twitter}\r\n                  onChange={(e) => handleSocialLinkChange(\"twitter\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"links w-100\">\r\n                <h5>Instagram</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"link_3\"\r\n                  name=\"link_3\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.socialLinks.instagram}\r\n                  onChange={(e) => handleSocialLinkChange(\"instagram\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <div className=\"about_company_section my-3\">\r\n            <h5>About Company</h5>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"m-0 fs-6 w-100 p-3\"\r\n              value={formData.description}\r\n              onChange={(e) => handleInputChange(\"description\", e)}\r\n              onBlur={(e) => handleUpdate()}\r\n            />\r\n          </div>\r\n          <hr className=\"my-3\" />\r\n          <section className=\"card_section \">\r\n            <OnePagePreviewCard company={company} page={\"oneLinkEdit\"} />\r\n          </section>\r\n          <h4>Market Size (in Billions $)</h4>\r\n          <section className=\"market_size d-flex flex-column flex-md-row justify-content-between gap-3\">\r\n            <div className=\"market w-100\">\r\n              <h5>Total Addressable Market:</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"total_addressable_market\"\r\n                name=\"total_addressable_market\"\r\n                className=\"w-100 px-3\"\r\n                placeholder=\"Enter here\"\r\n                value={formData.TAM}\r\n                onChange={(e) => handleInputChange(\"TAM\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"market w-100\">\r\n              <h5>Service Addressable Market:</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"service_addressable_market\"\r\n                name=\"service_addressable_market\"\r\n                className=\"w-100 px-3\"\r\n                placeholder=\"Enter here\"\r\n                value={formData.SAM}\r\n                onChange={(e) => handleInputChange(\"SAM\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"market w-100\">\r\n              <h5>Service Obtainable Market:</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"service_obtainable_market\"\r\n                name=\"service_obtainable_market\"\r\n                className=\"w-100 px-3\"\r\n                placeholder=\"Enter here\"\r\n                value={formData.SOM}\r\n                onChange={(e) => handleInputChange(\"SOM\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n          </section>\r\n          <h4>Competitor</h4>\r\n          <section className=\"competitor_social_link d-flex flex-column flex-md-row justify-content-between gap-3\">\r\n            {competitorData?.map((competitor, index) => (\r\n              <div className=\"competitor_link w-100\" key={index}>\r\n                <h5>Competitor name {index + 1}</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  value={competitor.name}\r\n                  onChange={(e) =>\r\n                    handleCompetitorInputChange(index, e.target.value)\r\n                  }\r\n                  className=\"w-100 px-3\"\r\n                />\r\n                {index > 0 && (\r\n                  <button\r\n                    className=\"delete_row_btn delete_insideText\"\r\n                    onClick={() => deleteCompetitor(index)}\r\n                  >\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <button onClick={addCompetitor} className=\"add_row_btn startup\">\r\n            + Add Competitor\r\n          </button>\r\n          <section className=\"table_section mt-4\">\r\n            <Table\r\n              page={\"oneLinkEditPage\"}\r\n              setTable={setTableData}\r\n              data={tableData}\r\n            />\r\n          </section>\r\n          <h4>Fund Asking</h4>\r\n          <section className=\"fund_sking_section  d-flex flex-column  justify-content-between gap-3\">\r\n            {fundingAskRows?.map((row, index) => (\r\n              <div\r\n                className=\"d-flex flex-md-row flex-column w-100 gap-2\"\r\n                key={index}\r\n              >\r\n                <div className=\"fund_asking w-100\">\r\n                  <h5>Required For</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={row.required}\r\n                    onChange={(e) =>\r\n                      handleFundingAskInputChange(\r\n                        index,\r\n                        \"required\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"fund_asking w-100\">\r\n                  <h5>Amount</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={row.amount}\r\n                    onChange={(e) =>\r\n                      handleFundingAskInputChange(\r\n                        index,\r\n                        \"amount\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n                {index > 0 && (\r\n                  <button\r\n                    className=\"delete_row_btn\"\r\n                    onClick={() => deleteRow(index)}\r\n                  >\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <button onClick={addRow} className=\"add_row_btn startup\">\r\n            + Add Row\r\n          </button>\r\n          <hr />\r\n\r\n          <h4>Roadmap</h4>\r\n          <section className=\"roadmap_section d-flex flex-column justify-content-between gap-3\">\r\n            {roadMapRows?.map((row, index) => (\r\n              <div\r\n                className=\"d-flex flex-md-row flex-column w-100 gap-2\"\r\n                key={index}\r\n              >\r\n                <div className=\"Roadmap w-100\">\r\n                  <h5>Date</h5>\r\n                  <input\r\n                    type=\"date\"\r\n                    name={`date_${index}`}\r\n                    value={row.date}\r\n                    onChange={(e) =>\r\n                      handleRoadMapInputChange(index, \"date\", e.target.value)\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"Roadmap w-100\">\r\n                  <h5>Milestone</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    name={`milestone_${index}`}\r\n                    value={row.milestone}\r\n                    onChange={(e) =>\r\n                      handleRoadMapInputChange(\r\n                        index,\r\n                        \"milestone\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                {index > 0 && (\r\n                  <button\r\n                    className=\"delete_row_btn\"\r\n                    onClick={() => deleteRoadMapRow(index)}\r\n                  >\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <button className=\"add_row_btn startup\" onClick={addRodMapRow}>\r\n            + Add Row\r\n          </button>\r\n          <hr />\r\n          <section className=\"team_section d-flex  flex-row gap-3\">\r\n            {company?.team?.map((team, index) => (\r\n              <TeamCard\r\n                index={index + 1}\r\n                profile={team?.image}\r\n                name={team?.name}\r\n                designation={team?.designation}\r\n                company={company}\r\n                page={\"oneLinkEdit\"}\r\n              />\r\n            ))}\r\n          </section>\r\n          <button\r\n            className=\"save_btn btn-lg d-block mx-auto mt-3\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n        <section className=\"button_preview_download_section pdf-hidden\">\r\n          <div className=\"download_button_container\">\r\n            <button onClick={handlePreviewPDF}>Preview</button>\r\n            <button className=\"download_button\" onClick={handleDownloadPDF}>\r\n              Download\r\n            </button>\r\n          </div>\r\n        </section>\r\n        {fromSubmit && (\r\n          <AfterSuccessPopUp\r\n            withoutOkButton\r\n            onClose={() => setFromSubmit(!fromSubmit)}\r\n            successText={popupData}\r\n          />\r\n        )}\r\n      </section>\r\n      {/* <Toaster /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneLinkEditView;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./OneLinkEditPage.scss\";\r\nimport OneLinkEditView from \"./OneLinkEditView/OneLinkEditView\";\r\nimport MaxWidthWrapper from \"../../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../../Store/features/design/designSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst OneLinkEditPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Edit OneLink | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Edit OneLink\"));\r\n  }, [dispatch]);\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"editpage_container\">\r\n        <div className=\"row\">\r\n          <OneLinkEditView />\r\n        </div>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default OneLinkEditPage;\r\n","import React from \"react\";\r\n\r\nexport default function IconChevronBack(props) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 512 512\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={48}\r\n        d=\"M328 112L184 256l144 144\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n"],"names":["_ref","company","page","loggedInUser","useSelector","state","user","editedContent","setEditedContent","useState","editableIndex","setEditableIndex","value","setValue","cardData","field","title","content","problem","solution","competitiveLandscape","_jsx","_Fragment","children","className","map","card","index","_jsxs","onClick","type","placeholder","onChange","e","target","onBlur","handleUpdate","newValue","console","log","postStartUpData","founderId","_id","then","data","window","location","reload","catch","err","autoFocus","style","wordBreak","_tableData$rows","hidden","setTable","tableData","setTableData","rows","useEffect","row","rowIndex","label","values","colIndex","handleValueChange","updatedData","rIndex","v","cIndex","concat","addRow","columnName","prompt","length","newRow","Array","fill","prevData","marginRight","addColumn","OneLinkEditView","_formData$socialLinks","_company$team","dispatch","useDispatch","userId","setCompany","formData","setFormData","description","logo","keyFocus","socialLinks","TAM","SAM","SOM","selectedLogo","setSelectedLogo","fundingAskRows","setFundingAskRows","required","amount","roadMapRows","setRoadMapRows","date","milestone","competitorData","setCompetitorData","name","navigate","useNavigate","getStartupByFounderId","startedAtDate","fundingsAsk","roadMap","competitors","projections","handleInputChange","event","updatedValue","handleSocialLinkChange","updatedSocialLinks","_ref2","handleFundingAskInputChange","updatedRows","handleRoadMapInputChange","fromSubmit","setFromSubmit","popupData","setPopupData","IconChevronBack","width","height","color","htmlFor","src","alt","role","fontSize","padding","id","async","_ref3","getBase64","files","prevForm","accept","website","linkedin","twitter","instagram","OnePagePreviewCard","competitor","handleCompetitorInputChange","updatedCompetitorData","filter","_","i","deleteCompetitor","RiDeleteBin6Line","addCompetitor","Table","splice","deleteRow","deleteRoadMapRow","addRodMapRow","team","TeamCard","profile","image","designation","_ref4","achievements","includes","push","updateUserById","_ref5","loginSuccess","notificationBody","recipient","achievementId","addNotificationAPI","error","message","toast","dismiss","handlePreviewPDF","container","document","querySelector","buttons","querySelectorAll","forEach","button","display","html2canvas","allowTaint","removeContainer","backgroundColor","scale","devicePixelRatio","useCORS","windowWidth","canvas","contentDataURL","toDataURL","imgHeight","heightLeft","pdf","jsPDF","position","addImage","addPage","blob","output","blobUrl","URL","createObjectURL","open","handleDownloadPDF","element","save","AfterSuccessPopUp","withoutOkButton","onClose","successText","OneLinkEditPage","setPageTitle","MaxWidthWrapper","props","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}