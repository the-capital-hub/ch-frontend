{"version":3,"file":"static/js/1510.0d80f68b.chunk.js","mappings":"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","sources":["components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner.js","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","components/Toasts/AchievementToast/types.js","components/Toasts/AchievementToast/AchievementToast.jsx","pages/StartUp/CompanyProfile/CompanyProfilePage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./newscorner.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport startupOneImage from \"../../../../Images/blog/1 AsPGU1Q42C9lsVRoMg91Nw.webp\";\r\nimport startupTwoImage from \"../../../../Images/blog/eighttips.webp\";\r\nimport startupThreeImage from \"../../../../Images/blog/threefive.webp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectTheme } from \"../../../../Store/features/design/designSlice\";\r\n\r\nconst NewsCorner = ({ title, btnlink }) => {\r\n  const theme = useSelector(selectTheme)\r\n  // Fetch news items\r\n  const newsItems = [\r\n    {\r\n      title:\r\n        \"Why Mentoring Matters: Why Angel Investors Should Prioritize Mentorship Before Investing in a Startup\",\r\n      btnlink: \"/blog/startupOne\",\r\n      image: startupOneImage,\r\n      id: 1,\r\n    },\r\n    {\r\n      title: \"8 Tips to start raising Angel investments for startups\",\r\n      btnlink: \"/blog/startupTwo\",\r\n      image: startupTwoImage,\r\n      id: 2,\r\n    },\r\n    {\r\n      title: \"HOW TO BUILD A GREAT STARTUP by Pramod Badiger\",\r\n      btnlink: \"/blog/startupThree\",\r\n      image: startupThreeImage,\r\n      id: 3,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"newscorner_container\">\r\n        <div className=\"col-12 newscorner_card\">\r\n          <div className=\"card mt-2 right_view_profile_card right_view_profile\">\r\n            <div className=\"card-header\">\r\n              <div className=\"title\">\r\n                <span>News Corner</span>\r\n              </div>\r\n            </div>\r\n            {newsItems.map((item, index) => (\r\n              <Link\r\n                to={item.btnlink ? item.btnlink : \"\"}\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n                className=\"card-body newscorner_card_body \"\r\n                key={item.id}\r\n              >\r\n                <div className=\"newscorner_card_text d-flex align-items-center gap-1\">\r\n                  <h4 className=\"smallest_typo\" style={{color:theme===\"dark\"?\"#fff\":\"#000\"}}>\r\n                    {item.title\r\n                      ? item.title\r\n                      : \" Cellbell startup has raised to $10 million dollor funding\"}\r\n                  </h4>\r\n                  <div className=\"newsImage__container\">\r\n                    <img\r\n                      src={item.image}\r\n                      alt=\"News\"\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"auto\",\r\n                        objectFit: \"contain\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {/* <Link\r\n                      to={item.btnlink ? item.btnlink : \"\"}\r\n                      style={{ textDecoration: \"none\" }}\r\n                      target=\"_blank\"\r\n                      className=\"d-flex justify-content-center align-items-center mt-1 show__more__link mx-auto\"\r\n                    >\r\n                      <button className=\"d-flex align-items-center justify-content-center show__more\">\r\n                        <span className=\"text-center\">Show more</span>\r\n                      </button>\r\n                    </Link> */}\r\n                </div>\r\n              </Link>\r\n            ))}\r\n            {/* <hr className=\"hr\" /> */}\r\n            {/* <div className=\"card-body newscorner_card_body \">\r\n              <div className=\"newscorner_card_text\">\r\n                <h4 className=\"smallest_typo\">\r\n                  {title\r\n                    ? title\r\n                    : \" Cellbell startup has raised to $10 million dollor funding\"}\r\n                </h4>\r\n                <Link to={btnlink ? btnlink : \"\"} style={{textDecoration:\"none\"}}>\r\n                  <button>\r\n                    <span>Show more</span>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsCorner;\r\n","var _path, _rect;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","export const achievementTypes = {\r\n  voyager: {\r\n    title: \"Yoyager !\",\r\n    description: \"First Post\",\r\n    badge: \"bronze\",\r\n  },\r\n  onFire: {\r\n    title: \"You're On Fire!\",\r\n    description: \"Post for 5 days in a row\",\r\n    badge: \"bronze\",\r\n  },\r\n  employer: {\r\n    title: \"Employer\",\r\n    description: \"Selected a company in company profile page\",\r\n    badge: \"bronze\",\r\n  },\r\n  founder: {\r\n    title: \"Founder\",\r\n    description: \"Created a company in company profile page\",\r\n    badge: \"silver\",\r\n  },\r\n  oneStopShop: {\r\n    title: \"One-Stop Shop\",\r\n    description: \"Edited and opened your one-link for the first time\",\r\n    badge: \"bronze\",\r\n  },\r\n  paperwork: {\r\n    title: \"It's just paperwork\",\r\n    description: \"Added some documentation to the folders\",\r\n    badge: \"bronze\",\r\n  },\r\n  inspiration: {\r\n    title: \"Inspiration\",\r\n    description: \"Post for 10 days in a row\",\r\n    badge: \"silver\",\r\n  },\r\n  thoughtLeader: {\r\n    title: \"Thought Leader\",\r\n    description: \"Post for 30 days in a row\",\r\n    badge: \"gold\",\r\n  },\r\n  hereWeGo: {\r\n    title: \"Here We Go\",\r\n    description: \"Apply for funding from capital hub as a startup\",\r\n    badge: \"silver\",\r\n  },\r\n  helloItsMe: {\r\n    title: \"Hello, it's me\",\r\n    description: \"Message another startup founder\",\r\n    badge: \"bronze\",\r\n  },\r\n  pleasureDoingBusiness: {\r\n    title: \"Pleasure doing business!\",\r\n    description: \"Connect with another startup founder\",\r\n    badge: \"bronze\",\r\n  },\r\n  fallIntoTheDarkSide: {\r\n    title: \"Fall into the Dark Side\",\r\n    description: \"Activate dark mode\",\r\n    badge: \"bronze\",\r\n  },\r\n  showMeAround: {\r\n    title: \"Show me around\",\r\n    description: \"Complete a tutorial\",\r\n    badge: \"bronze\",\r\n  },\r\n  seeYouLaterAlligator: {\r\n    title: \"See you later, alligator\",\r\n    description: \"Save a post\",\r\n    badge: \"bronze\",\r\n  },\r\n  thisIsMe: {\r\n    title: \"This is me\",\r\n    description: \"Share your One-Link with another founder/investor\",\r\n    badge: \"bronze\",\r\n  },\r\n};\r\n","import \"./AchievementToast.scss\";\r\nimport silverImage from \"../../../Images/Investor/Achievements/silver.png\";\r\nimport goldImage from \"../../../Images/Investor/Achievements/gold.png\";\r\nimport bronzeImage from \"../../../Images/Investor/Achievements/bronze.png\";\r\nimport logo from \"../../../Images/investorIcon/LogoX.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsInvestor } from \"../../../Store/features/user/userSlice\";\r\nimport achievementImage from \"../../../Images/Investor/Achievements/img_1.png\";\r\n\r\nconst getImageByType = (badge) => {\r\n  switch (badge) {\r\n    case \"bronze\":\r\n      return bronzeImage;\r\n    case \"silver\":\r\n      return silverImage;\r\n    case \"gold\":\r\n      return goldImage;\r\n    default:\r\n      return achievementImage;\r\n  }\r\n};\r\n\r\nconst AchievementToast = ({ type }) => {\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n\r\n  return (\r\n    <Link\r\n      to={\r\n        isInvestor ? \"/investor/profile/achievements\" : \"/profile/achievements\"\r\n      }\r\n      className=\"achievement-toast text-decoration-none text-black rounded-3 bg-white shadow-lg pointer-events-auto row align-items-center m-0 border\"\r\n    >\r\n      <div className=\"col-3 p-1 badge-img\">\r\n        <img src={getImageByType(type?.badge)} alt=\"badge\" className=\"w-100\" />\r\n      </div>\r\n      <div className=\"col-7 p-2 d-flex flex-column align-items-start gap-2\">\r\n        <h6 className=\"m-0 fs-semibold text-capitalize\">\r\n          {type.badge} Achievement!\r\n        </h6>\r\n        <p className=\"m-0 fs-normal\">{type.title}</p>\r\n      </div>\r\n      <div className=\"col-2\">\r\n        <img src={logo} alt=\"The capital hub\" className=\"w-75\" />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default AchievementToast;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CompanyProfilePage.scss\";\r\nimport CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\nimport SmallProfileCard from \"../../../components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport {\r\n  getStartupByFounderId,\r\n  searchStartUps,\r\n  addStartUpToUser,\r\n  updateUserAPI,\r\n  addNotificationAPI,\r\n  getUserById,\r\n} from \"../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport DefaultAvatar from \"../../../Images/Chat/default-user-avatar.webp\";\r\nimport AfterSuccessPopUp from \"../../../components/PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  selectTheme,\r\n  setPageTitle,\r\n  setShowOnboarding,\r\n} from \"../../../Store/features/design/designSlice\";\r\nimport {\r\n  selectLoggedInUserId,\r\n  selectUserCompanyData,\r\n  setUserCompany,\r\n} from \"../../../Store/features/user/userSlice\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n// import achievement from \"../../../Images/Investor/Achievements/img_1.png\";\r\nimport { achievementTypes } from \"../../../components/Toasts/AchievementToast/types\";\r\nimport AchievementToast from \"../../../components/Toasts/AchievementToast/AchievementToast\";\r\n\r\nexport default function CompanyProfilePage() {\r\n  const navigate = useNavigate();\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  //const userCompanyData = useSelector(selectUserCompanyData);\r\n  const [userData, setUserData] = useState({});\r\n  const dispatch = useDispatch();\r\n  const theme = useSelector(selectTheme);\r\n  const [companyData, setCompanyData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const userVisitCount = localStorage.getItem(\"userVisit\");\r\n\r\n  useEffect(()=>{\r\n    if(Number(userVisitCount) <= 1){\r\n      dispatch(setShowOnboarding(true));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getStartupByFounderId(loggedInUser._id)\r\n      .then(({ data }) => {\r\n        setCompanyData(data);\r\n        dispatch(setUserCompany(data));\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.error(\"Error fetching startup data:\", error.message);\r\n      });\r\n    getUserById(\"\", loggedInUser._id).then(({ data }) => {\r\n      setUserData(data);\r\n    });\r\n    document.title = \"Company Profile | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Company\"));\r\n  }, []);\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    searchStartUps(newValue)\r\n      .then(({ data }) => {\r\n        setCompanies(data);\r\n      })\r\n      .catch(() => {\r\n        setCompanies([]);\r\n      });\r\n    setSelectedCompanyId(null);\r\n  };\r\n\r\n  const handleCompanySelection = (companyId, companyName) => {\r\n    setSelectedCompanyId(companyId);\r\n    const searchInput = document.querySelector(\".search-company-input\");\r\n    searchInput.value = companyName;\r\n    setCompanies([]);\r\n  };\r\n\r\n  const handleAddStartup = async () => {\r\n    try {\r\n      const response = await addStartUpToUser(\r\n        loggedInUser._id,\r\n        selectedCompanyId\r\n      );\r\n      if (response.isFirst) {\r\n        notify();\r\n        const notificationBody = {\r\n          recipient: loggedInUser._id,\r\n          type: \"achievementCompleted\",\r\n          achievementId: \"6564687349186bca517cd0cd\",\r\n        };\r\n        addNotificationAPI(notificationBody)\r\n          .then((data) => console.log(\"Added\"))\r\n          .catch((error) => console.error(error.message));\r\n      }\r\n      if (response.status === 200) {\r\n        setShowSuccess(true);\r\n        getStartupByFounderId(loggedInUser._id)\r\n          .then(({ data }) => {\r\n            setCompanyData(data);\r\n            dispatch(setUserCompany(data));\r\n            setUserData({...userData, startUp: data._id});\r\n            setSelectedCompanyId(null);\r\n            setCompanies([]);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching startup data:\", error.message);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    navigate(\"/company-profile/add\");\r\n  };\r\n\r\n  const notify = () =>\r\n    toast.custom((t) => <AchievementToast type={achievementTypes.employer} />);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"companyProfilePage__wrapper\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <SmallProfileCard text={\"Company Profile\"} />\r\n          <div className=\"edit-container\">\r\n            <div className=\"add_company_data rounded-4 p-4 mb-2\">\r\n              <div className=\"text-center\">\r\n                <button className=\"btn-base startup\" onClick={handleAddNew}>\r\n                  Add new company details\r\n                </button>\r\n              </div>\r\n              <div className=\"or-text-container\">\r\n                <p\r\n                  className=\"text-decoration-none fs-5\"\r\n                  style={{ color: theme === \"dark\" ? \"#fff\" : \"#000\" }}\r\n                >\r\n                  Or\r\n                </p>\r\n              </div>\r\n              <p\r\n                className=\"text-decoration-none fs-5\"\r\n                style={{ color: theme === \"dark\" ? \"#fff\" : \"#000\" }}\r\n              >\r\n                Choose from an existing Company\r\n              </p>\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search company\"\r\n                  className=\"search-company-input\"\r\n                  onChange={handleSearchInputChange}\r\n                />\r\n                {companies.length !== 0 && (\r\n                  <div className=\"suggestion\" style={{ color: theme === \"dark\" ? \"#fff\" : \"#000\" }}>\r\n                    {companies.map((company, index) => (\r\n                      <div\r\n                        className={`suggestion-item ${\r\n                          selectedCompanyId === company._id ? \"active\" : \"\"\r\n                        }`}\r\n                        key={index}\r\n                        onClick={() =>\r\n                          handleCompanySelection(company._id, company.company)\r\n                        }\r\n                      >\r\n                        <img\r\n                          src={company.logo || DefaultAvatar}\r\n                          alt={\"CompanyLogo\"}\r\n                          className=\"suggestion-logo\"\r\n                        />\r\n                        {company.company}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                <button className=\"btn-base startup\" onClick={handleAddStartup}>\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n            {!loading && (\r\n              <>\r\n                {companyData && companyData?.length !== 0 && (\r\n                  companyData?.founderId === loggedInUser._id && (\r\n                    <>\r\n                      <div className=\"edit_company_text rounded-4 p-4 shadow-sm\">\r\n                        <Link\r\n                          to=\"/company-profile/edit\"\r\n                          className=\"text-decoration-none  fs-5\"\r\n                        >\r\n                          Edit company details\r\n                        </Link>\r\n                      </div>\r\n                    </>\r\n                  ))}\r\n              </>\r\n            )}\r\n          </div>\r\n          <Toaster\r\n            containerStyle={{\r\n              top: \"100px\",\r\n            }}\r\n            toastOptions={{\r\n              duration: 10000,\r\n            }}\r\n          />\r\n          {!loading ? (\r\n            companyData?.length === 0 ? (\r\n              <div className=\"bg-white rounded-4 p-4\">\r\n                <p>No company found.</p>\r\n              </div>\r\n            ) : userData.startUp === null ? (\r\n              <div className=\"company__profile  shadow-sm rounded-2\">\r\n                <div className=\"company_section_one d-flex flex-column gap-4 p-3 p-md-5\">\r\n                  <h2 style={{ color: theme === \"dark\" ? \"#fff\" : \"#000\" }}>\r\n                    No Company\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <CompanyProfile\r\n                isOnelink={true}\r\n                companyData={companyData}\r\n                startup=\"true\"\r\n                setCompanyData={setCompanyData}\r\n                companyDelete={true}\r\n              />\r\n            )\r\n          ) : (\r\n            <div className=\"mx-auto w-100 bg-white rounded-4 p-5 d-flex justify-content-center min-vh-100\">\r\n              <div className=\"spinner-grow orange\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* Right side content */}\r\n        <div className=\"right__content\">\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n        {showSuccess && (\r\n          <AfterSuccessPopUp\r\n            // withoutOkButton\r\n            onClose={() => setShowSuccess(!showSuccess)}\r\n            successText=\"Company Added Successfully\"\r\n          />\r\n        )}\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","title","btnlink","theme","useSelector","selectTheme","newsItems","image","startupOneImage","id","startupTwoImage","startupThreeImage","_jsx","_Fragment","children","className","_jsxs","map","item","index","Link","to","style","textDecoration","target","color","src","alt","width","height","objectFit","text","state","user","loggedInUser","dateString","Date","toDateString","toLocaleDateString","weekday","month","day","achievementTypes","voyager","description","badge","onFire","employer","founder","oneStopShop","paperwork","inspiration","thoughtLeader","hereWeGo","helloItsMe","pleasureDoingBusiness","fallIntoTheDarkSide","showMeAround","seeYouLaterAlligator","thisIsMe","getImageByType","bronzeImage","silverImage","goldImage","achievementImage","type","isInvestor","selectIsInvestor","logo","CompanyProfilePage","navigate","useNavigate","userData","setUserData","useState","dispatch","useDispatch","companyData","setCompanyData","loading","setLoading","companies","setCompanies","selectedCompanyId","setSelectedCompanyId","showSuccess","setShowSuccess","userVisitCount","localStorage","getItem","useEffect","Number","setShowOnboarding","getStartupByFounderId","_id","then","data","setUserCompany","catch","error","console","message","getUserById","_ref2","document","setPageTitle","notify","toast","custom","t","AchievementToast","MaxWidthWrapper","SmallProfileCard","onClick","handleAddNew","placeholder","onChange","e","newValue","value","searchStartUps","_ref3","length","company","concat","handleCompanySelection","companyId","companyName","querySelector","DefaultAvatar","async","response","addStartUpToUser","isFirst","notificationBody","recipient","achievementId","addNotificationAPI","log","status","_ref4","startUp","founderId","Toaster","containerStyle","top","toastOptions","duration","role","CompanyProfile","isOnelink","startup","companyDelete","RecommendationCard","NewsCorner","AfterSuccessPopUp","onClose","successText"],"sourceRoot":""}